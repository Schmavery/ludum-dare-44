
global = this;
process = { env: {}, browser: true };
if(!global.Buffer) {
  global.Buffer = {isBuffer: false};
}
// This function is a modified version of the one created by the Webpack project
(function(modules) {
  // The module cache
  var installedModules = {};

  // The require function
  function __fastpack_require__(fromModule, request) {
    var moduleId = fromModule === null ? request : modules[fromModule].d[request];

    // Check if module is in cache
    if(installedModules[moduleId]) {
      return installedModules[moduleId].exports;
    }
    // Create a new module (and put it into the cache)
    var module = installedModules[moduleId] = {
      id: moduleId,
      l: false,
      exports: {}
    };

    var r = __fastpack_require__.bind(null, moduleId);
    r.default = __fastpack_require__.default;
    r.omitDefault = __fastpack_require__.omitDefault;
    // Execute the module function
    modules[moduleId].m.call(
      module.exports,
      module,
      module.exports,
      r,
      __fastpack_import__.bind(null, moduleId)
    );

    // Flag the module as loaded
    module.l = true;

    // Return the exports of the module
    return module.exports;
  }

  function __fastpack_import__(fromModule, request) {
    if (!window.Promise) {
      throw 'window.Promise is undefined, consider using a polyfill';
    }
    return new Promise(function(resolve, reject) {
      try {
        resolve(__fastpack_require__(fromModule, request));
      } catch (e) {
        reject(e);
      }
    });
  }

  __fastpack_require__.m = modules;
  __fastpack_require__.c = installedModules;
  __fastpack_require__.omitDefault = function(moduleVar) {
    var keys = Object.keys(moduleVar);
    var ret = {};
    for(var i = 0, l = keys.length; i < l; i++) {
      var key = keys[i];
      if (key !== 'default') {
        ret[key] = moduleVar[key];
      }
    }
    return ret;
  }
  __fastpack_require__.default = function(exports) {
    return exports.__esModule ? exports.default : exports;
  }
  return __fastpack_require__(null, __fastpack_require__.s = '$fp$main');
})
    ({
"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nvar out_of_memory = /* tuple */[\n  \"Out_of_memory\",\n  0\n];\n\nvar sys_error = /* tuple */[\n  \"Sys_error\",\n  -1\n];\n\nvar failure = /* tuple */[\n  \"Failure\",\n  -2\n];\n\nvar invalid_argument = /* tuple */[\n  \"Invalid_argument\",\n  -3\n];\n\nvar end_of_file = /* tuple */[\n  \"End_of_file\",\n  -4\n];\n\nvar division_by_zero = /* tuple */[\n  \"Division_by_zero\",\n  -5\n];\n\nvar not_found = /* tuple */[\n  \"Not_found\",\n  -6\n];\n\nvar match_failure = /* tuple */[\n  \"Match_failure\",\n  -7\n];\n\nvar stack_overflow = /* tuple */[\n  \"Stack_overflow\",\n  -8\n];\n\nvar sys_blocked_io = /* tuple */[\n  \"Sys_blocked_io\",\n  -9\n];\n\nvar assert_failure = /* tuple */[\n  \"Assert_failure\",\n  -10\n];\n\nvar undefined_recursive_module = /* tuple */[\n  \"Undefined_recursive_module\",\n  -11\n];\n\nout_of_memory.tag = 248;\n\nsys_error.tag = 248;\n\nfailure.tag = 248;\n\ninvalid_argument.tag = 248;\n\nend_of_file.tag = 248;\n\ndivision_by_zero.tag = 248;\n\nnot_found.tag = 248;\n\nmatch_failure.tag = 248;\n\nstack_overflow.tag = 248;\n\nsys_blocked_io.tag = 248;\n\nassert_failure.tag = 248;\n\nundefined_recursive_module.tag = 248;\n\nexports.out_of_memory = out_of_memory;\nexports.sys_error = sys_error;\nexports.failure = failure;\nexports.invalid_argument = invalid_argument;\nexports.end_of_file = end_of_file;\nexports.division_by_zero = division_by_zero;\nexports.not_found = not_found;\nexports.match_failure = match_failure;\nexports.stack_overflow = stack_overflow;\nexports.sys_blocked_io = sys_blocked_io;\nexports.assert_failure = assert_failure;\nexports.undefined_recursive_module = undefined_recursive_module;\n/*  Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_builtin_exceptions.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_builtin_exceptions.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$caml_array":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction caml_array_sub(x, offset, len) {\n  var result = new Array(len);\n  var j = 0;\n  var i = offset;\n  while(j < len) {\n    result[j] = x[i];\n    j = j + 1 | 0;\n    i = i + 1 | 0;\n  };\n  return result;\n}\n\nfunction len(_acc, _l) {\n  while(true) {\n    var l = _l;\n    var acc = _acc;\n    if (l) {\n      _l = l[1];\n      _acc = l[0].length + acc | 0;\n      continue ;\n    } else {\n      return acc;\n    }\n  };\n}\n\nfunction fill(arr, _i, _l) {\n  while(true) {\n    var l = _l;\n    var i = _i;\n    if (l) {\n      var x = l[0];\n      var l$1 = x.length;\n      var k = i;\n      var j = 0;\n      while(j < l$1) {\n        arr[k] = x[j];\n        k = k + 1 | 0;\n        j = j + 1 | 0;\n      };\n      _l = l[1];\n      _i = k;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction caml_array_concat(l) {\n  var v = len(0, l);\n  var result = new Array(v);\n  fill(result, 0, l);\n  return result;\n}\n\nfunction caml_array_set(xs, index, newval) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    xs[index] = newval;\n    return /* () */0;\n  }\n}\n\nfunction caml_array_get(xs, index) {\n  if (index < 0 || index >= xs.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return xs[index];\n  }\n}\n\nfunction caml_make_vect(len, init) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = init;\n  }\n  return b;\n}\n\nfunction caml_make_float_vect(len) {\n  var b = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    b[i] = 0;\n  }\n  return b;\n}\n\nfunction caml_array_blit(a1, i1, a2, i2, len) {\n  if (i2 <= i1) {\n    for(var j = 0 ,j_finish = len - 1 | 0; j <= j_finish; ++j){\n      a2[j + i2 | 0] = a1[j + i1 | 0];\n    }\n    return /* () */0;\n  } else {\n    for(var j$1 = len - 1 | 0; j$1 >= 0; --j$1){\n      a2[j$1 + i2 | 0] = a1[j$1 + i1 | 0];\n    }\n    return /* () */0;\n  }\n}\n\nfunction caml_array_dup(prim) {\n  return prim.slice(0);\n}\n\nexports.caml_array_dup = caml_array_dup;\nexports.caml_array_sub = caml_array_sub;\nexports.caml_array_concat = caml_array_concat;\nexports.caml_make_vect = caml_make_vect;\nexports.caml_make_float_vect = caml_make_float_vect;\nexports.caml_array_blit = caml_array_blit;\nexports.caml_array_get = caml_array_get;\nexports.caml_array_set = caml_array_set;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_array.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_array.js");
},
d: {"./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$curry":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_array = __fastpack_require__(\"./caml_array.js\");\n\nfunction app(_f, _args) {\n  while(true) {\n    var args = _args;\n    var f = _f;\n    var arity = f.length;\n    var len = args.length;\n    var d = arity - len | 0;\n    if (d === 0) {\n      return f.apply(null, args);\n    } else if (d < 0) {\n      _args = Caml_array.caml_array_sub(args, arity, -d | 0);\n      _f = f.apply(null, Caml_array.caml_array_sub(args, 0, arity));\n      continue ;\n    } else {\n      return (function(f,args){\n      return function (x) {\n        return app(f, args.concat(/* array */[x]));\n      }\n      }(f,args));\n    }\n  };\n}\n\nfunction curry_1(o, a0, arity) {\n  switch (arity) {\n    case 1 : \n        return o(a0);\n    case 2 : \n        return (function (param) {\n            return o(a0, param);\n          });\n    case 3 : \n        return (function (param, param$1) {\n            return o(a0, param, param$1);\n          });\n    case 4 : \n        return (function (param, param$1, param$2) {\n            return o(a0, param, param$1, param$2);\n          });\n    case 5 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, param, param$1, param$2, param$3);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, param, param$1, param$2, param$3, param$4);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4, param$5) {\n            return o(a0, param, param$1, param$2, param$3, param$4, param$5);\n          });\n    default:\n      return app(o, /* array */[a0]);\n  }\n}\n\nfunction _1(o, a0) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o(a0);\n  } else {\n    return curry_1(o, a0, arity);\n  }\n}\n\nfunction __1(o) {\n  var arity = o.length;\n  if (arity === 1) {\n    return o;\n  } else {\n    return (function (a0) {\n        return _1(o, a0);\n      });\n  }\n}\n\nfunction curry_2(o, a0, a1, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[a1]);\n    case 2 : \n        return o(a0, a1);\n    case 3 : \n        return (function (param) {\n            return o(a0, a1, param);\n          });\n    case 4 : \n        return (function (param, param$1) {\n            return o(a0, a1, param, param$1);\n          });\n    case 5 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, param, param$1, param$2);\n          });\n    case 6 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, param, param$1, param$2, param$3);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3, param$4) {\n            return o(a0, a1, param, param$1, param$2, param$3, param$4);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1\n                ]);\n  }\n}\n\nfunction _2(o, a0, a1) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o(a0, a1);\n  } else {\n    return curry_2(o, a0, a1, arity);\n  }\n}\n\nfunction __2(o) {\n  var arity = o.length;\n  if (arity === 2) {\n    return o;\n  } else {\n    return (function (a0, a1) {\n        return _2(o, a0, a1);\n      });\n  }\n}\n\nfunction curry_3(o, a0, a1, a2, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[a2]);\n    case 3 : \n        return o(a0, a1, a2);\n    case 4 : \n        return (function (param) {\n            return o(a0, a1, a2, param);\n          });\n    case 5 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, param, param$1);\n          });\n    case 6 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, param, param$1, param$2);\n          });\n    case 7 : \n        return (function (param, param$1, param$2, param$3) {\n            return o(a0, a1, a2, param, param$1, param$2, param$3);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2\n                ]);\n  }\n}\n\nfunction _3(o, a0, a1, a2) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o(a0, a1, a2);\n  } else {\n    return curry_3(o, a0, a1, a2, arity);\n  }\n}\n\nfunction __3(o) {\n  var arity = o.length;\n  if (arity === 3) {\n    return o;\n  } else {\n    return (function (a0, a1, a2) {\n        return _3(o, a0, a1, a2);\n      });\n  }\n}\n\nfunction curry_4(o, a0, a1, a2, a3, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[a3]);\n    case 4 : \n        return o(a0, a1, a2, a3);\n    case 5 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, param);\n          });\n    case 6 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, param, param$1);\n          });\n    case 7 : \n        return (function (param, param$1, param$2) {\n            return o(a0, a1, a2, a3, param, param$1, param$2);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3\n                ]);\n  }\n}\n\nfunction _4(o, a0, a1, a2, a3) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o(a0, a1, a2, a3);\n  } else {\n    return curry_4(o, a0, a1, a2, a3, arity);\n  }\n}\n\nfunction __4(o) {\n  var arity = o.length;\n  if (arity === 4) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3) {\n        return _4(o, a0, a1, a2, a3);\n      });\n  }\n}\n\nfunction curry_5(o, a0, a1, a2, a3, a4, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[a4]);\n    case 5 : \n        return o(a0, a1, a2, a3, a4);\n    case 6 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, param);\n          });\n    case 7 : \n        return (function (param, param$1) {\n            return o(a0, a1, a2, a3, a4, param, param$1);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4\n                ]);\n  }\n}\n\nfunction _5(o, a0, a1, a2, a3, a4) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o(a0, a1, a2, a3, a4);\n  } else {\n    return curry_5(o, a0, a1, a2, a3, a4, arity);\n  }\n}\n\nfunction __5(o) {\n  var arity = o.length;\n  if (arity === 5) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4) {\n        return _5(o, a0, a1, a2, a3, a4);\n      });\n  }\n}\n\nfunction curry_6(o, a0, a1, a2, a3, a4, a5, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[a5]);\n    case 6 : \n        return o(a0, a1, a2, a3, a4, a5);\n    case 7 : \n        return (function (param) {\n            return o(a0, a1, a2, a3, a4, a5, param);\n          });\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5\n                ]);\n  }\n}\n\nfunction _6(o, a0, a1, a2, a3, a4, a5) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o(a0, a1, a2, a3, a4, a5);\n  } else {\n    return curry_6(o, a0, a1, a2, a3, a4, a5, arity);\n  }\n}\n\nfunction __6(o) {\n  var arity = o.length;\n  if (arity === 6) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5) {\n        return _6(o, a0, a1, a2, a3, a4, a5);\n      });\n  }\n}\n\nfunction curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[a6]);\n    case 7 : \n        return o(a0, a1, a2, a3, a4, a5, a6);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6\n                ]);\n  }\n}\n\nfunction _7(o, a0, a1, a2, a3, a4, a5, a6) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o(a0, a1, a2, a3, a4, a5, a6);\n  } else {\n    return curry_7(o, a0, a1, a2, a3, a4, a5, a6, arity);\n  }\n}\n\nfunction __7(o) {\n  var arity = o.length;\n  if (arity === 7) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6) {\n        return _7(o, a0, a1, a2, a3, a4, a5, a6);\n      });\n  }\n}\n\nfunction curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity) {\n  switch (arity) {\n    case 1 : \n        return app(o(a0), /* array */[\n                    a1,\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 2 : \n        return app(o(a0, a1), /* array */[\n                    a2,\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 3 : \n        return app(o(a0, a1, a2), /* array */[\n                    a3,\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 4 : \n        return app(o(a0, a1, a2, a3), /* array */[\n                    a4,\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 5 : \n        return app(o(a0, a1, a2, a3, a4), /* array */[\n                    a5,\n                    a6,\n                    a7\n                  ]);\n    case 6 : \n        return app(o(a0, a1, a2, a3, a4, a5), /* array */[\n                    a6,\n                    a7\n                  ]);\n    case 7 : \n        return app(o(a0, a1, a2, a3, a4, a5, a6), /* array */[a7]);\n    default:\n      return app(o, /* array */[\n                  a0,\n                  a1,\n                  a2,\n                  a3,\n                  a4,\n                  a5,\n                  a6,\n                  a7\n                ]);\n  }\n}\n\nfunction _8(o, a0, a1, a2, a3, a4, a5, a6, a7) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o(a0, a1, a2, a3, a4, a5, a6, a7);\n  } else {\n    return curry_8(o, a0, a1, a2, a3, a4, a5, a6, a7, arity);\n  }\n}\n\nfunction __8(o) {\n  var arity = o.length;\n  if (arity === 8) {\n    return o;\n  } else {\n    return (function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return _8(o, a0, a1, a2, a3, a4, a5, a6, a7);\n      });\n  }\n}\n\nexports.app = app;\nexports.curry_1 = curry_1;\nexports._1 = _1;\nexports.__1 = __1;\nexports.curry_2 = curry_2;\nexports._2 = _2;\nexports.__2 = __2;\nexports.curry_3 = curry_3;\nexports._3 = _3;\nexports.__3 = __3;\nexports.curry_4 = curry_4;\nexports._4 = _4;\nexports.__4 = __4;\nexports.curry_5 = curry_5;\nexports._5 = _5;\nexports.__5 = __5;\nexports.curry_6 = curry_6;\nexports._6 = _6;\nexports.__6 = __6;\nexports.curry_7 = curry_7;\nexports._7 = _7;\nexports.__7 = __7;\nexports.curry_8 = curry_8;\nexports._8 = _8;\nexports.__8 = __8;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/curry.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/curry.js");
},
d: {"./caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array"}
},
"NM$$bsb$$_$$native$lib$js$block":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nfunction __(tag, block) {\n  block.tag = tag;\n  return block;\n}\n\nfunction record(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsRecord\"), {\n              value: meta\n            });\n}\n\nfunction variant(meta, tag, xs) {\n  xs.tag = tag;\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction simpleVariant(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsVariant\"), {\n              value: meta\n            });\n}\n\nfunction localModule(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsLocalModule\"), {\n              value: meta\n            });\n}\n\nfunction polyVar(meta, xs) {\n  return Object.defineProperty(xs, Symbol.for(\"BsPolyVar\"), {\n              value: meta\n            });\n}\n\nexports.__ = __;\nexports.record = record;\nexports.variant = variant;\nexports.simpleVariant = simpleVariant;\nexports.localModule = localModule;\nexports.polyVar = polyVar;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/block.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/block.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$caml_primitive":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nfunction caml_int_compare(x, y) {\n  if (x < y) {\n    return -1;\n  } else if (x === y) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_bool_compare(x, y) {\n  if (x) {\n    if (y) {\n      return 0;\n    } else {\n      return 1;\n    }\n  } else if (y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_float_compare(x, y) {\n  if (x === y) {\n    return 0;\n  } else if (x < y) {\n    return -1;\n  } else if (x > y || x === x) {\n    return 1;\n  } else if (y === y) {\n    return -1;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_string_compare(s1, s2) {\n  if (s1 === s2) {\n    return 0;\n  } else if (s1 < s2) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction caml_bytes_compare_aux(s1, s2, _off, len, def) {\n  while(true) {\n    var off = _off;\n    if (off < len) {\n      var a = s1[off];\n      var b = s2[off];\n      if (a > b) {\n        return 1;\n      } else if (a < b) {\n        return -1;\n      } else {\n        _off = off + 1 | 0;\n        continue ;\n      }\n    } else {\n      return def;\n    }\n  };\n}\n\nfunction caml_bytes_compare(s1, s2) {\n  var len1 = s1.length;\n  var len2 = s2.length;\n  if (len1 === len2) {\n    return caml_bytes_compare_aux(s1, s2, 0, len1, 0);\n  } else if (len1 < len2) {\n    return caml_bytes_compare_aux(s1, s2, 0, len1, -1);\n  } else {\n    return caml_bytes_compare_aux(s1, s2, 0, len2, 1);\n  }\n}\n\nfunction caml_bytes_equal(s1, s2) {\n  var len1 = s1.length;\n  var len2 = s2.length;\n  if (len1 === len2) {\n    var s1$1 = s1;\n    var s2$1 = s2;\n    var _off = 0;\n    var len = len1;\n    while(true) {\n      var off = _off;\n      if (off === len) {\n        return true;\n      } else {\n        var a = s1$1[off];\n        var b = s2$1[off];\n        if (a === b) {\n          _off = off + 1 | 0;\n          continue ;\n        } else {\n          return false;\n        }\n      }\n    };\n  } else {\n    return false;\n  }\n}\n\nfunction caml_bool_min(x, y) {\n  if (x) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction caml_int_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_min(x, y) {\n  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_bool_max(x, y) {\n  if (x) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_float_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_string_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_nativeint_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_int32_max(x, y) {\n  if (x > y) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nvar caml_nativeint_compare = caml_int_compare;\n\nvar caml_int32_compare = caml_int_compare;\n\nexports.caml_bytes_compare = caml_bytes_compare;\nexports.caml_bytes_equal = caml_bytes_equal;\nexports.caml_int_compare = caml_int_compare;\nexports.caml_bool_compare = caml_bool_compare;\nexports.caml_float_compare = caml_float_compare;\nexports.caml_nativeint_compare = caml_nativeint_compare;\nexports.caml_string_compare = caml_string_compare;\nexports.caml_int32_compare = caml_int32_compare;\nexports.caml_bool_min = caml_bool_min;\nexports.caml_int_min = caml_int_min;\nexports.caml_float_min = caml_float_min;\nexports.caml_string_min = caml_string_min;\nexports.caml_nativeint_min = caml_nativeint_min;\nexports.caml_int32_min = caml_int32_min;\nexports.caml_bool_max = caml_bool_max;\nexports.caml_int_max = caml_int_max;\nexports.caml_float_max = caml_float_max;\nexports.caml_string_max = caml_string_max;\nexports.caml_nativeint_max = caml_nativeint_max;\nexports.caml_int32_max = caml_int32_max;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_primitive.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_primitive.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$caml_obj":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Block = __fastpack_require__(\"./block.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction caml_obj_block(tag, size) {\n  var v = new Array(size);\n  v.tag = tag;\n  return v;\n}\n\nfunction caml_obj_dup(x) {\n  var len = x.length | 0;\n  var v = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    v[i] = x[i];\n  }\n  v.tag = x.tag | 0;\n  return v;\n}\n\nfunction caml_obj_truncate(x, new_size) {\n  var len = x.length | 0;\n  if (new_size <= 0 || new_size > len) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Obj.truncate\"\n        ];\n  } else if (len !== new_size) {\n    for(var i = new_size ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      x[i] = 0;\n    }\n    x.length = new_size;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_lazy_make_forward(x) {\n  return Block.__(250, [x]);\n}\n\nfunction caml_update_dummy(x, y) {\n  var len = y.length | 0;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    x[i] = y[i];\n  }\n  var y_tag = y.tag | 0;\n  if (y_tag !== 0) {\n    x.tag = y_tag;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nvar for_in = function (o,foo){\n        for (var x in o) { foo(x) }\n      };\n\nfunction caml_compare(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return 0;\n    } else {\n      var a_type = typeof a;\n      var b_type = typeof b;\n      var exit = 0;\n      switch (a_type) {\n        case \"boolean\" : \n            if (b_type === \"boolean\") {\n              return Caml_primitive.caml_bool_compare(a, b);\n            } else {\n              exit = 1;\n            }\n            break;\n        case \"function\" : \n            if (b_type === \"function\") {\n              throw [\n                    Caml_builtin_exceptions.invalid_argument,\n                    \"compare: functional value\"\n                  ];\n            } else {\n              exit = 1;\n            }\n            break;\n        case \"number\" : \n            if (b_type === \"number\") {\n              return Caml_primitive.caml_int_compare(a, b);\n            } else {\n              exit = 1;\n            }\n            break;\n        case \"string\" : \n            if (b_type === \"string\") {\n              return Caml_primitive.caml_string_compare(a, b);\n            } else {\n              return 1;\n            }\n        case \"undefined\" : \n            return -1;\n        default:\n          exit = 1;\n      }\n      if (exit === 1) {\n        switch (b_type) {\n          case \"string\" : \n              return -1;\n          case \"undefined\" : \n              return 1;\n          default:\n            if (a_type === \"boolean\") {\n              return 1;\n            } else if (b_type === \"boolean\") {\n              return -1;\n            } else if (a_type === \"function\") {\n              return 1;\n            } else if (b_type === \"function\") {\n              return -1;\n            } else if (a_type === \"number\") {\n              if (b === null || b.tag === 256) {\n                return 1;\n              } else {\n                return -1;\n              }\n            } else if (b_type === \"number\") {\n              if (a === null || a.tag === 256) {\n                return -1;\n              } else {\n                return 1;\n              }\n            } else if (a === null) {\n              if (b.tag === 256) {\n                return 1;\n              } else {\n                return -1;\n              }\n            } else if (b === null) {\n              if (a.tag === 256) {\n                return -1;\n              } else {\n                return 1;\n              }\n            } else {\n              var tag_a = a.tag | 0;\n              var tag_b = b.tag | 0;\n              if (tag_a === 250) {\n                _a = a[0];\n                continue ;\n              } else if (tag_b === 250) {\n                _b = b[0];\n                continue ;\n              } else if (tag_a === 256) {\n                if (tag_b === 256) {\n                  return Caml_primitive.caml_int_compare(a[1], b[1]);\n                } else {\n                  return -1;\n                }\n              } else if (tag_a === 248) {\n                return Caml_primitive.caml_int_compare(a[1], b[1]);\n              } else if (tag_a === 251) {\n                throw [\n                      Caml_builtin_exceptions.invalid_argument,\n                      \"equal: abstract value\"\n                    ];\n              } else if (tag_a !== tag_b) {\n                if (tag_a < tag_b) {\n                  return -1;\n                } else {\n                  return 1;\n                }\n              } else {\n                var len_a = a.length | 0;\n                var len_b = b.length | 0;\n                if (len_a === len_b) {\n                  if (Array.isArray(a)) {\n                    var a$1 = a;\n                    var b$1 = b;\n                    var _i = 0;\n                    var same_length = len_a;\n                    while(true) {\n                      var i = _i;\n                      if (i === same_length) {\n                        return 0;\n                      } else {\n                        var res = caml_compare(a$1[i], b$1[i]);\n                        if (res !== 0) {\n                          return res;\n                        } else {\n                          _i = i + 1 | 0;\n                          continue ;\n                        }\n                      }\n                    };\n                  } else {\n                    var a$2 = a;\n                    var b$2 = b;\n                    var min_key_lhs = /* record */[/* contents */undefined];\n                    var min_key_rhs = /* record */[/* contents */undefined];\n                    var do_key = function (param, key) {\n                      var min_key = param[2];\n                      var b = param[1];\n                      if (!b.hasOwnProperty(key) || caml_compare(param[0][key], b[key]) > 0) {\n                        var match = min_key[0];\n                        if (match !== undefined && key >= match) {\n                          return 0;\n                        } else {\n                          min_key[0] = key;\n                          return /* () */0;\n                        }\n                      } else {\n                        return 0;\n                      }\n                    };\n                    var partial_arg = /* tuple */[\n                      a$2,\n                      b$2,\n                      min_key_rhs\n                    ];\n                    var do_key_a = (function(partial_arg){\n                    return function do_key_a(param) {\n                      return do_key(partial_arg, param);\n                    }\n                    }(partial_arg));\n                    var partial_arg$1 = /* tuple */[\n                      b$2,\n                      a$2,\n                      min_key_lhs\n                    ];\n                    var do_key_b = (function(partial_arg$1){\n                    return function do_key_b(param) {\n                      return do_key(partial_arg$1, param);\n                    }\n                    }(partial_arg$1));\n                    for_in(a$2, do_key_a);\n                    for_in(b$2, do_key_b);\n                    var match = min_key_lhs[0];\n                    var match$1 = min_key_rhs[0];\n                    if (match !== undefined) {\n                      if (match$1 !== undefined) {\n                        return Caml_primitive.caml_string_compare(match, match$1);\n                      } else {\n                        return -1;\n                      }\n                    } else if (match$1 !== undefined) {\n                      return 1;\n                    } else {\n                      return 0;\n                    }\n                  }\n                } else if (len_a < len_b) {\n                  var a$3 = a;\n                  var b$3 = b;\n                  var _i$1 = 0;\n                  var short_length = len_a;\n                  while(true) {\n                    var i$1 = _i$1;\n                    if (i$1 === short_length) {\n                      return -1;\n                    } else {\n                      var res$1 = caml_compare(a$3[i$1], b$3[i$1]);\n                      if (res$1 !== 0) {\n                        return res$1;\n                      } else {\n                        _i$1 = i$1 + 1 | 0;\n                        continue ;\n                      }\n                    }\n                  };\n                } else {\n                  var a$4 = a;\n                  var b$4 = b;\n                  var _i$2 = 0;\n                  var short_length$1 = len_b;\n                  while(true) {\n                    var i$2 = _i$2;\n                    if (i$2 === short_length$1) {\n                      return 1;\n                    } else {\n                      var res$2 = caml_compare(a$4[i$2], b$4[i$2]);\n                      if (res$2 !== 0) {\n                        return res$2;\n                      } else {\n                        _i$2 = i$2 + 1 | 0;\n                        continue ;\n                      }\n                    }\n                  };\n                }\n              }\n            }\n        }\n      }\n      \n    }\n  };\n}\n\nfunction caml_equal(_a, _b) {\n  while(true) {\n    var b = _b;\n    var a = _a;\n    if (a === b) {\n      return true;\n    } else {\n      var a_type = typeof a;\n      if (a_type === \"string\" || a_type === \"number\" || a_type === \"boolean\" || a_type === \"undefined\" || a === null) {\n        return false;\n      } else {\n        var b_type = typeof b;\n        if (a_type === \"function\" || b_type === \"function\") {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"equal: functional value\"\n              ];\n        } else if (b_type === \"number\" || b_type === \"undefined\" || b === null) {\n          return false;\n        } else {\n          var tag_a = a.tag | 0;\n          var tag_b = b.tag | 0;\n          if (tag_a === 250) {\n            _a = a[0];\n            continue ;\n          } else if (tag_b === 250) {\n            _b = b[0];\n            continue ;\n          } else if (tag_a === 248) {\n            return a[1] === b[1];\n          } else if (tag_a === 251) {\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"equal: abstract value\"\n                ];\n          } else if (tag_a !== tag_b) {\n            return false;\n          } else if (tag_a === 256) {\n            return a[1] === b[1];\n          } else {\n            var len_a = a.length | 0;\n            var len_b = b.length | 0;\n            if (len_a === len_b) {\n              if (Array.isArray(a)) {\n                var a$1 = a;\n                var b$1 = b;\n                var _i = 0;\n                var same_length = len_a;\n                while(true) {\n                  var i = _i;\n                  if (i === same_length) {\n                    return true;\n                  } else if (caml_equal(a$1[i], b$1[i])) {\n                    _i = i + 1 | 0;\n                    continue ;\n                  } else {\n                    return false;\n                  }\n                };\n              } else {\n                var a$2 = a;\n                var b$2 = b;\n                var result = /* record */[/* contents */true];\n                var do_key_a = (function(b$2,result){\n                return function do_key_a(key) {\n                  if (b$2.hasOwnProperty(key)) {\n                    return 0;\n                  } else {\n                    result[0] = false;\n                    return /* () */0;\n                  }\n                }\n                }(b$2,result));\n                var do_key_b = (function(a$2,b$2,result){\n                return function do_key_b(key) {\n                  if (!a$2.hasOwnProperty(key) || !caml_equal(b$2[key], a$2[key])) {\n                    result[0] = false;\n                    return /* () */0;\n                  } else {\n                    return 0;\n                  }\n                }\n                }(a$2,b$2,result));\n                for_in(a$2, do_key_a);\n                if (result[0]) {\n                  for_in(b$2, do_key_b);\n                }\n                return result[0];\n              }\n            } else {\n              return false;\n            }\n          }\n        }\n      }\n    }\n  };\n}\n\nfunction caml_equal_null(x, y) {\n  if (y !== null) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_undefined(x, y) {\n  if (y !== undefined) {\n    return caml_equal(x, y);\n  } else {\n    return x === y;\n  }\n}\n\nfunction caml_equal_nullable(x, y) {\n  if (y == null) {\n    return x === y;\n  } else {\n    return caml_equal(x, y);\n  }\n}\n\nfunction caml_notequal(a, b) {\n  return !caml_equal(a, b);\n}\n\nfunction caml_greaterequal(a, b) {\n  return caml_compare(a, b) >= 0;\n}\n\nfunction caml_greaterthan(a, b) {\n  return caml_compare(a, b) > 0;\n}\n\nfunction caml_lessequal(a, b) {\n  return caml_compare(a, b) <= 0;\n}\n\nfunction caml_lessthan(a, b) {\n  return caml_compare(a, b) < 0;\n}\n\nfunction caml_min(x, y) {\n  if (caml_compare(x, y) <= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_max(x, y) {\n  if (caml_compare(x, y) >= 0) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction caml_obj_set_tag(prim, prim$1) {\n  prim.tag = prim$1;\n  return /* () */0;\n}\n\nexports.caml_obj_block = caml_obj_block;\nexports.caml_obj_dup = caml_obj_dup;\nexports.caml_obj_truncate = caml_obj_truncate;\nexports.caml_lazy_make_forward = caml_lazy_make_forward;\nexports.caml_update_dummy = caml_update_dummy;\nexports.caml_compare = caml_compare;\nexports.caml_equal = caml_equal;\nexports.caml_equal_null = caml_equal_null;\nexports.caml_equal_undefined = caml_equal_undefined;\nexports.caml_equal_nullable = caml_equal_nullable;\nexports.caml_notequal = caml_notequal;\nexports.caml_greaterequal = caml_greaterequal;\nexports.caml_greaterthan = caml_greaterthan;\nexports.caml_lessthan = caml_lessthan;\nexports.caml_lessequal = caml_lessequal;\nexports.caml_min = caml_min;\nexports.caml_max = caml_max;\nexports.caml_obj_set_tag = caml_obj_set_tag;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_obj.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_obj.js");
},
d: {"./block.js":"NM$$bsb$$_$$native$lib$js$block","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_io":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction $caret(prim, prim$1) {\n  return prim + prim$1;\n}\n\nvar stdout = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write)) {\n        return ( process.stdout.write )(s);\n      } else if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nvar stderr = /* record */[\n  /* buffer */\"\",\n  /* output */(function (param, s) {\n      var v = s.length - 1 | 0;\n      if (s[v] === \"\\n\") {\n        console.log(s.slice(0, v));\n        return /* () */0;\n      } else {\n        console.log(s);\n        return /* () */0;\n      }\n    })\n];\n\nfunction caml_ml_open_descriptor_in(i) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_open_descriptor_in not implemented\"\n      ];\n}\n\nfunction caml_ml_open_descriptor_out(i) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_open_descriptor_out not implemented\"\n      ];\n}\n\nfunction caml_ml_flush(oc) {\n  if (oc[/* buffer */0] !== \"\") {\n    Curry._2(oc[/* output */1], oc, oc[/* buffer */0]);\n    oc[/* buffer */0] = \"\";\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nvar node_std_output = (function (s){\n   return (typeof process !== \"undefined\") && process.stdout && (process.stdout.write(s), true);\n   }\n);\n\nfunction caml_ml_output(oc, str, offset, len) {\n  var str$1 = offset === 0 && len === str.length ? str : str.slice(offset, len);\n  if (( (typeof process !== \"undefined\") && process.stdout && process.stdout.write ) && oc === stdout) {\n    return ( process.stdout.write )(str$1);\n  } else {\n    var id = str$1.lastIndexOf(\"\\n\");\n    if (id < 0) {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1;\n      return /* () */0;\n    } else {\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(0, id + 1 | 0);\n      caml_ml_flush(oc);\n      oc[/* buffer */0] = oc[/* buffer */0] + str$1.slice(id + 1 | 0);\n      return /* () */0;\n    }\n  }\n}\n\nfunction caml_ml_output_char(oc, $$char) {\n  return caml_ml_output(oc, String.fromCharCode($$char), 0, 1);\n}\n\nfunction caml_ml_input(ic, bytes, offset, len) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_input ic not implemented\"\n      ];\n}\n\nfunction caml_ml_input_char(ic) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_ml_input_char not implemnted\"\n      ];\n}\n\nfunction caml_ml_out_channels_list(param) {\n  return /* :: */[\n          stdout,\n          /* :: */[\n            stderr,\n            /* [] */0\n          ]\n        ];\n}\n\nvar stdin = undefined;\n\nexports.$caret = $caret;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.caml_ml_open_descriptor_in = caml_ml_open_descriptor_in;\nexports.caml_ml_open_descriptor_out = caml_ml_open_descriptor_out;\nexports.caml_ml_flush = caml_ml_flush;\nexports.node_std_output = node_std_output;\nexports.caml_ml_output = caml_ml_output;\nexports.caml_ml_output_char = caml_ml_output_char;\nexports.caml_ml_input = caml_ml_input;\nexports.caml_ml_input_char = caml_ml_input_char;\nexports.caml_ml_out_channels_list = caml_ml_out_channels_list;\n/* node_std_output Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_io.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_io.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_sys":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction caml_sys_getenv(s) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    var match$1 = match.env[s];\n    if (match$1 !== undefined) {\n      return match$1;\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  } else {\n    throw Caml_builtin_exceptions.not_found;\n  }\n}\n\nfunction caml_sys_time(param) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.uptime();\n  } else {\n    return -1;\n  }\n}\n\nfunction caml_sys_random_seed(param) {\n  return /* array */[((Date.now() | 0) ^ 4294967295) * Math.random() | 0];\n}\n\nfunction caml_sys_system_command(_cmd) {\n  return 127;\n}\n\nfunction caml_sys_getcwd(param) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.cwd();\n  } else {\n    return \"/\";\n  }\n}\n\nfunction caml_sys_get_argv(param) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    if (match.argv == null) {\n      return /* tuple */[\n              \"\",\n              /* array */[\"\"]\n            ];\n    } else {\n      return /* tuple */[\n              match.argv[0],\n              match.argv\n            ];\n    }\n  } else {\n    return /* tuple */[\n            \"\",\n            /* array */[\"\"]\n          ];\n  }\n}\n\nfunction caml_sys_exit(exit_code) {\n  var match = typeof (process) === \"undefined\" ? undefined : (process);\n  if (match !== undefined) {\n    return match.exit(exit_code);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction caml_sys_is_directory(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_is_directory not implemented\"\n      ];\n}\n\nfunction caml_sys_file_exists(_s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        \"caml_sys_file_exists not implemented\"\n      ];\n}\n\nexports.caml_sys_getenv = caml_sys_getenv;\nexports.caml_sys_time = caml_sys_time;\nexports.caml_sys_random_seed = caml_sys_random_seed;\nexports.caml_sys_system_command = caml_sys_system_command;\nexports.caml_sys_getcwd = caml_sys_getcwd;\nexports.caml_sys_get_argv = caml_sys_get_argv;\nexports.caml_sys_exit = caml_sys_exit;\nexports.caml_sys_is_directory = caml_sys_is_directory;\nexports.caml_sys_file_exists = caml_sys_file_exists;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_sys.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_sys.js");
},
d: {"./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_int32":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction div(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x / y | 0;\n  }\n}\n\nfunction mod_(x, y) {\n  if (y === 0) {\n    throw Caml_builtin_exceptions.division_by_zero;\n  } else {\n    return x % y;\n  }\n}\n\nfunction caml_bswap16(x) {\n  return ((x & 255) << 8) | ((x & 65280) >>> 8);\n}\n\nfunction caml_int32_bswap(x) {\n  return ((x & 255) << 24) | ((x & 65280) << 8) | ((x & 16711680) >>> 8) | ((x & 4278190080) >>> 24);\n}\n\nvar imul = ( Math.imul || function (x,y) {\n  y |= 0; return ((((x >> 16) * y) << 16) + (x & 0xffff) * y)|0; \n}\n);\n\nvar caml_nativeint_bswap = caml_int32_bswap;\n\nexports.div = div;\nexports.mod_ = mod_;\nexports.caml_bswap16 = caml_bswap16;\nexports.caml_int32_bswap = caml_int32_bswap;\nexports.caml_nativeint_bswap = caml_nativeint_bswap;\nexports.imul = imul;\n/* imul Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_int32.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_int32.js");
},
d: {"./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_utils":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nvar repeat = ( (String.prototype.repeat && function (count,self){return self.repeat(count)}) ||\n                                                  function(count , self) {\n        if (self.length == 0 || count == 0) {\n            return '';\n        }\n        // Ensuring count is a 31-bit integer allows us to heavily optimize the\n        // main part. But anyway, most current (August 2014) browsers can't handle\n        // strings 1 << 28 chars or longer, so:\n        if (self.length * count >= 1 << 28) {\n            throw new RangeError('repeat count must not overflow maximum string size');\n        }\n        var rpt = '';\n        for (;;) {\n            if ((count & 1) == 1) {\n                rpt += self;\n            }\n            count >>>= 1;\n            if (count == 0) {\n                break;\n            }\n            self += self;\n        }\n        return rpt;\n    }\n);\n\nexports.repeat = repeat;\n/* repeat Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_utils.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_utils.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$caml_int64":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\nvar Caml_utils = __fastpack_require__(\"./caml_utils.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nvar min_int = /* record */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nvar max_int = /* record */[\n  /* hi */2147483647,\n  /* lo */1\n];\n\nvar one = /* record */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar zero = /* record */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar neg_one = /* record */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nfunction neg_signed(x) {\n  return (x & 2147483648) !== 0;\n}\n\nfunction add(param, param$1) {\n  var other_low_ = param$1[/* lo */1];\n  var this_low_ = param[/* lo */1];\n  var lo = this_low_ + other_low_ & 4294967295;\n  var overflow = neg_signed(this_low_) && (neg_signed(other_low_) || !neg_signed(lo)) || neg_signed(other_low_) && !neg_signed(lo) ? 1 : 0;\n  var hi = param[/* hi */0] + param$1[/* hi */0] + overflow & 4294967295;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction not(param) {\n  var hi = param[/* hi */0] ^ -1;\n  var lo = param[/* lo */1] ^ -1;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction eq(x, y) {\n  if (x[/* hi */0] === y[/* hi */0]) {\n    return x[/* lo */1] === y[/* lo */1];\n  } else {\n    return false;\n  }\n}\n\nfunction equal_null(x, y) {\n  if (y !== null) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_undefined(x, y) {\n  if (y !== undefined) {\n    return eq(x, y);\n  } else {\n    return false;\n  }\n}\n\nfunction equal_nullable(x, y) {\n  if (y == null) {\n    return false;\n  } else {\n    return eq(x, y);\n  }\n}\n\nfunction neg(x) {\n  if (eq(x, min_int)) {\n    return min_int;\n  } else {\n    return add(not(x), one);\n  }\n}\n\nfunction sub(x, y) {\n  return add(x, neg(y));\n}\n\nfunction lsl_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var lo = x[/* lo */1];\n    if (numBits >= 32) {\n      return /* record */[\n              /* hi */(lo << (numBits - 32 | 0)),\n              /* lo */0\n            ];\n    } else {\n      var hi = (lo >>> (32 - numBits | 0)) | (x[/* hi */0] << numBits);\n      return /* record */[\n              /* hi */hi,\n              /* lo */((lo << numBits) >>> 0)\n            ];\n    }\n  }\n}\n\nfunction lsr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    var offset = numBits - 32 | 0;\n    if (offset === 0) {\n      return /* record */[\n              /* hi */0,\n              /* lo */(hi >>> 0)\n            ];\n    } else if (offset > 0) {\n      var lo = (hi >>> offset);\n      return /* record */[\n              /* hi */0,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var hi$1 = (hi >>> numBits);\n      var lo$1 = (hi << (-offset | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction asr_(x, numBits) {\n  if (numBits === 0) {\n    return x;\n  } else {\n    var hi = x[/* hi */0];\n    if (numBits < 32) {\n      var hi$1 = (hi >> numBits);\n      var lo = (hi << (32 - numBits | 0)) | (x[/* lo */1] >>> numBits);\n      return /* record */[\n              /* hi */hi$1,\n              /* lo */(lo >>> 0)\n            ];\n    } else {\n      var lo$1 = (hi >> (numBits - 32 | 0));\n      return /* record */[\n              /* hi */hi >= 0 ? 0 : -1,\n              /* lo */(lo$1 >>> 0)\n            ];\n    }\n  }\n}\n\nfunction is_zero(param) {\n  if (param[/* hi */0] !== 0 || param[/* lo */1] !== 0) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction mul(_this, _other) {\n  while(true) {\n    var other = _other;\n    var $$this = _this;\n    var exit = 0;\n    var lo;\n    var this_hi = $$this[/* hi */0];\n    var exit$1 = 0;\n    var exit$2 = 0;\n    var exit$3 = 0;\n    if (this_hi !== 0 || $$this[/* lo */1] !== 0) {\n      exit$3 = 4;\n    } else {\n      return zero;\n    }\n    if (exit$3 === 4) {\n      if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n        exit$2 = 3;\n      } else {\n        return zero;\n      }\n    }\n    if (exit$2 === 3) {\n      if (this_hi !== -2147483648 || $$this[/* lo */1] !== 0) {\n        exit$1 = 2;\n      } else {\n        lo = other[/* lo */1];\n        exit = 1;\n      }\n    }\n    if (exit$1 === 2) {\n      var other_hi = other[/* hi */0];\n      var lo$1 = $$this[/* lo */1];\n      var exit$4 = 0;\n      if (other_hi !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$4 = 3;\n      } else {\n        lo = lo$1;\n        exit = 1;\n      }\n      if (exit$4 === 3) {\n        var other_lo = other[/* lo */1];\n        if (this_hi < 0) {\n          if (other_hi < 0) {\n            _other = neg(other);\n            _this = neg($$this);\n            continue ;\n          } else {\n            return neg(mul(neg($$this), other));\n          }\n        } else if (other_hi < 0) {\n          return neg(mul($$this, neg(other)));\n        } else {\n          var a48 = (this_hi >>> 16);\n          var a32 = this_hi & 65535;\n          var a16 = (lo$1 >>> 16);\n          var a00 = lo$1 & 65535;\n          var b48 = (other_hi >>> 16);\n          var b32 = other_hi & 65535;\n          var b16 = (other_lo >>> 16);\n          var b00 = other_lo & 65535;\n          var c48 = 0;\n          var c32 = 0;\n          var c16 = 0;\n          var c00 = a00 * b00;\n          c16 = (c00 >>> 16) + a16 * b00;\n          c32 = (c16 >>> 16);\n          c16 = (c16 & 65535) + a00 * b16;\n          c32 = c32 + (c16 >>> 16) + a32 * b00;\n          c48 = (c32 >>> 16);\n          c32 = (c32 & 65535) + a16 * b16;\n          c48 += (c32 >>> 16);\n          c32 = (c32 & 65535) + a00 * b32;\n          c48 += (c32 >>> 16);\n          c32 = c32 & 65535;\n          c48 = c48 + (a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48) & 65535;\n          var hi = c32 | (c48 << 16);\n          var lo$2 = c00 & 65535 | ((c16 & 65535) << 16);\n          return /* record */[\n                  /* hi */hi,\n                  /* lo */(lo$2 >>> 0)\n                ];\n        }\n      }\n      \n    }\n    if (exit === 1) {\n      if ((lo & 1) === 0) {\n        return zero;\n      } else {\n        return min_int;\n      }\n    }\n    \n  };\n}\n\nfunction swap(param) {\n  var hi = Caml_int32.caml_int32_bswap(param[/* lo */1]);\n  var lo = Caml_int32.caml_int32_bswap(param[/* hi */0]);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction xor(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] ^ param$1[/* hi */0],\n          /* lo */((param[/* lo */1] ^ param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction or_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] | param$1[/* hi */0],\n          /* lo */((param[/* lo */1] | param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction and_(param, param$1) {\n  return /* record */[\n          /* hi */param[/* hi */0] & param$1[/* hi */0],\n          /* lo */((param[/* lo */1] & param$1[/* lo */1]) >>> 0)\n        ];\n}\n\nfunction ge(param, param$1) {\n  var other_hi = param$1[/* hi */0];\n  var hi = param[/* hi */0];\n  if (hi > other_hi) {\n    return true;\n  } else if (hi < other_hi) {\n    return false;\n  } else {\n    return param[/* lo */1] >= param$1[/* lo */1];\n  }\n}\n\nfunction neq(x, y) {\n  return !eq(x, y);\n}\n\nfunction lt(x, y) {\n  return !ge(x, y);\n}\n\nfunction gt(x, y) {\n  if (x[/* hi */0] > y[/* hi */0]) {\n    return true;\n  } else if (x[/* hi */0] < y[/* hi */0]) {\n    return false;\n  } else {\n    return x[/* lo */1] > y[/* lo */1];\n  }\n}\n\nfunction le(x, y) {\n  return !gt(x, y);\n}\n\nfunction min(x, y) {\n  if (ge(x, y)) {\n    return y;\n  } else {\n    return x;\n  }\n}\n\nfunction max(x, y) {\n  if (gt(x, y)) {\n    return x;\n  } else {\n    return y;\n  }\n}\n\nfunction to_float(param) {\n  return param[/* hi */0] * (0x100000000) + param[/* lo */1];\n}\n\nvar two_ptr_32_dbl = Math.pow(2, 32);\n\nvar two_ptr_63_dbl = Math.pow(2, 63);\n\nvar neg_two_ptr_63 = -Math.pow(2, 63);\n\nfunction of_float(x) {\n  if (isNaN(x) || !isFinite(x)) {\n    return zero;\n  } else if (x <= neg_two_ptr_63) {\n    return min_int;\n  } else if (x + 1 >= two_ptr_63_dbl) {\n    return max_int;\n  } else if (x < 0) {\n    return neg(of_float(-x));\n  } else {\n    var hi = x / two_ptr_32_dbl | 0;\n    var lo = x % two_ptr_32_dbl | 0;\n    return /* record */[\n            /* hi */hi,\n            /* lo */(lo >>> 0)\n          ];\n  }\n}\n\nfunction div(_self, _other) {\n  while(true) {\n    var other = _other;\n    var self = _self;\n    var self_hi = self[/* hi */0];\n    var exit = 0;\n    var exit$1 = 0;\n    if (other[/* hi */0] !== 0 || other[/* lo */1] !== 0) {\n      exit$1 = 2;\n    } else {\n      throw Caml_builtin_exceptions.division_by_zero;\n    }\n    if (exit$1 === 2) {\n      if (self_hi !== -2147483648) {\n        if (self_hi !== 0 || self[/* lo */1] !== 0) {\n          exit = 1;\n        } else {\n          return zero;\n        }\n      } else if (self[/* lo */1] !== 0) {\n        exit = 1;\n      } else if (eq(other, one) || eq(other, neg_one)) {\n        return self;\n      } else if (eq(other, min_int)) {\n        return one;\n      } else {\n        var other_hi = other[/* hi */0];\n        var half_this = asr_(self, 1);\n        var approx = lsl_(div(half_this, other), 1);\n        var exit$2 = 0;\n        if (approx[/* hi */0] !== 0 || approx[/* lo */1] !== 0) {\n          exit$2 = 3;\n        } else if (other_hi < 0) {\n          return one;\n        } else {\n          return neg(one);\n        }\n        if (exit$2 === 3) {\n          var y = mul(other, approx);\n          var rem = add(self, neg(y));\n          return add(approx, div(rem, other));\n        }\n        \n      }\n    }\n    if (exit === 1) {\n      var other_hi$1 = other[/* hi */0];\n      var exit$3 = 0;\n      if (other_hi$1 !== -2147483648 || other[/* lo */1] !== 0) {\n        exit$3 = 2;\n      } else {\n        return zero;\n      }\n      if (exit$3 === 2) {\n        if (self_hi < 0) {\n          if (other_hi$1 < 0) {\n            _other = neg(other);\n            _self = neg(self);\n            continue ;\n          } else {\n            return neg(div(neg(self), other));\n          }\n        } else if (other_hi$1 < 0) {\n          return neg(div(self, neg(other)));\n        } else {\n          var res = zero;\n          var rem$1 = self;\n          while(ge(rem$1, other)) {\n            var approx$1 = Caml_primitive.caml_float_max(1, Math.floor(to_float(rem$1) / to_float(other)));\n            var log2 = Math.ceil(Math.log(approx$1) / Math.LN2);\n            var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);\n            var approxRes = of_float(approx$1);\n            var approxRem = mul(approxRes, other);\n            while(approxRem[/* hi */0] < 0 || gt(approxRem, rem$1)) {\n              approx$1 -= delta;\n              approxRes = of_float(approx$1);\n              approxRem = mul(approxRes, other);\n            };\n            if (is_zero(approxRes)) {\n              approxRes = one;\n            }\n            res = add(res, approxRes);\n            rem$1 = add(rem$1, neg(approxRem));\n          };\n          return res;\n        }\n      }\n      \n    }\n    \n  };\n}\n\nfunction mod_(self, other) {\n  var y = mul(div(self, other), other);\n  return add(self, neg(y));\n}\n\nfunction div_mod(self, other) {\n  var quotient = div(self, other);\n  var y = mul(quotient, other);\n  return /* tuple */[\n          quotient,\n          add(self, neg(y))\n        ];\n}\n\nfunction compare(self, other) {\n  var v = Caml_primitive.caml_nativeint_compare(self[/* hi */0], other[/* hi */0]);\n  if (v === 0) {\n    return Caml_primitive.caml_nativeint_compare(self[/* lo */1], other[/* lo */1]);\n  } else {\n    return v;\n  }\n}\n\nfunction of_int32(lo) {\n  return /* record */[\n          /* hi */lo < 0 ? -1 : 0,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction to_int32(x) {\n  return x[/* lo */1] | 0;\n}\n\nfunction to_hex(x) {\n  var aux = function (v) {\n    return (v >>> 0).toString(16);\n  };\n  var match = x[/* hi */0];\n  var match$1 = x[/* lo */1];\n  var exit = 0;\n  if (match !== 0 || match$1 !== 0) {\n    exit = 1;\n  } else {\n    return \"0\";\n  }\n  if (exit === 1) {\n    if (match$1 !== 0) {\n      if (match !== 0) {\n        var lo = aux(x[/* lo */1]);\n        var pad = 8 - lo.length | 0;\n        if (pad <= 0) {\n          return aux(x[/* hi */0]) + lo;\n        } else {\n          return aux(x[/* hi */0]) + (Caml_utils.repeat(pad, \"0\") + lo);\n        }\n      } else {\n        return aux(x[/* lo */1]);\n      }\n    } else {\n      return aux(x[/* hi */0]) + \"00000000\";\n    }\n  }\n  \n}\n\nfunction discard_sign(x) {\n  return /* record */[\n          /* hi */2147483647 & x[/* hi */0],\n          /* lo */x[/* lo */1]\n        ];\n}\n\nfunction float_of_bits(x) {\n  var int32 = new Int32Array(/* array */[\n        x[/* lo */1],\n        x[/* hi */0]\n      ]);\n  return new Float64Array(int32.buffer)[0];\n}\n\nfunction bits_of_float(x) {\n  var u = new Float64Array(/* array */[x]);\n  var int32 = new Int32Array(u.buffer);\n  var x$1 = int32[1];\n  var hi = x$1;\n  var x$2 = int32[0];\n  var lo = x$2;\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nfunction get64(s, i) {\n  var hi = (s.charCodeAt(i + 4 | 0) << 32) | (s.charCodeAt(i + 5 | 0) << 40) | (s.charCodeAt(i + 6 | 0) << 48) | (s.charCodeAt(i + 7 | 0) << 56);\n  var lo = s.charCodeAt(i) | (s.charCodeAt(i + 1 | 0) << 8) | (s.charCodeAt(i + 2 | 0) << 16) | (s.charCodeAt(i + 3 | 0) << 24);\n  return /* record */[\n          /* hi */hi,\n          /* lo */(lo >>> 0)\n        ];\n}\n\nexports.min_int = min_int;\nexports.max_int = max_int;\nexports.one = one;\nexports.zero = zero;\nexports.not = not;\nexports.of_int32 = of_int32;\nexports.to_int32 = to_int32;\nexports.add = add;\nexports.neg = neg;\nexports.sub = sub;\nexports.lsl_ = lsl_;\nexports.lsr_ = lsr_;\nexports.asr_ = asr_;\nexports.is_zero = is_zero;\nexports.mul = mul;\nexports.xor = xor;\nexports.or_ = or_;\nexports.and_ = and_;\nexports.swap = swap;\nexports.ge = ge;\nexports.eq = eq;\nexports.neq = neq;\nexports.lt = lt;\nexports.gt = gt;\nexports.le = le;\nexports.equal_null = equal_null;\nexports.equal_undefined = equal_undefined;\nexports.equal_nullable = equal_nullable;\nexports.min = min;\nexports.max = max;\nexports.to_float = to_float;\nexports.of_float = of_float;\nexports.div = div;\nexports.mod_ = mod_;\nexports.div_mod = div_mod;\nexports.compare = compare;\nexports.to_hex = to_hex;\nexports.discard_sign = discard_sign;\nexports.float_of_bits = float_of_bits;\nexports.bits_of_float = bits_of_float;\nexports.get64 = get64;\n/* two_ptr_32_dbl Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_int64.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_int64.js");
},
d: {"./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./caml_utils.js":"NM$$bsb$$_$$native$lib$js$caml_utils","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_format":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\nvar Caml_int64 = __fastpack_require__(\"./caml_int64.js\");\nvar Caml_utils = __fastpack_require__(\"./caml_utils.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction caml_failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction parse_digit(c) {\n  if (c >= 65) {\n    if (c >= 97) {\n      if (c >= 123) {\n        return -1;\n      } else {\n        return c - 87 | 0;\n      }\n    } else if (c >= 91) {\n      return -1;\n    } else {\n      return c - 55 | 0;\n    }\n  } else if (c > 57 || c < 48) {\n    return -1;\n  } else {\n    return c - /* \"0\" */48 | 0;\n  }\n}\n\nfunction int_of_string_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    case 3 : \n        return 2;\n    \n  }\n}\n\nfunction parse_sign_and_base(s) {\n  var sign = 1;\n  var base = /* Dec */2;\n  var i = 0;\n  var match = s.charCodeAt(i);\n  switch (match) {\n    case 43 : \n        i = i + 1 | 0;\n        break;\n    case 44 : \n        break;\n    case 45 : \n        sign = -1;\n        i = i + 1 | 0;\n        break;\n    default:\n      \n  }\n  if (s[i] === \"0\") {\n    var match$1 = s.charCodeAt(i + 1 | 0);\n    if (match$1 >= 89) {\n      if (match$1 >= 111) {\n        if (match$1 < 121) {\n          switch (match$1 - 111 | 0) {\n            case 0 : \n                base = /* Oct */0;\n                i = i + 2 | 0;\n                break;\n            case 6 : \n                i = i + 2 | 0;\n                break;\n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 5 : \n            case 7 : \n            case 8 : \n                break;\n            case 9 : \n                base = /* Hex */1;\n                i = i + 2 | 0;\n                break;\n            \n          }\n        }\n        \n      } else if (match$1 === 98) {\n        base = /* Bin */3;\n        i = i + 2 | 0;\n      }\n      \n    } else if (match$1 !== 66) {\n      if (match$1 >= 79) {\n        switch (match$1 - 79 | 0) {\n          case 0 : \n              base = /* Oct */0;\n              i = i + 2 | 0;\n              break;\n          case 6 : \n              i = i + 2 | 0;\n              break;\n          case 1 : \n          case 2 : \n          case 3 : \n          case 4 : \n          case 5 : \n          case 7 : \n          case 8 : \n              break;\n          case 9 : \n              base = /* Hex */1;\n              i = i + 2 | 0;\n              break;\n          \n        }\n      }\n      \n    } else {\n      base = /* Bin */3;\n      i = i + 2 | 0;\n    }\n  }\n  return /* tuple */[\n          i,\n          sign,\n          base\n        ];\n}\n\nfunction caml_int_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var i = match[0];\n  var base = int_of_string_base(match[2]);\n  var threshold = 4294967295;\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = parse_digit(c);\n  if (d < 0 || d >= base) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n        } else {\n          var v = parse_digit(a);\n          if (v < 0 || v >= base) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int_of_string\"\n                ];\n          } else {\n            var acc$1 = base * acc + v;\n            if (acc$1 > threshold) {\n              throw [\n                    Caml_builtin_exceptions.failure,\n                    \"int_of_string\"\n                  ];\n            } else {\n              _k = k + 1 | 0;\n              _acc = acc$1;\n              continue ;\n            }\n          }\n        }\n      }\n    };\n  };\n  var res = match[1] * aux(d, i + 1 | 0);\n  var or_res = res | 0;\n  if (base === 10 && res !== or_res) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction caml_int64_of_string(s) {\n  var match = parse_sign_and_base(s);\n  var hbase = match[2];\n  var i = match[0];\n  var base = Caml_int64.of_int32(int_of_string_base(hbase));\n  var sign = Caml_int64.of_int32(match[1]);\n  var threshold;\n  switch (hbase) {\n    case 0 : \n        threshold = /* int64 */[\n          /* hi */536870911,\n          /* lo */4294967295\n        ];\n        break;\n    case 1 : \n        threshold = /* int64 */[\n          /* hi */268435455,\n          /* lo */4294967295\n        ];\n        break;\n    case 2 : \n        threshold = /* int64 */[\n          /* hi */429496729,\n          /* lo */2576980377\n        ];\n        break;\n    case 3 : \n        threshold = /* int64 */[\n          /* hi */2147483647,\n          /* lo */4294967295\n        ];\n        break;\n    \n  }\n  var len = s.length;\n  var c = i < len ? s.charCodeAt(i) : /* \"\\000\" */0;\n  var d = Caml_int64.of_int32(parse_digit(c));\n  if (Caml_int64.lt(d, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ]) || Caml_int64.ge(d, base)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  var aux = function (_acc, _k) {\n    while(true) {\n      var k = _k;\n      var acc = _acc;\n      if (k === len) {\n        return acc;\n      } else {\n        var a = s.charCodeAt(k);\n        if (a === /* \"_\" */95) {\n          _k = k + 1 | 0;\n          continue ;\n        } else {\n          var v = Caml_int64.of_int32(parse_digit(a));\n          if (Caml_int64.lt(v, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ]) || Caml_int64.ge(v, base) || Caml_int64.gt(acc, threshold)) {\n            throw [\n                  Caml_builtin_exceptions.failure,\n                  \"int64_of_string\"\n                ];\n          } else {\n            var acc$1 = Caml_int64.add(Caml_int64.mul(base, acc), v);\n            _k = k + 1 | 0;\n            _acc = acc$1;\n            continue ;\n          }\n        }\n      }\n    };\n  };\n  var res = Caml_int64.mul(sign, aux(d, i + 1 | 0));\n  var or_res = Caml_int64.or_(res, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]);\n  if (Caml_int64.eq(base, /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ]) && Caml_int64.neq(res, or_res)) {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"int64_of_string\"\n        ];\n  }\n  return or_res;\n}\n\nfunction int_of_base(param) {\n  switch (param) {\n    case 0 : \n        return 8;\n    case 1 : \n        return 16;\n    case 2 : \n        return 10;\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction parse_format(fmt) {\n  var len = fmt.length;\n  if (len > 31) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"format_int: format too long\"\n        ];\n  }\n  var f = /* record */[\n    /* justify */\"+\",\n    /* signstyle */\"-\",\n    /* filter */\" \",\n    /* alternate */false,\n    /* base : Dec */2,\n    /* signedconv */false,\n    /* width */0,\n    /* uppercase */false,\n    /* sign */1,\n    /* prec */-1,\n    /* conv */\"f\"\n  ];\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= len) {\n      return f;\n    } else {\n      var c = fmt.charCodeAt(i);\n      var exit = 0;\n      if (c >= 69) {\n        if (c >= 88) {\n          if (c >= 121) {\n            exit = 1;\n          } else {\n            switch (c - 88 | 0) {\n              case 0 : \n                  f[/* base */4] = /* Hex */1;\n                  f[/* uppercase */7] = true;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 13 : \n              case 14 : \n              case 15 : \n                  exit = 5;\n                  break;\n              case 12 : \n              case 17 : \n                  exit = 4;\n                  break;\n              case 23 : \n                  f[/* base */4] = /* Oct */0;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 29 : \n                  f[/* base */4] = /* Dec */2;\n                  _i = i + 1 | 0;\n                  continue ;\n              case 1 : \n              case 2 : \n              case 3 : \n              case 4 : \n              case 5 : \n              case 6 : \n              case 7 : \n              case 8 : \n              case 9 : \n              case 10 : \n              case 11 : \n              case 16 : \n              case 18 : \n              case 19 : \n              case 20 : \n              case 21 : \n              case 22 : \n              case 24 : \n              case 25 : \n              case 26 : \n              case 27 : \n              case 28 : \n              case 30 : \n              case 31 : \n                  exit = 1;\n                  break;\n              case 32 : \n                  f[/* base */4] = /* Hex */1;\n                  _i = i + 1 | 0;\n                  continue ;\n              \n            }\n          }\n        } else if (c >= 72) {\n          exit = 1;\n        } else {\n          f[/* signedconv */5] = true;\n          f[/* uppercase */7] = true;\n          f[/* conv */10] = String.fromCharCode(lowercase(c));\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else {\n        switch (c) {\n          case 35 : \n              f[/* alternate */3] = true;\n              _i = i + 1 | 0;\n              continue ;\n          case 32 : \n          case 43 : \n              exit = 2;\n              break;\n          case 45 : \n              f[/* justify */0] = \"-\";\n              _i = i + 1 | 0;\n              continue ;\n          case 46 : \n              f[/* prec */9] = 0;\n              var j = i + 1 | 0;\n              while((function(j){\n                  return function () {\n                    var w = fmt.charCodeAt(j) - /* \"0\" */48 | 0;\n                    return w >= 0 && w <= 9;\n                  }\n                  }(j))()) {\n                f[/* prec */9] = (Caml_int32.imul(f[/* prec */9], 10) + fmt.charCodeAt(j) | 0) - /* \"0\" */48 | 0;\n                j = j + 1 | 0;\n              };\n              _i = j;\n              continue ;\n          case 33 : \n          case 34 : \n          case 36 : \n          case 37 : \n          case 38 : \n          case 39 : \n          case 40 : \n          case 41 : \n          case 42 : \n          case 44 : \n          case 47 : \n              exit = 1;\n              break;\n          case 48 : \n              f[/* filter */2] = \"0\";\n              _i = i + 1 | 0;\n              continue ;\n          case 49 : \n          case 50 : \n          case 51 : \n          case 52 : \n          case 53 : \n          case 54 : \n          case 55 : \n          case 56 : \n          case 57 : \n              exit = 3;\n              break;\n          default:\n            exit = 1;\n        }\n      }\n      switch (exit) {\n        case 1 : \n            _i = i + 1 | 0;\n            continue ;\n        case 2 : \n            f[/* signstyle */1] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n        case 3 : \n            f[/* width */6] = 0;\n            var j$1 = i;\n            while((function(j$1){\n                return function () {\n                  var w = fmt.charCodeAt(j$1) - /* \"0\" */48 | 0;\n                  return w >= 0 && w <= 9;\n                }\n                }(j$1))()) {\n              f[/* width */6] = (Caml_int32.imul(f[/* width */6], 10) + fmt.charCodeAt(j$1) | 0) - /* \"0\" */48 | 0;\n              j$1 = j$1 + 1 | 0;\n            };\n            _i = j$1;\n            continue ;\n        case 4 : \n            f[/* signedconv */5] = true;\n            f[/* base */4] = /* Dec */2;\n            _i = i + 1 | 0;\n            continue ;\n        case 5 : \n            f[/* signedconv */5] = true;\n            f[/* conv */10] = String.fromCharCode(c);\n            _i = i + 1 | 0;\n            continue ;\n        \n      }\n    }\n  };\n}\n\nfunction finish_formatting(config, rawbuffer) {\n  var justify = config[/* justify */0];\n  var signstyle = config[/* signstyle */1];\n  var filter = config[/* filter */2];\n  var alternate = config[/* alternate */3];\n  var base = config[/* base */4];\n  var signedconv = config[/* signedconv */5];\n  var width = config[/* width */6];\n  var uppercase = config[/* uppercase */7];\n  var sign = config[/* sign */8];\n  var len = rawbuffer.length;\n  if (signedconv && (sign < 0 || signstyle !== \"-\")) {\n    len = len + 1 | 0;\n  }\n  if (alternate) {\n    if (base === /* Oct */0) {\n      len = len + 1 | 0;\n    } else if (base === /* Hex */1) {\n      len = len + 2 | 0;\n    }\n    \n  }\n  var buffer = \"\";\n  if (justify === \"+\" && filter === \" \") {\n    for(var i = len ,i_finish = width - 1 | 0; i <= i_finish; ++i){\n      buffer = buffer + filter;\n    }\n  }\n  if (signedconv) {\n    if (sign < 0) {\n      buffer = buffer + \"-\";\n    } else if (signstyle !== \"-\") {\n      buffer = buffer + signstyle;\n    }\n    \n  }\n  if (alternate && base === /* Oct */0) {\n    buffer = buffer + \"0\";\n  }\n  if (alternate && base === /* Hex */1) {\n    buffer = buffer + \"0x\";\n  }\n  if (justify === \"+\" && filter === \"0\") {\n    for(var i$1 = len ,i_finish$1 = width - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      buffer = buffer + filter;\n    }\n  }\n  buffer = uppercase ? buffer + rawbuffer.toUpperCase() : buffer + rawbuffer;\n  if (justify === \"-\") {\n    for(var i$2 = len ,i_finish$2 = width - 1 | 0; i$2 <= i_finish$2; ++i$2){\n      buffer = buffer + \" \";\n    }\n  }\n  return buffer;\n}\n\nfunction caml_format_int(fmt, i) {\n  if (fmt === \"%d\") {\n    return String(i);\n  } else {\n    var f = parse_format(fmt);\n    var f$1 = f;\n    var i$1 = i;\n    var i$2 = i$1 < 0 ? (\n        f$1[/* signedconv */5] ? (f$1[/* sign */8] = -1, -i$1) : (i$1 >>> 0)\n      ) : i$1;\n    var s = i$2.toString(int_of_base(f$1[/* base */4]));\n    if (f$1[/* prec */9] >= 0) {\n      f$1[/* filter */2] = \" \";\n      var n = f$1[/* prec */9] - s.length | 0;\n      if (n > 0) {\n        s = Caml_utils.repeat(n, \"0\") + s;\n      }\n      \n    }\n    return finish_formatting(f$1, s);\n  }\n}\n\nfunction caml_int64_format(fmt, x) {\n  var f = parse_format(fmt);\n  var x$1 = f[/* signedconv */5] && Caml_int64.lt(x, /* int64 */[\n        /* hi */0,\n        /* lo */0\n      ]) ? (f[/* sign */8] = -1, Caml_int64.neg(x)) : x;\n  var s = \"\";\n  var match = f[/* base */4];\n  switch (match) {\n    case 0 : \n        var wbase = /* int64 */[\n          /* hi */0,\n          /* lo */8\n        ];\n        var cvtbl = \"01234567\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y = Caml_int64.discard_sign(x$1);\n          var match$1 = Caml_int64.div_mod(y, wbase);\n          var quotient = Caml_int64.add(/* int64 */[\n                /* hi */268435456,\n                /* lo */0\n              ], match$1[0]);\n          var modulus = match$1[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          while(Caml_int64.neq(quotient, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$2 = Caml_int64.div_mod(quotient, wbase);\n            quotient = match$2[0];\n            modulus = match$2[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus[1] | 0)) + s;\n          };\n        } else {\n          var match$3 = Caml_int64.div_mod(x$1, wbase);\n          var quotient$1 = match$3[0];\n          var modulus$1 = match$3[1];\n          s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$1, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$4 = Caml_int64.div_mod(quotient$1, wbase);\n            quotient$1 = match$4[0];\n            modulus$1 = match$4[1];\n            s = String.fromCharCode(cvtbl.charCodeAt(modulus$1[1] | 0)) + s;\n          };\n        }\n        break;\n    case 1 : \n        s = Caml_int64.to_hex(x$1) + s;\n        break;\n    case 2 : \n        var wbase$1 = /* int64 */[\n          /* hi */0,\n          /* lo */10\n        ];\n        var cvtbl$1 = \"0123456789\";\n        if (Caml_int64.lt(x$1, /* int64 */[\n                /* hi */0,\n                /* lo */0\n              ])) {\n          var y$1 = Caml_int64.discard_sign(x$1);\n          var match$5 = Caml_int64.div_mod(y$1, wbase$1);\n          var match$6 = Caml_int64.div_mod(Caml_int64.add(/* int64 */[\n                    /* hi */0,\n                    /* lo */8\n                  ], match$5[1]), wbase$1);\n          var quotient$2 = Caml_int64.add(Caml_int64.add(/* int64 */[\n                    /* hi */214748364,\n                    /* lo */3435973836\n                  ], match$5[0]), match$6[0]);\n          var modulus$2 = match$6[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$2, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$7 = Caml_int64.div_mod(quotient$2, wbase$1);\n            quotient$2 = match$7[0];\n            modulus$2 = match$7[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$2[1] | 0)) + s;\n          };\n        } else {\n          var match$8 = Caml_int64.div_mod(x$1, wbase$1);\n          var quotient$3 = match$8[0];\n          var modulus$3 = match$8[1];\n          s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          while(Caml_int64.neq(quotient$3, /* int64 */[\n                  /* hi */0,\n                  /* lo */0\n                ])) {\n            var match$9 = Caml_int64.div_mod(quotient$3, wbase$1);\n            quotient$3 = match$9[0];\n            modulus$3 = match$9[1];\n            s = String.fromCharCode(cvtbl$1.charCodeAt(modulus$3[1] | 0)) + s;\n          };\n        }\n        break;\n    \n  }\n  if (f[/* prec */9] >= 0) {\n    f[/* filter */2] = \" \";\n    var n = f[/* prec */9] - s.length | 0;\n    if (n > 0) {\n      s = Caml_utils.repeat(n, \"0\") + s;\n    }\n    \n  }\n  return finish_formatting(f, s);\n}\n\nfunction caml_format_float(fmt, x) {\n  var f = parse_format(fmt);\n  var prec = f[/* prec */9] < 0 ? 6 : f[/* prec */9];\n  var x$1 = x < 0 ? (f[/* sign */8] = -1, -x) : x;\n  var s = \"\";\n  if (isNaN(x$1)) {\n    s = \"nan\";\n    f[/* filter */2] = \" \";\n  } else if (isFinite(x$1)) {\n    var match = f[/* conv */10];\n    switch (match) {\n      case \"e\" : \n          s = x$1.toExponential(prec);\n          var i = s.length;\n          if (s[i - 3 | 0] === \"e\") {\n            s = s.slice(0, i - 1 | 0) + (\"0\" + s.slice(i - 1 | 0));\n          }\n          break;\n      case \"f\" : \n          s = x$1.toFixed(prec);\n          break;\n      case \"g\" : \n          var prec$1 = prec !== 0 ? prec : 1;\n          s = x$1.toExponential(prec$1 - 1 | 0);\n          var j = s.indexOf(\"e\");\n          var exp = Number(s.slice(j + 1 | 0)) | 0;\n          if (exp < -4 || x$1 >= 1e21 || x$1.toFixed().length > prec$1) {\n            var i$1 = j - 1 | 0;\n            while(s[i$1] === \"0\") {\n              i$1 = i$1 - 1 | 0;\n            };\n            if (s[i$1] === \".\") {\n              i$1 = i$1 - 1 | 0;\n            }\n            s = s.slice(0, i$1 + 1 | 0) + s.slice(j);\n            var i$2 = s.length;\n            if (s[i$2 - 3 | 0] === \"e\") {\n              s = s.slice(0, i$2 - 1 | 0) + (\"0\" + s.slice(i$2 - 1 | 0));\n            }\n            \n          } else {\n            var p = prec$1;\n            if (exp < 0) {\n              p = p - (exp + 1 | 0) | 0;\n              s = x$1.toFixed(p);\n            } else {\n              while((function () {\n                      s = x$1.toFixed(p);\n                      return s.length > (prec$1 + 1 | 0);\n                    })()) {\n                p = p - 1 | 0;\n              };\n            }\n            if (p !== 0) {\n              var k = s.length - 1 | 0;\n              while(s[k] === \"0\") {\n                k = k - 1 | 0;\n              };\n              if (s[k] === \".\") {\n                k = k - 1 | 0;\n              }\n              s = s.slice(0, k + 1 | 0);\n            }\n            \n          }\n          break;\n      default:\n        \n    }\n  } else {\n    s = \"inf\";\n    f[/* filter */2] = \" \";\n  }\n  return finish_formatting(f, s);\n}\n\nvar float_of_string = (\n  function (s, caml_failwith) {\n    var res = +s;\n    if ((s.length > 0) && (res === res))\n        return res;\n    s = s.replace(/_/g, \"\");\n    res = +s;\n    if (((s.length > 0) && (res === res)) || /^[+-]?nan$/i.test(s)) {\n        return res;\n    }\n    ;\n    if (/^ *0x[0-9a-f_]+p[+-]?[0-9_]+/i.test(s)) {\n        var pidx = s.indexOf('p');\n        pidx = (pidx == -1) ? s.indexOf('P') : pidx;\n        var exp = +s.substring(pidx + 1);\n        res = +s.substring(0, pidx);\n        return res * Math.pow(2, exp);\n    }\n    if (/^\\+?inf(inity)?$/i.test(s))\n        return Infinity;\n    if (/^-inf(inity)?$/i.test(s))\n        return -Infinity;\n    caml_failwith(\"float_of_string\");\n}\n\n);\n\nfunction caml_float_of_string(s) {\n  return Curry._2(float_of_string, s, caml_failwith);\n}\n\nvar caml_nativeint_format = caml_format_int;\n\nvar caml_int32_format = caml_format_int;\n\nvar caml_int32_of_string = caml_int_of_string;\n\nvar caml_nativeint_of_string = caml_int_of_string;\n\nexports.caml_format_float = caml_format_float;\nexports.caml_format_int = caml_format_int;\nexports.caml_nativeint_format = caml_nativeint_format;\nexports.caml_int32_format = caml_int32_format;\nexports.caml_float_of_string = caml_float_of_string;\nexports.caml_int64_format = caml_int64_format;\nexports.caml_int_of_string = caml_int_of_string;\nexports.caml_int32_of_string = caml_int32_of_string;\nexports.caml_int64_of_string = caml_int64_of_string;\nexports.caml_nativeint_of_string = caml_nativeint_of_string;\n/* float_of_string Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_format.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_format.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./caml_int64.js":"NM$$bsb$$_$$native$lib$js$caml_int64","./caml_utils.js":"NM$$bsb$$_$$native$lib$js$caml_utils","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_string":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction string_of_char(prim) {\n  return String.fromCharCode(prim);\n}\n\nfunction caml_string_get(s, i) {\n  if (i >= s.length || i < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nfunction caml_create_bytes(len) {\n  if (len < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.create\"\n        ];\n  } else {\n    var result = new Array(len);\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      result[i] = /* \"\\000\" */0;\n    }\n    return result;\n  }\n}\n\nfunction caml_fill_bytes(s, i, l, c) {\n  if (l > 0) {\n    for(var k = i ,k_finish = (l + i | 0) - 1 | 0; k <= k_finish; ++k){\n      s[k] = c;\n    }\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_blit_string(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    var off1 = s1.length - i1 | 0;\n    if (len <= off1) {\n      for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n        s2[i2 + i | 0] = s1.charCodeAt(i1 + i | 0);\n      }\n      return /* () */0;\n    } else {\n      for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n        s2[i2 + i$1 | 0] = s1.charCodeAt(i1 + i$1 | 0);\n      }\n      for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n        s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n      }\n      return /* () */0;\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction caml_blit_bytes(s1, i1, s2, i2, len) {\n  if (len > 0) {\n    if (s1 === s2) {\n      var s1$1 = s1;\n      var i1$1 = i1;\n      var i2$1 = i2;\n      var len$1 = len;\n      if (i1$1 < i2$1) {\n        var range_a = (s1$1.length - i2$1 | 0) - 1 | 0;\n        var range_b = len$1 - 1 | 0;\n        var range = range_a > range_b ? range_b : range_a;\n        for(var j = range; j >= 0; --j){\n          s1$1[i2$1 + j | 0] = s1$1[i1$1 + j | 0];\n        }\n        return /* () */0;\n      } else if (i1$1 > i2$1) {\n        var range_a$1 = (s1$1.length - i1$1 | 0) - 1 | 0;\n        var range_b$1 = len$1 - 1 | 0;\n        var range$1 = range_a$1 > range_b$1 ? range_b$1 : range_a$1;\n        for(var k = 0; k <= range$1; ++k){\n          s1$1[i2$1 + k | 0] = s1$1[i1$1 + k | 0];\n        }\n        return /* () */0;\n      } else {\n        return 0;\n      }\n    } else {\n      var off1 = s1.length - i1 | 0;\n      if (len <= off1) {\n        for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n          s2[i2 + i | 0] = s1[i1 + i | 0];\n        }\n        return /* () */0;\n      } else {\n        for(var i$1 = 0 ,i_finish$1 = off1 - 1 | 0; i$1 <= i_finish$1; ++i$1){\n          s2[i2 + i$1 | 0] = s1[i1 + i$1 | 0];\n        }\n        for(var i$2 = off1 ,i_finish$2 = len - 1 | 0; i$2 <= i_finish$2; ++i$2){\n          s2[i2 + i$2 | 0] = /* \"\\000\" */0;\n        }\n        return /* () */0;\n      }\n    }\n  } else {\n    return 0;\n  }\n}\n\nfunction bytes_of_string(s) {\n  var len = s.length;\n  var res = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    res[i] = s.charCodeAt(i);\n  }\n  return res;\n}\n\nfunction bytes_to_string(a) {\n  var bytes = a;\n  var i = 0;\n  var len = a.length;\n  var s = \"\";\n  var s_len = len;\n  if (i === 0 && len <= 4096 && len === bytes.length) {\n    return String.fromCharCode.apply(null, bytes);\n  } else {\n    var offset = 0;\n    while(s_len > 0) {\n      var next = s_len < 1024 ? s_len : 1024;\n      var tmp_bytes = new Array(next);\n      caml_blit_bytes(bytes, offset, tmp_bytes, 0, next);\n      s = s + String.fromCharCode.apply(null, tmp_bytes);\n      s_len = s_len - next | 0;\n      offset = offset + next | 0;\n    };\n    return s;\n  }\n}\n\nfunction caml_string_of_char_array(chars) {\n  var len = chars.length;\n  var bytes = new Array(len);\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    bytes[i] = chars[i];\n  }\n  return bytes_to_string(bytes);\n}\n\nfunction caml_is_printable(c) {\n  if (c > 31) {\n    return c < 127;\n  } else {\n    return false;\n  }\n}\n\nfunction caml_string_get16(s, i) {\n  return s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0;\n}\n\nfunction caml_string_get32(s, i) {\n  return ((s.charCodeAt(i) + (s.charCodeAt(i + 1 | 0) << 8) | 0) + (s.charCodeAt(i + 2 | 0) << 16) | 0) + (s.charCodeAt(i + 3 | 0) << 24) | 0;\n}\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s.charCodeAt(i);\n  }\n}\n\nexports.bytes_of_string = bytes_of_string;\nexports.bytes_to_string = bytes_to_string;\nexports.caml_is_printable = caml_is_printable;\nexports.caml_string_of_char_array = caml_string_of_char_array;\nexports.caml_string_get = caml_string_get;\nexports.caml_create_bytes = caml_create_bytes;\nexports.caml_fill_bytes = caml_fill_bytes;\nexports.caml_blit_string = caml_blit_string;\nexports.caml_blit_bytes = caml_blit_bytes;\nexports.caml_string_get16 = caml_string_get16;\nexports.caml_string_get32 = caml_string_get32;\nexports.string_of_char = string_of_char;\nexports.get = get;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_string.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_string.js");
},
d: {"./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_exceptions":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nvar id = /* record */[/* contents */0];\n\nfunction caml_set_oo_id(b) {\n  b[1] = id[0];\n  id[0] += 1;\n  return b;\n}\n\nfunction caml_fresh_oo_id(param) {\n  id[0] += 1;\n  return id[0];\n}\n\nfunction create(str) {\n  var v_001 = caml_fresh_oo_id(/* () */0);\n  var v = /* tuple */[\n    str,\n    v_001\n  ];\n  v.tag = 248;\n  return v;\n}\n\nfunction isCamlExceptionOrOpenVariant(e) {\n  if (e === undefined) {\n    return false;\n  } else if (e.tag === 248) {\n    return true;\n  } else {\n    var slot = e[0];\n    if (slot !== undefined) {\n      return slot.tag === 248;\n    } else {\n      return false;\n    }\n  }\n}\n\nexports.caml_set_oo_id = caml_set_oo_id;\nexports.caml_fresh_oo_id = caml_fresh_oo_id;\nexports.create = create;\nexports.isCamlExceptionOrOpenVariant = isCamlExceptionOrOpenVariant;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_exceptions.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_exceptions.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nfunction not_implemented(s) {\n  var str = s + \" not implemented by BuckleScript yet\\n\";\n  throw new Error(str);\n}\n\nexports.not_implemented = not_implemented;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_missing_polyfill.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_missing_polyfill.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$camlinternalFormatBasics":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Block = __fastpack_require__(\"./block.js\");\n\nfunction erase_rel(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [erase_rel(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [erase_rel(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [erase_rel(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [erase_rel(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [erase_rel(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [erase_rel(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [erase_rel(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [erase_rel(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    erase_rel(param[1])\n                  ]);\n      case 9 : \n          var ty1 = param[0];\n          return /* Format_subst_ty */Block.__(9, [\n                    ty1,\n                    ty1,\n                    erase_rel(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [erase_rel(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [erase_rel(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [erase_rel(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [erase_rel(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [erase_rel(param[0])]);\n      \n    }\n  }\n}\n\nfunction concat_fmtty(fmtty1, fmtty2) {\n  if (typeof fmtty1 === \"number\") {\n    return fmtty2;\n  } else {\n    switch (fmtty1.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 1 : \n          return /* String_ty */Block.__(1, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    fmtty1[0],\n                    concat_fmtty(fmtty1[1], fmtty2)\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    fmtty1[0],\n                    fmtty1[1],\n                    concat_fmtty(fmtty1[2], fmtty2)\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [concat_fmtty(fmtty1[0], fmtty2)]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [concat_fmtty(fmtty1[0], fmtty2)]);\n      \n    }\n  }\n}\n\nfunction concat_fmt(fmt1, fmt2) {\n  if (typeof fmt1 === \"number\") {\n    return fmt2;\n  } else {\n    switch (fmt1.tag | 0) {\n      case 0 : \n          return /* Char */Block.__(0, [concat_fmt(fmt1[0], fmt2)]);\n      case 1 : \n          return /* Caml_char */Block.__(1, [concat_fmt(fmt1[0], fmt2)]);\n      case 2 : \n          return /* String */Block.__(2, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 3 : \n          return /* Caml_string */Block.__(3, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 4 : \n          return /* Int */Block.__(4, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 5 : \n          return /* Int32 */Block.__(5, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 6 : \n          return /* Nativeint */Block.__(6, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 7 : \n          return /* Int64 */Block.__(7, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 8 : \n          return /* Float */Block.__(8, [\n                    fmt1[0],\n                    fmt1[1],\n                    fmt1[2],\n                    concat_fmt(fmt1[3], fmt2)\n                  ]);\n      case 9 : \n          return /* Bool */Block.__(9, [concat_fmt(fmt1[0], fmt2)]);\n      case 10 : \n          return /* Flush */Block.__(10, [concat_fmt(fmt1[0], fmt2)]);\n      case 11 : \n          return /* String_literal */Block.__(11, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 12 : \n          return /* Char_literal */Block.__(12, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 13 : \n          return /* Format_arg */Block.__(13, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 14 : \n          return /* Format_subst */Block.__(14, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 15 : \n          return /* Alpha */Block.__(15, [concat_fmt(fmt1[0], fmt2)]);\n      case 16 : \n          return /* Theta */Block.__(16, [concat_fmt(fmt1[0], fmt2)]);\n      case 17 : \n          return /* Formatting_lit */Block.__(17, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 18 : \n          return /* Formatting_gen */Block.__(18, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 19 : \n          return /* Reader */Block.__(19, [concat_fmt(fmt1[0], fmt2)]);\n      case 20 : \n          return /* Scan_char_set */Block.__(20, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      case 21 : \n          return /* Scan_get_counter */Block.__(21, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 22 : \n          return /* Scan_next_char */Block.__(22, [concat_fmt(fmt1[0], fmt2)]);\n      case 23 : \n          return /* Ignored_param */Block.__(23, [\n                    fmt1[0],\n                    concat_fmt(fmt1[1], fmt2)\n                  ]);\n      case 24 : \n          return /* Custom */Block.__(24, [\n                    fmt1[0],\n                    fmt1[1],\n                    concat_fmt(fmt1[2], fmt2)\n                  ]);\n      \n    }\n  }\n}\n\nexports.concat_fmtty = concat_fmtty;\nexports.erase_rel = erase_rel;\nexports.concat_fmt = concat_fmt;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/camlinternalFormatBasics.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/camlinternalFormatBasics.js");
},
d: {"./block.js":"NM$$bsb$$_$$native$lib$js$block"}
},
"NM$$bsb$$_$$native$lib$js$pervasives":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_io = __fastpack_require__(\"./caml_io.js\");\nvar Caml_sys = __fastpack_require__(\"./caml_sys.js\");\nvar Caml_format = __fastpack_require__(\"./caml_format.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\nvar Caml_missing_polyfill = __fastpack_require__(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = __fastpack_require__(\"./camlinternalFormatBasics.js\");\n\nfunction failwith(s) {\n  throw [\n        Caml_builtin_exceptions.failure,\n        s\n      ];\n}\n\nfunction invalid_arg(s) {\n  throw [\n        Caml_builtin_exceptions.invalid_argument,\n        s\n      ];\n}\n\nvar Exit = Caml_exceptions.create(\"Pervasives.Exit\");\n\nfunction abs(x) {\n  if (x >= 0) {\n    return x;\n  } else {\n    return -x | 0;\n  }\n}\n\nfunction lnot(x) {\n  return x ^ -1;\n}\n\nvar min_int = -2147483648;\n\nfunction char_of_int(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"char_of_int\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction string_of_bool(b) {\n  if (b) {\n    return \"true\";\n  } else {\n    return \"false\";\n  }\n}\n\nfunction bool_of_string(param) {\n  switch (param) {\n    case \"false\" : \n        return false;\n    case \"true\" : \n        return true;\n    default:\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"bool_of_string\"\n          ];\n  }\n}\n\nfunction valid_float_lexem(s) {\n  var l = s.length;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    if (i >= l) {\n      return s + \".\";\n    } else {\n      var match = Caml_string.get(s, i);\n      if (match >= 48) {\n        if (match >= 58) {\n          return s;\n        } else {\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else if (match !== 45) {\n        return s;\n      } else {\n        _i = i + 1 | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction string_of_float(f) {\n  return valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f));\n}\n\nfunction $at(l1, l2) {\n  if (l1) {\n    return /* :: */[\n            l1[0],\n            $at(l1[1], l2)\n          ];\n  } else {\n    return l2;\n  }\n}\n\nvar stdin = Caml_io.stdin;\n\nvar stdout = Caml_io.stdout;\n\nvar stderr = Caml_io.stderr;\n\nfunction open_out_gen(mode, perm, name) {\n  return Caml_io.caml_ml_open_descriptor_out(Caml_missing_polyfill.not_implemented(\"caml_sys_open\"));\n}\n\nfunction open_out(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_text */7,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction open_out_bin(name) {\n  return open_out_gen(/* :: */[\n              /* Open_wronly */1,\n              /* :: */[\n                /* Open_creat */3,\n                /* :: */[\n                  /* Open_trunc */4,\n                  /* :: */[\n                    /* Open_binary */6,\n                    /* [] */0\n                  ]\n                ]\n              ]\n            ], 438, name);\n}\n\nfunction flush_all(param) {\n  var _param = Caml_io.caml_ml_out_channels_list(/* () */0);\n  while(true) {\n    var param$1 = _param;\n    if (param$1) {\n      try {\n        Caml_io.caml_ml_flush(param$1[0]);\n      }\n      catch (exn){\n        \n      }\n      _param = param$1[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction output_bytes(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output_string(oc, s) {\n  return Caml_io.caml_ml_output(oc, s, 0, s.length);\n}\n\nfunction output(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_substring(oc, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"output_substring\"\n        ];\n  } else {\n    return Caml_io.caml_ml_output(oc, s, ofs, len);\n  }\n}\n\nfunction output_value(chan, v) {\n  return Caml_missing_polyfill.not_implemented(\"caml_output_value\");\n}\n\nfunction close_out(oc) {\n  Caml_io.caml_ml_flush(oc);\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n}\n\nfunction close_out_noerr(oc) {\n  try {\n    Caml_io.caml_ml_flush(oc);\n  }\n  catch (exn){\n    \n  }\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n  catch (exn$1){\n    return /* () */0;\n  }\n}\n\nfunction open_in_gen(mode, perm, name) {\n  return Caml_io.caml_ml_open_descriptor_in(Caml_missing_polyfill.not_implemented(\"caml_sys_open\"));\n}\n\nfunction open_in(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_text */7,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction open_in_bin(name) {\n  return open_in_gen(/* :: */[\n              /* Open_rdonly */0,\n              /* :: */[\n                /* Open_binary */6,\n                /* [] */0\n              ]\n            ], 0, name);\n}\n\nfunction input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"input\"\n        ];\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n  }\n}\n\nfunction unsafe_really_input(ic, s, _ofs, _len) {\n  while(true) {\n    var len = _len;\n    var ofs = _ofs;\n    if (len <= 0) {\n      return /* () */0;\n    } else {\n      var r = Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n      if (r === 0) {\n        throw Caml_builtin_exceptions.end_of_file;\n      } else {\n        _len = len - r | 0;\n        _ofs = ofs + r | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction really_input(ic, s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"really_input\"\n        ];\n  } else {\n    return unsafe_really_input(ic, s, ofs, len);\n  }\n}\n\nfunction really_input_string(ic, len) {\n  var s = Caml_string.caml_create_bytes(len);\n  really_input(ic, s, 0, len);\n  return Caml_string.bytes_to_string(s);\n}\n\nfunction input_line(chan) {\n  var build_result = function (buf, _pos, _param) {\n    while(true) {\n      var param = _param;\n      var pos = _pos;\n      if (param) {\n        var hd = param[0];\n        var len = hd.length;\n        Caml_string.caml_blit_bytes(hd, 0, buf, pos - len | 0, len);\n        _param = param[1];\n        _pos = pos - len | 0;\n        continue ;\n      } else {\n        return buf;\n      }\n    };\n  };\n  var scan = function (_accu, _len) {\n    while(true) {\n      var len = _len;\n      var accu = _accu;\n      var n = Caml_missing_polyfill.not_implemented(\"caml_ml_input_scan_line\");\n      if (n === 0) {\n        if (accu) {\n          return build_result(Caml_string.caml_create_bytes(len), len, accu);\n        } else {\n          throw Caml_builtin_exceptions.end_of_file;\n        }\n      } else if (n > 0) {\n        var res = Caml_string.caml_create_bytes(n - 1 | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n        Caml_io.caml_ml_input_char(chan);\n        if (accu) {\n          var len$1 = (len + n | 0) - 1 | 0;\n          return build_result(Caml_string.caml_create_bytes(len$1), len$1, /* :: */[\n                      res,\n                      accu\n                    ]);\n        } else {\n          return res;\n        }\n      } else {\n        var beg = Caml_string.caml_create_bytes(-n | 0);\n        Caml_missing_polyfill.not_implemented(\"caml_ml_input\");\n        _len = len - n | 0;\n        _accu = /* :: */[\n          beg,\n          accu\n        ];\n        continue ;\n      }\n    };\n  };\n  return Caml_string.bytes_to_string(scan(/* [] */0, 0));\n}\n\nfunction close_in_noerr(ic) {\n  try {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n  catch (exn){\n    return /* () */0;\n  }\n}\n\nfunction print_char(c) {\n  return Caml_io.caml_ml_output_char(stdout, c);\n}\n\nfunction print_string(s) {\n  return output_string(stdout, s);\n}\n\nfunction print_bytes(s) {\n  return output_bytes(stdout, s);\n}\n\nfunction print_int(i) {\n  return output_string(stdout, String(i));\n}\n\nfunction print_float(f) {\n  return output_string(stdout, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction print_newline(param) {\n  Caml_io.caml_ml_output_char(stdout, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stdout);\n}\n\nfunction prerr_char(c) {\n  return Caml_io.caml_ml_output_char(stderr, c);\n}\n\nfunction prerr_string(s) {\n  return output_string(stderr, s);\n}\n\nfunction prerr_bytes(s) {\n  return output_bytes(stderr, s);\n}\n\nfunction prerr_int(i) {\n  return output_string(stderr, String(i));\n}\n\nfunction prerr_float(f) {\n  return output_string(stderr, valid_float_lexem(Caml_format.caml_format_float(\"%.12g\", f)));\n}\n\nfunction prerr_newline(param) {\n  Caml_io.caml_ml_output_char(stderr, /* \"\\n\" */10);\n  return Caml_io.caml_ml_flush(stderr);\n}\n\nfunction read_line(param) {\n  Caml_io.caml_ml_flush(stdout);\n  return input_line(stdin);\n}\n\nfunction read_int(param) {\n  return Caml_format.caml_int_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction read_float(param) {\n  return Caml_format.caml_float_of_string((Caml_io.caml_ml_flush(stdout), input_line(stdin)));\n}\n\nfunction string_of_format(param) {\n  return param[1];\n}\n\nfunction $caret$caret(param, param$1) {\n  return /* Format */[\n          CamlinternalFormatBasics.concat_fmt(param[0], param$1[0]),\n          param[1] + (\"%,\" + param$1[1])\n        ];\n}\n\nvar exit_function = /* record */[/* contents */flush_all];\n\nfunction at_exit(f) {\n  var g = exit_function[0];\n  exit_function[0] = (function (param) {\n      Curry._1(f, /* () */0);\n      return Curry._1(g, /* () */0);\n    });\n  return /* () */0;\n}\n\nfunction do_at_exit(param) {\n  return Curry._1(exit_function[0], /* () */0);\n}\n\nfunction exit(retcode) {\n  do_at_exit(/* () */0);\n  return Caml_sys.caml_sys_exit(retcode);\n}\n\nvar max_int = 2147483647;\n\nvar epsilon_float = 2.220446049250313e-16;\n\nvar flush = Caml_io.caml_ml_flush;\n\nvar output_char = Caml_io.caml_ml_output_char;\n\nvar output_byte = Caml_io.caml_ml_output_char;\n\nfunction output_binary_int(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_output_int\");\n}\n\nfunction seek_out(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out\");\n}\n\nfunction pos_out(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out\");\n}\n\nfunction out_channel_length(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size\");\n}\n\nfunction set_binary_mode_out(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode\");\n}\n\nvar input_char = Caml_io.caml_ml_input_char;\n\nvar input_byte = Caml_io.caml_ml_input_char;\n\nfunction input_binary_int(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_input_int\");\n}\n\nfunction input_value(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_input_value\");\n}\n\nfunction seek_in(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in\");\n}\n\nfunction pos_in(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in\");\n}\n\nfunction in_channel_length(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size\");\n}\n\nfunction close_in(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n}\n\nfunction set_binary_mode_in(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_set_binary_mode\");\n}\n\nfunction LargeFile_000(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_out_64\");\n}\n\nfunction LargeFile_001(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_out_64\");\n}\n\nfunction LargeFile_002(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64\");\n}\n\nfunction LargeFile_003(prim, prim$1) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_seek_in_64\");\n}\n\nfunction LargeFile_004(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_pos_in_64\");\n}\n\nfunction LargeFile_005(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_ml_channel_size_64\");\n}\n\nvar LargeFile = [\n  LargeFile_000,\n  LargeFile_001,\n  LargeFile_002,\n  LargeFile_003,\n  LargeFile_004,\n  LargeFile_005\n];\n\nexports.invalid_arg = invalid_arg;\nexports.failwith = failwith;\nexports.Exit = Exit;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lnot = lnot;\nexports.epsilon_float = epsilon_float;\nexports.char_of_int = char_of_int;\nexports.string_of_bool = string_of_bool;\nexports.bool_of_string = bool_of_string;\nexports.string_of_float = string_of_float;\nexports.$at = $at;\nexports.stdin = stdin;\nexports.stdout = stdout;\nexports.stderr = stderr;\nexports.print_char = print_char;\nexports.print_string = print_string;\nexports.print_bytes = print_bytes;\nexports.print_int = print_int;\nexports.print_float = print_float;\nexports.print_newline = print_newline;\nexports.prerr_char = prerr_char;\nexports.prerr_string = prerr_string;\nexports.prerr_bytes = prerr_bytes;\nexports.prerr_int = prerr_int;\nexports.prerr_float = prerr_float;\nexports.prerr_newline = prerr_newline;\nexports.read_line = read_line;\nexports.read_int = read_int;\nexports.read_float = read_float;\nexports.open_out = open_out;\nexports.open_out_bin = open_out_bin;\nexports.open_out_gen = open_out_gen;\nexports.flush = flush;\nexports.flush_all = flush_all;\nexports.output_char = output_char;\nexports.output_string = output_string;\nexports.output_bytes = output_bytes;\nexports.output = output;\nexports.output_substring = output_substring;\nexports.output_byte = output_byte;\nexports.output_binary_int = output_binary_int;\nexports.output_value = output_value;\nexports.seek_out = seek_out;\nexports.pos_out = pos_out;\nexports.out_channel_length = out_channel_length;\nexports.close_out = close_out;\nexports.close_out_noerr = close_out_noerr;\nexports.set_binary_mode_out = set_binary_mode_out;\nexports.open_in = open_in;\nexports.open_in_bin = open_in_bin;\nexports.open_in_gen = open_in_gen;\nexports.input_char = input_char;\nexports.input_line = input_line;\nexports.input = input;\nexports.really_input = really_input;\nexports.really_input_string = really_input_string;\nexports.input_byte = input_byte;\nexports.input_binary_int = input_binary_int;\nexports.input_value = input_value;\nexports.seek_in = seek_in;\nexports.pos_in = pos_in;\nexports.in_channel_length = in_channel_length;\nexports.close_in = close_in;\nexports.close_in_noerr = close_in_noerr;\nexports.set_binary_mode_in = set_binary_mode_in;\nexports.LargeFile = LargeFile;\nexports.string_of_format = string_of_format;\nexports.$caret$caret = $caret$caret;\nexports.exit = exit;\nexports.at_exit = at_exit;\nexports.valid_float_lexem = valid_float_lexem;\nexports.unsafe_really_input = unsafe_really_input;\nexports.do_at_exit = do_at_exit;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/pervasives.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/pervasives.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_io.js":"NM$$bsb$$_$$native$lib$js$caml_io","./caml_sys.js":"NM$$bsb$$_$$native$lib$js$caml_sys","./caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions","./caml_missing_polyfill.js":"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions","./camlinternalFormatBasics.js":"NM$$bsb$$_$$native$lib$js$camlinternalFormatBasics"}
},
"NM$$bsb$$_$$native$lib$js$list":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_obj = __fastpack_require__(\"./caml_obj.js\");\nvar Pervasives = __fastpack_require__(\"./pervasives.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction length(l) {\n  var _len = 0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var len = _len;\n    if (param) {\n      _param = param[1];\n      _len = len + 1 | 0;\n      continue ;\n    } else {\n      return len;\n    }\n  };\n}\n\nfunction hd(param) {\n  if (param) {\n    return param[0];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"hd\"\n        ];\n  }\n}\n\nfunction tl(param) {\n  if (param) {\n    return param[1];\n  } else {\n    throw [\n          Caml_builtin_exceptions.failure,\n          \"tl\"\n        ];\n  }\n}\n\nfunction nth(l, n) {\n  if (n < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.nth\"\n        ];\n  } else {\n    var _l = l;\n    var _n = n;\n    while(true) {\n      var n$1 = _n;\n      var l$1 = _l;\n      if (l$1) {\n        if (n$1 === 0) {\n          return l$1[0];\n        } else {\n          _n = n$1 - 1 | 0;\n          _l = l$1[1];\n          continue ;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.failure,\n              \"nth\"\n            ];\n      }\n    };\n  }\n}\n\nfunction rev_append(_l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      _l2 = /* :: */[\n        l1[0],\n        l2\n      ];\n      _l1 = l1[1];\n      continue ;\n    } else {\n      return l2;\n    }\n  };\n}\n\nfunction rev(l) {\n  return rev_append(l, /* [] */0);\n}\n\nfunction flatten(param) {\n  if (param) {\n    return Pervasives.$at(param[0], flatten(param[1]));\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction map(f, param) {\n  if (param) {\n    var r = Curry._1(f, param[0]);\n    return /* :: */[\n            r,\n            map(f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi(i, f, param) {\n  if (param) {\n    var r = Curry._2(f, i, param[0]);\n    return /* :: */[\n            r,\n            mapi(i + 1 | 0, f, param[1])\n          ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction mapi$1(f, l) {\n  return mapi(0, f, l);\n}\n\nfunction rev_map(f, l) {\n  var _accu = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = /* :: */[\n        Curry._1(f, param[0]),\n        accu\n      ];\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter(f, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      Curry._1(f, param[0]);\n      _param = param[1];\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction iteri(f, l) {\n  var _i = 0;\n  var f$1 = f;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var i = _i;\n    if (param) {\n      Curry._2(f$1, i, param[0]);\n      _param = param[1];\n      _i = i + 1 | 0;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left(f, _accu, _l) {\n  while(true) {\n    var l = _l;\n    var accu = _accu;\n    if (l) {\n      _l = l[1];\n      _accu = Curry._2(f, accu, l[0]);\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right(f, l, accu) {\n  if (l) {\n    return Curry._2(f, l[0], fold_right(f, l[1], accu));\n  } else {\n    return accu;\n  }\n}\n\nfunction map2(f, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var r = Curry._2(f, l1[0], l2[0]);\n      return /* :: */[\n              r,\n              map2(f, l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.map2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.map2\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction rev_map2(f, l1, l2) {\n  var _accu = /* [] */0;\n  var _l1 = l1;\n  var _l2 = l2;\n  while(true) {\n    var l2$1 = _l2;\n    var l1$1 = _l1;\n    var accu = _accu;\n    if (l1$1) {\n      if (l2$1) {\n        _l2 = l2$1[1];\n        _l1 = l1$1[1];\n        _accu = /* :: */[\n          Curry._2(f, l1$1[0], l2$1[0]),\n          accu\n        ];\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.rev_map2\"\n            ];\n      }\n    } else if (l2$1) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.rev_map2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction iter2(f, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        Curry._2(f, l1[0], l2[0]);\n        _l2 = l2[1];\n        _l1 = l1[1];\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.iter2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.iter2\"\n          ];\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction fold_left2(f, _accu, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    var accu = _accu;\n    if (l1) {\n      if (l2) {\n        _l2 = l2[1];\n        _l1 = l1[1];\n        _accu = Curry._3(f, accu, l1[0], l2[0]);\n        continue ;\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.fold_left2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_left2\"\n          ];\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction fold_right2(f, l1, l2, accu) {\n  if (l1) {\n    if (l2) {\n      return Curry._3(f, l1[0], l2[0], fold_right2(f, l1[1], l2[1], accu));\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.fold_right2\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.fold_right2\"\n        ];\n  } else {\n    return accu;\n  }\n}\n\nfunction for_all(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        _param = param[1];\n        continue ;\n      } else {\n        return false;\n      }\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction exists(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Curry._1(p, param[0])) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction for_all2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.for_all2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.for_all2\"\n          ];\n    } else {\n      return true;\n    }\n  };\n}\n\nfunction exists2(p, _l1, _l2) {\n  while(true) {\n    var l2 = _l2;\n    var l1 = _l1;\n    if (l1) {\n      if (l2) {\n        if (Curry._2(p, l1[0], l2[0])) {\n          return true;\n        } else {\n          _l2 = l2[1];\n          _l1 = l1[1];\n          continue ;\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"List.exists2\"\n            ];\n      }\n    } else if (l2) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.exists2\"\n          ];\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction mem(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0], x)) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction memq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0] === x) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (Caml_obj.caml_equal(match[0], x)) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var match = param[0];\n      if (match[0] === x) {\n        return match[1];\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction mem_assoc(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0][0], x)) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction mem_assq(x, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (param[0][0] === x) {\n        return true;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction remove_assoc(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (Caml_obj.caml_equal(pair[0], x)) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assoc(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction remove_assq(x, param) {\n  if (param) {\n    var l = param[1];\n    var pair = param[0];\n    if (pair[0] === x) {\n      return l;\n    } else {\n      return /* :: */[\n              pair,\n              remove_assq(x, l)\n            ];\n    }\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction find(p, _param) {\n  while(true) {\n    var param = _param;\n    if (param) {\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        return x;\n      } else {\n        _param = param[1];\n        continue ;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n}\n\nfunction find_all(p) {\n  return (function (param) {\n      var _accu = /* [] */0;\n      var _param = param;\n      while(true) {\n        var param$1 = _param;\n        var accu = _accu;\n        if (param$1) {\n          var l = param$1[1];\n          var x = param$1[0];\n          if (Curry._1(p, x)) {\n            _param = l;\n            _accu = /* :: */[\n              x,\n              accu\n            ];\n            continue ;\n          } else {\n            _param = l;\n            continue ;\n          }\n        } else {\n          return rev_append(accu, /* [] */0);\n        }\n      };\n    });\n}\n\nfunction partition(p, l) {\n  var _yes = /* [] */0;\n  var _no = /* [] */0;\n  var _param = l;\n  while(true) {\n    var param = _param;\n    var no = _no;\n    var yes = _yes;\n    if (param) {\n      var l$1 = param[1];\n      var x = param[0];\n      if (Curry._1(p, x)) {\n        _param = l$1;\n        _yes = /* :: */[\n          x,\n          yes\n        ];\n        continue ;\n      } else {\n        _param = l$1;\n        _no = /* :: */[\n          x,\n          no\n        ];\n        continue ;\n      }\n    } else {\n      return /* tuple */[\n              rev_append(yes, /* [] */0),\n              rev_append(no, /* [] */0)\n            ];\n    }\n  };\n}\n\nfunction split(param) {\n  if (param) {\n    var match = param[0];\n    var match$1 = split(param[1]);\n    return /* tuple */[\n            /* :: */[\n              match[0],\n              match$1[0]\n            ],\n            /* :: */[\n              match[1],\n              match$1[1]\n            ]\n          ];\n  } else {\n    return /* tuple */[\n            /* [] */0,\n            /* [] */0\n          ];\n  }\n}\n\nfunction combine(l1, l2) {\n  if (l1) {\n    if (l2) {\n      return /* :: */[\n              /* tuple */[\n                l1[0],\n                l2[0]\n              ],\n              combine(l1[1], l2[1])\n            ];\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"List.combine\"\n          ];\n    }\n  } else if (l2) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"List.combine\"\n        ];\n  } else {\n    return /* [] */0;\n  }\n}\n\nfunction merge(cmp, l1, l2) {\n  if (l1) {\n    if (l2) {\n      var h2 = l2[0];\n      var h1 = l1[0];\n      if (Curry._2(cmp, h1, h2) <= 0) {\n        return /* :: */[\n                h1,\n                merge(cmp, l1[1], l2)\n              ];\n      } else {\n        return /* :: */[\n                h2,\n                merge(cmp, l1, l2[1])\n              ];\n      }\n    } else {\n      return l1;\n    }\n  } else {\n    return l2;\n  }\n}\n\nfunction chop(_k, _l) {\n  while(true) {\n    var l = _l;\n    var k = _k;\n    if (k === 0) {\n      return l;\n    } else if (l) {\n      _l = l[1];\n      _k = k - 1 | 0;\n      continue ;\n    } else {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            /* tuple */[\n              \"list.ml\",\n              223,\n              11\n            ]\n          ];\n    }\n  };\n}\n\nfunction stable_sort(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) <= 0) {\n              if (Curry._2(cmp, x2, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) <= 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) <= 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) <= 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            if (Curry._2(cmp, x1, x2) > 0) {\n              if (Curry._2(cmp, x2, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else if (Curry._2(cmp, x1, x3) > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              }\n            } else if (Curry._2(cmp, x1, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x1,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else if (Curry._2(cmp, x2, x3) > 0) {\n              return /* :: */[\n                      x2,\n                      /* :: */[\n                        x3,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            } else {\n              return /* :: */[\n                      x3,\n                      /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ]\n                    ];\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        if (Curry._2(cmp, x1$1, x2$1) > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var h2 = l2$1[0];\n            var h1 = l1[0];\n            if (Curry._2(cmp, h1, h2) <= 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = l1[1];\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = l2$1[1];\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nfunction sort_uniq(cmp, l) {\n  var sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c < 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 < 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 < 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 < 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 < 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 < 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = rev_sort(n1, l);\n      var s2 = rev_sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n            } else if (c$7 > 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var rev_sort = function (n, l) {\n    var exit = 0;\n    if (n !== 2) {\n      if (n !== 3 || !l) {\n        exit = 1;\n      } else {\n        var match = l[1];\n        if (match) {\n          var match$1 = match[1];\n          if (match$1) {\n            var x3 = match$1[0];\n            var x2 = match[0];\n            var x1 = l[0];\n            var c = Curry._2(cmp, x1, x2);\n            if (c === 0) {\n              var c$1 = Curry._2(cmp, x2, x3);\n              if (c$1 === 0) {\n                return /* :: */[\n                        x2,\n                        /* [] */0\n                      ];\n              } else if (c$1 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x3,\n                          /* [] */0\n                        ]\n                      ];\n              } else {\n                return /* :: */[\n                        x3,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              }\n            } else if (c > 0) {\n              var c$2 = Curry._2(cmp, x2, x3);\n              if (c$2 === 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$2 > 0) {\n                return /* :: */[\n                        x1,\n                        /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$3 = Curry._2(cmp, x1, x3);\n                if (c$3 === 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x2,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$3 > 0) {\n                  return /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x1,\n                            /* :: */[\n                              x2,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            } else {\n              var c$4 = Curry._2(cmp, x1, x3);\n              if (c$4 === 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* [] */0\n                        ]\n                      ];\n              } else if (c$4 > 0) {\n                return /* :: */[\n                        x2,\n                        /* :: */[\n                          x1,\n                          /* :: */[\n                            x3,\n                            /* [] */0\n                          ]\n                        ]\n                      ];\n              } else {\n                var c$5 = Curry._2(cmp, x2, x3);\n                if (c$5 === 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x1,\n                            /* [] */0\n                          ]\n                        ];\n                } else if (c$5 > 0) {\n                  return /* :: */[\n                          x2,\n                          /* :: */[\n                            x3,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                } else {\n                  return /* :: */[\n                          x3,\n                          /* :: */[\n                            x2,\n                            /* :: */[\n                              x1,\n                              /* [] */0\n                            ]\n                          ]\n                        ];\n                }\n              }\n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit = 1;\n        }\n      }\n    } else if (l) {\n      var match$2 = l[1];\n      if (match$2) {\n        var x2$1 = match$2[0];\n        var x1$1 = l[0];\n        var c$6 = Curry._2(cmp, x1$1, x2$1);\n        if (c$6 === 0) {\n          return /* :: */[\n                  x1$1,\n                  /* [] */0\n                ];\n        } else if (c$6 > 0) {\n          return /* :: */[\n                  x1$1,\n                  /* :: */[\n                    x2$1,\n                    /* [] */0\n                  ]\n                ];\n        } else {\n          return /* :: */[\n                  x2$1,\n                  /* :: */[\n                    x1$1,\n                    /* [] */0\n                  ]\n                ];\n        }\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var n1 = (n >> 1);\n      var n2 = n - n1 | 0;\n      var l2 = chop(n1, l);\n      var s1 = sort(n1, l);\n      var s2 = sort(n2, l2);\n      var _l1 = s1;\n      var _l2 = s2;\n      var _accu = /* [] */0;\n      while(true) {\n        var accu = _accu;\n        var l2$1 = _l2;\n        var l1 = _l1;\n        if (l1) {\n          if (l2$1) {\n            var t2 = l2$1[1];\n            var h2 = l2$1[0];\n            var t1 = l1[1];\n            var h1 = l1[0];\n            var c$7 = Curry._2(cmp, h1, h2);\n            if (c$7 === 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l2 = t2;\n              _l1 = t1;\n              continue ;\n            } else if (c$7 < 0) {\n              _accu = /* :: */[\n                h1,\n                accu\n              ];\n              _l1 = t1;\n              continue ;\n            } else {\n              _accu = /* :: */[\n                h2,\n                accu\n              ];\n              _l2 = t2;\n              continue ;\n            }\n          } else {\n            return rev_append(l1, accu);\n          }\n        } else {\n          return rev_append(l2$1, accu);\n        }\n      };\n    }\n    \n  };\n  var len = length(l);\n  if (len < 2) {\n    return l;\n  } else {\n    return sort(len, l);\n  }\n}\n\nvar append = Pervasives.$at;\n\nvar concat = flatten;\n\nvar filter = find_all;\n\nvar sort = stable_sort;\n\nvar fast_sort = stable_sort;\n\nexports.length = length;\nexports.hd = hd;\nexports.tl = tl;\nexports.nth = nth;\nexports.rev = rev;\nexports.append = append;\nexports.rev_append = rev_append;\nexports.concat = concat;\nexports.flatten = flatten;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi$1;\nexports.rev_map = rev_map;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.iter2 = iter2;\nexports.map2 = map2;\nexports.rev_map2 = rev_map2;\nexports.fold_left2 = fold_left2;\nexports.fold_right2 = fold_right2;\nexports.for_all = for_all;\nexports.exists = exists;\nexports.for_all2 = for_all2;\nexports.exists2 = exists2;\nexports.mem = mem;\nexports.memq = memq;\nexports.find = find;\nexports.filter = filter;\nexports.find_all = find_all;\nexports.partition = partition;\nexports.assoc = assoc;\nexports.assq = assq;\nexports.mem_assoc = mem_assoc;\nexports.mem_assq = mem_assq;\nexports.remove_assoc = remove_assoc;\nexports.remove_assq = remove_assq;\nexports.split = split;\nexports.combine = combine;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\nexports.sort_uniq = sort_uniq;\nexports.merge = merge;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/list.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/list.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","./pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$char":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction chr(n) {\n  if (n < 0 || n > 255) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Char.chr\"\n        ];\n  } else {\n    return n;\n  }\n}\n\nfunction escaped(c) {\n  var exit = 0;\n  if (c >= 40) {\n    if (c !== 92) {\n      exit = c >= 127 ? 1 : 2;\n    } else {\n      return \"\\\\\\\\\";\n    }\n  } else if (c >= 32) {\n    if (c >= 39) {\n      return \"\\\\'\";\n    } else {\n      exit = 2;\n    }\n  } else if (c >= 14) {\n    exit = 1;\n  } else {\n    switch (c) {\n      case 8 : \n          return \"\\\\b\";\n      case 9 : \n          return \"\\\\t\";\n      case 10 : \n          return \"\\\\n\";\n      case 0 : \n      case 1 : \n      case 2 : \n      case 3 : \n      case 4 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 11 : \n      case 12 : \n          exit = 1;\n          break;\n      case 13 : \n          return \"\\\\r\";\n      \n    }\n  }\n  switch (exit) {\n    case 1 : \n        var s = Caml_string.caml_create_bytes(4);\n        s[0] = /* \"\\\\\" */92;\n        s[1] = 48 + (c / 100 | 0) | 0;\n        s[2] = 48 + (c / 10 | 0) % 10 | 0;\n        s[3] = 48 + c % 10 | 0;\n        return Caml_string.bytes_to_string(s);\n    case 2 : \n        var s$1 = Caml_string.caml_create_bytes(1);\n        s$1[0] = c;\n        return Caml_string.bytes_to_string(s$1);\n    \n  }\n}\n\nfunction lowercase(c) {\n  if (c >= /* \"A\" */65 && c <= /* \"Z\" */90 || c >= /* \"\\192\" */192 && c <= /* \"\\214\" */214 || c >= /* \"\\216\" */216 && c <= /* \"\\222\" */222) {\n    return c + 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction uppercase(c) {\n  if (c >= /* \"a\" */97 && c <= /* \"z\" */122 || c >= /* \"\\224\" */224 && c <= /* \"\\246\" */246 || c >= /* \"\\248\" */248 && c <= /* \"\\254\" */254) {\n    return c - 32 | 0;\n  } else {\n    return c;\n  }\n}\n\nfunction compare(c1, c2) {\n  return c1 - c2 | 0;\n}\n\nexports.chr = chr;\nexports.escaped = escaped;\nexports.lowercase = lowercase;\nexports.uppercase = uppercase;\nexports.compare = compare;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/char.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/char.js");
},
d: {"./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$bytes":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Char = __fastpack_require__(\"./char.js\");\nvar List = __fastpack_require__(\"./list.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_obj = __fastpack_require__(\"./caml_obj.js\");\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction make(n, c) {\n  var s = Caml_string.caml_create_bytes(n);\n  Caml_string.caml_fill_bytes(s, 0, n, c);\n  return s;\n}\n\nfunction init(n, f) {\n  var s = Caml_string.caml_create_bytes(n);\n  for(var i = 0 ,i_finish = n - 1 | 0; i <= i_finish; ++i){\n    s[i] = Curry._1(f, i);\n  }\n  return s;\n}\n\nvar empty = [];\n\nfunction copy(s) {\n  var len = s.length;\n  var r = Caml_string.caml_create_bytes(len);\n  Caml_string.caml_blit_bytes(s, 0, r, 0, len);\n  return r;\n}\n\nfunction to_string(b) {\n  return Caml_string.bytes_to_string(copy(b));\n}\n\nfunction of_string(s) {\n  return copy(Caml_string.bytes_of_string(s));\n}\n\nfunction sub(s, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.sub / Bytes.sub\"\n        ];\n  } else {\n    var r = Caml_string.caml_create_bytes(len);\n    Caml_string.caml_blit_bytes(s, ofs, r, 0, len);\n    return r;\n  }\n}\n\nfunction sub_string(b, ofs, len) {\n  return Caml_string.bytes_to_string(sub(b, ofs, len));\n}\n\nfunction extend(s, left, right) {\n  var len = (s.length + left | 0) + right | 0;\n  var r = Caml_string.caml_create_bytes(len);\n  var match = left < 0 ? /* tuple */[\n      -left | 0,\n      0\n    ] : /* tuple */[\n      0,\n      left\n    ];\n  var dstoff = match[1];\n  var srcoff = match[0];\n  var cpylen = Caml_primitive.caml_int_min(s.length - srcoff | 0, len - dstoff | 0);\n  if (cpylen > 0) {\n    Caml_string.caml_blit_bytes(s, srcoff, r, dstoff, cpylen);\n  }\n  return r;\n}\n\nfunction fill(s, ofs, len, c) {\n  if (ofs < 0 || len < 0 || ofs > (s.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.fill / Bytes.fill\"\n        ];\n  } else {\n    return Caml_string.caml_fill_bytes(s, ofs, len, c);\n  }\n}\n\nfunction blit(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Bytes.blit\"\n        ];\n  } else {\n    return Caml_string.caml_blit_bytes(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction blit_string(s1, ofs1, s2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (s1.length - len | 0) || ofs2 < 0 || ofs2 > (s2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.blit / Bytes.blit_string\"\n        ];\n  } else {\n    return Caml_string.caml_blit_string(s1, ofs1, s2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = /* record */[/* contents */0];\n    var len = /* record */[/* contents */0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_string.caml_create_bytes(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_string.caml_blit_bytes(hd, 0, r, 0, hd.length);\n    var pos = /* record */[/* contents */hd.length];\n    List.iter((function (s) {\n            Caml_string.caml_blit_bytes(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_string.caml_blit_bytes(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return r;\n  } else {\n    return empty;\n  }\n}\n\nfunction cat(s1, s2) {\n  var l1 = s1.length;\n  var l2 = s2.length;\n  var r = Caml_string.caml_create_bytes(l1 + l2 | 0);\n  Caml_string.caml_blit_bytes(s1, 0, r, 0, l1);\n  Caml_string.caml_blit_bytes(s2, 0, r, l1, l2);\n  return r;\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    return switcher === 23;\n  } else {\n    return switcher !== 2;\n  }\n}\n\nfunction trim(s) {\n  var len = s.length;\n  var i = 0;\n  while(i < len && is_space(s[i])) {\n    i = i + 1 | 0;\n  };\n  var j = len - 1 | 0;\n  while(j >= i && is_space(s[j])) {\n    j = j - 1 | 0;\n  };\n  if (j >= i) {\n    return sub(s, i, (j - i | 0) + 1 | 0);\n  } else {\n    return empty;\n  }\n}\n\nfunction escaped(s) {\n  var n = 0;\n  for(var i = 0 ,i_finish = s.length - 1 | 0; i <= i_finish; ++i){\n    var match = s[i];\n    var tmp;\n    if (match >= 32) {\n      var switcher = match - 34 | 0;\n      tmp = switcher > 58 || switcher < 0 ? (\n          switcher >= 93 ? 4 : 1\n        ) : (\n          switcher > 57 || switcher < 1 ? 2 : 1\n        );\n    } else {\n      tmp = match >= 11 ? (\n          match !== 13 ? 4 : 2\n        ) : (\n          match >= 8 ? 2 : 4\n        );\n    }\n    n = n + tmp | 0;\n  }\n  if (n === s.length) {\n    return copy(s);\n  } else {\n    var s$prime = Caml_string.caml_create_bytes(n);\n    n = 0;\n    for(var i$1 = 0 ,i_finish$1 = s.length - 1 | 0; i$1 <= i_finish$1; ++i$1){\n      var c = s[i$1];\n      var exit = 0;\n      if (c >= 35) {\n        if (c !== 92) {\n          if (c >= 127) {\n            exit = 1;\n          } else {\n            s$prime[n] = c;\n          }\n        } else {\n          exit = 2;\n        }\n      } else if (c >= 32) {\n        if (c >= 34) {\n          exit = 2;\n        } else {\n          s$prime[n] = c;\n        }\n      } else if (c >= 14) {\n        exit = 1;\n      } else {\n        switch (c) {\n          case 8 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"b\" */98;\n              break;\n          case 9 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"t\" */116;\n              break;\n          case 10 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"n\" */110;\n              break;\n          case 0 : \n          case 1 : \n          case 2 : \n          case 3 : \n          case 4 : \n          case 5 : \n          case 6 : \n          case 7 : \n          case 11 : \n          case 12 : \n              exit = 1;\n              break;\n          case 13 : \n              s$prime[n] = /* \"\\\\\" */92;\n              n = n + 1 | 0;\n              s$prime[n] = /* \"r\" */114;\n              break;\n          \n        }\n      }\n      switch (exit) {\n        case 1 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 100 | 0) | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + (c / 10 | 0) % 10 | 0;\n            n = n + 1 | 0;\n            s$prime[n] = 48 + c % 10 | 0;\n            break;\n        case 2 : \n            s$prime[n] = /* \"\\\\\" */92;\n            n = n + 1 | 0;\n            s$prime[n] = c;\n            break;\n        \n      }\n      n = n + 1 | 0;\n    }\n    return s$prime;\n  }\n}\n\nfunction map(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_string.caml_create_bytes(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction mapi(f, s) {\n  var l = s.length;\n  if (l === 0) {\n    return s;\n  } else {\n    var r = Caml_string.caml_create_bytes(l);\n    for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, s[i]);\n    }\n    return r;\n  }\n}\n\nfunction uppercase(s) {\n  return map(Char.uppercase, s);\n}\n\nfunction lowercase(s) {\n  return map(Char.lowercase, s);\n}\n\nfunction apply1(f, s) {\n  if (s.length === 0) {\n    return s;\n  } else {\n    var r = copy(s);\n    r[0] = Curry._1(f, s[0]);\n    return r;\n  }\n}\n\nfunction capitalize(s) {\n  return apply1(Char.uppercase, s);\n}\n\nfunction uncapitalize(s) {\n  return apply1(Char.lowercase, s);\n}\n\nfunction index_rec(s, lim, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction index(s, c) {\n  return index_rec(s, s.length, 0, c);\n}\n\nfunction index_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.index_from / Bytes.index_from\"\n        ];\n  } else {\n    return index_rec(s, l, i, c);\n  }\n}\n\nfunction rindex_rec(s, _i, c) {\n  while(true) {\n    var i = _i;\n    if (i < 0) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (s[i] === c) {\n      return i;\n    } else {\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction rindex(s, c) {\n  return rindex_rec(s, s.length - 1 | 0, c);\n}\n\nfunction rindex_from(s, i, c) {\n  if (i < -1 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rindex_from / Bytes.rindex_from\"\n        ];\n  } else {\n    return rindex_rec(s, i, c);\n  }\n}\n\nfunction contains_from(s, i, c) {\n  var l = s.length;\n  if (i < 0 || i > l) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.contains_from / Bytes.contains_from\"\n        ];\n  } else {\n    try {\n      index_rec(s, l, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction contains(s, c) {\n  return contains_from(s, 0, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"String.rcontains_from / Bytes.rcontains_from\"\n        ];\n  } else {\n    try {\n      rindex_rec(s, i, c);\n      return true;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return false;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nvar compare = Caml_obj.caml_compare;\n\nvar unsafe_to_string = Caml_string.bytes_to_string;\n\nvar unsafe_of_string = Caml_string.bytes_of_string;\n\nexports.make = make;\nexports.init = init;\nexports.empty = empty;\nexports.copy = copy;\nexports.of_string = of_string;\nexports.to_string = to_string;\nexports.sub = sub;\nexports.sub_string = sub_string;\nexports.extend = extend;\nexports.fill = fill;\nexports.blit = blit;\nexports.blit_string = blit_string;\nexports.concat = concat;\nexports.cat = cat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\nexports.unsafe_to_string = unsafe_to_string;\nexports.unsafe_of_string = unsafe_of_string;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/bytes.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/bytes.js");
},
d: {"./char.js":"NM$$bsb$$_$$native$lib$js$char","./list.js":"NM$$bsb$$_$$native$lib$js$list","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$string":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar List = __fastpack_require__(\"./list.js\");\nvar Bytes = __fastpack_require__(\"./bytes.js\");\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\n\nfunction make(n, c) {\n  return Caml_string.bytes_to_string(Bytes.make(n, c));\n}\n\nfunction init(n, f) {\n  return Caml_string.bytes_to_string(Bytes.init(n, f));\n}\n\nfunction copy(s) {\n  return Caml_string.bytes_to_string(Bytes.copy(Caml_string.bytes_of_string(s)));\n}\n\nfunction sub(s, ofs, len) {\n  return Caml_string.bytes_to_string(Bytes.sub(Caml_string.bytes_of_string(s), ofs, len));\n}\n\nfunction concat(sep, l) {\n  if (l) {\n    var hd = l[0];\n    var num = /* record */[/* contents */0];\n    var len = /* record */[/* contents */0];\n    List.iter((function (s) {\n            num[0] = num[0] + 1 | 0;\n            len[0] = len[0] + s.length | 0;\n            return /* () */0;\n          }), l);\n    var r = Caml_string.caml_create_bytes(len[0] + Caml_int32.imul(sep.length, num[0] - 1 | 0) | 0);\n    Caml_string.caml_blit_string(hd, 0, r, 0, hd.length);\n    var pos = /* record */[/* contents */hd.length];\n    List.iter((function (s) {\n            Caml_string.caml_blit_string(sep, 0, r, pos[0], sep.length);\n            pos[0] = pos[0] + sep.length | 0;\n            Caml_string.caml_blit_string(s, 0, r, pos[0], s.length);\n            pos[0] = pos[0] + s.length | 0;\n            return /* () */0;\n          }), l[1]);\n    return Caml_string.bytes_to_string(r);\n  } else {\n    return \"\";\n  }\n}\n\nfunction iter(f, s) {\n  return Bytes.iter(f, Caml_string.bytes_of_string(s));\n}\n\nfunction iteri(f, s) {\n  return Bytes.iteri(f, Caml_string.bytes_of_string(s));\n}\n\nfunction map(f, s) {\n  return Caml_string.bytes_to_string(Bytes.map(f, Caml_string.bytes_of_string(s)));\n}\n\nfunction mapi(f, s) {\n  return Caml_string.bytes_to_string(Bytes.mapi(f, Caml_string.bytes_of_string(s)));\n}\n\nfunction is_space(param) {\n  var switcher = param - 9 | 0;\n  if (switcher > 4 || switcher < 0) {\n    return switcher === 23;\n  } else {\n    return switcher !== 2;\n  }\n}\n\nfunction trim(s) {\n  if (s === \"\" || !(is_space(s.charCodeAt(0)) || is_space(s.charCodeAt(s.length - 1 | 0)))) {\n    return s;\n  } else {\n    return Caml_string.bytes_to_string(Bytes.trim(Caml_string.bytes_of_string(s)));\n  }\n}\n\nfunction escaped(s) {\n  var needs_escape = function (_i) {\n    while(true) {\n      var i = _i;\n      if (i >= s.length) {\n        return false;\n      } else {\n        var match = s.charCodeAt(i);\n        if (match >= 32) {\n          var switcher = match - 34 | 0;\n          if (switcher > 58 || switcher < 0) {\n            if (switcher >= 93) {\n              return true;\n            } else {\n              _i = i + 1 | 0;\n              continue ;\n            }\n          } else if (switcher > 57 || switcher < 1) {\n            return true;\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n          }\n        } else {\n          return true;\n        }\n      }\n    };\n  };\n  if (needs_escape(0)) {\n    return Caml_string.bytes_to_string(Bytes.escaped(Caml_string.bytes_of_string(s)));\n  } else {\n    return s;\n  }\n}\n\nfunction index(s, c) {\n  return Bytes.index(Caml_string.bytes_of_string(s), c);\n}\n\nfunction rindex(s, c) {\n  return Bytes.rindex(Caml_string.bytes_of_string(s), c);\n}\n\nfunction index_from(s, i, c) {\n  return Bytes.index_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction rindex_from(s, i, c) {\n  return Bytes.rindex_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction contains(s, c) {\n  return Bytes.contains(Caml_string.bytes_of_string(s), c);\n}\n\nfunction contains_from(s, i, c) {\n  return Bytes.contains_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction rcontains_from(s, i, c) {\n  return Bytes.rcontains_from(Caml_string.bytes_of_string(s), i, c);\n}\n\nfunction uppercase(s) {\n  return Caml_string.bytes_to_string(Bytes.uppercase(Caml_string.bytes_of_string(s)));\n}\n\nfunction lowercase(s) {\n  return Caml_string.bytes_to_string(Bytes.lowercase(Caml_string.bytes_of_string(s)));\n}\n\nfunction capitalize(s) {\n  return Caml_string.bytes_to_string(Bytes.capitalize(Caml_string.bytes_of_string(s)));\n}\n\nfunction uncapitalize(s) {\n  return Caml_string.bytes_to_string(Bytes.uncapitalize(Caml_string.bytes_of_string(s)));\n}\n\nvar compare = Caml_primitive.caml_string_compare;\n\nvar fill = Bytes.fill;\n\nvar blit = Bytes.blit_string;\n\nexports.make = make;\nexports.init = init;\nexports.copy = copy;\nexports.sub = sub;\nexports.fill = fill;\nexports.blit = blit;\nexports.concat = concat;\nexports.iter = iter;\nexports.iteri = iteri;\nexports.map = map;\nexports.mapi = mapi;\nexports.trim = trim;\nexports.escaped = escaped;\nexports.index = index;\nexports.rindex = rindex;\nexports.index_from = index_from;\nexports.rindex_from = rindex_from;\nexports.contains = contains;\nexports.contains_from = contains_from;\nexports.rcontains_from = rcontains_from;\nexports.uppercase = uppercase;\nexports.lowercase = lowercase;\nexports.capitalize = capitalize;\nexports.uncapitalize = uncapitalize;\nexports.compare = compare;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/string.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/string.js");
},
d: {"./list.js":"NM$$bsb$$_$$native$lib$js$list","./bytes.js":"NM$$bsb$$_$$native$lib$js$bytes","./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive"}
},
"NM$$bsb$$_$$native$lib$js$buffer":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Bytes = __fastpack_require__(\"./bytes.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar $$String = __fastpack_require__(\"./string.js\");\nvar Pervasives = __fastpack_require__(\"./pervasives.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction create(n) {\n  var n$1 = n < 1 ? 1 : n;\n  var s = Caml_string.caml_create_bytes(n$1);\n  return /* record */[\n          /* buffer */s,\n          /* position */0,\n          /* length */n$1,\n          /* initial_buffer */s\n        ];\n}\n\nfunction contents(b) {\n  return Bytes.sub_string(b[/* buffer */0], 0, b[/* position */1]);\n}\n\nfunction to_bytes(b) {\n  return Bytes.sub(b[/* buffer */0], 0, b[/* position */1]);\n}\n\nfunction sub(b, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (b[/* position */1] - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.sub\"\n        ];\n  } else {\n    return Bytes.sub_string(b[/* buffer */0], ofs, len);\n  }\n}\n\nfunction blit(src, srcoff, dst, dstoff, len) {\n  if (len < 0 || srcoff < 0 || srcoff > (src[/* position */1] - len | 0) || dstoff < 0 || dstoff > (dst.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.blit\"\n        ];\n  } else {\n    return Bytes.blit(src[/* buffer */0], srcoff, dst, dstoff, len);\n  }\n}\n\nfunction nth(b, ofs) {\n  if (ofs < 0 || ofs >= b[/* position */1]) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.nth\"\n        ];\n  } else {\n    return b[/* buffer */0][ofs];\n  }\n}\n\nfunction length(b) {\n  return b[/* position */1];\n}\n\nfunction clear(b) {\n  b[/* position */1] = 0;\n  return /* () */0;\n}\n\nfunction reset(b) {\n  b[/* position */1] = 0;\n  b[/* buffer */0] = b[/* initial_buffer */3];\n  b[/* length */2] = b[/* buffer */0].length;\n  return /* () */0;\n}\n\nfunction resize(b, more) {\n  var len = b[/* length */2];\n  var new_len = len;\n  while((b[/* position */1] + more | 0) > new_len) {\n    new_len = (new_len << 1);\n  };\n  var new_buffer = Caml_string.caml_create_bytes(new_len);\n  Bytes.blit(b[/* buffer */0], 0, new_buffer, 0, b[/* position */1]);\n  b[/* buffer */0] = new_buffer;\n  b[/* length */2] = new_len;\n  return /* () */0;\n}\n\nfunction add_char(b, c) {\n  var pos = b[/* position */1];\n  if (pos >= b[/* length */2]) {\n    resize(b, 1);\n  }\n  b[/* buffer */0][pos] = c;\n  b[/* position */1] = pos + 1 | 0;\n  return /* () */0;\n}\n\nfunction add_substring(b, s, offset, len) {\n  if (offset < 0 || len < 0 || (offset + len | 0) > s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.add_substring/add_subbytes\"\n        ];\n  }\n  var new_position = b[/* position */1] + len | 0;\n  if (new_position > b[/* length */2]) {\n    resize(b, len);\n  }\n  Bytes.blit_string(s, offset, b[/* buffer */0], b[/* position */1], len);\n  b[/* position */1] = new_position;\n  return /* () */0;\n}\n\nfunction add_subbytes(b, s, offset, len) {\n  return add_substring(b, Caml_string.bytes_to_string(s), offset, len);\n}\n\nfunction add_string(b, s) {\n  var len = s.length;\n  var new_position = b[/* position */1] + len | 0;\n  if (new_position > b[/* length */2]) {\n    resize(b, len);\n  }\n  Bytes.blit_string(s, 0, b[/* buffer */0], b[/* position */1], len);\n  b[/* position */1] = new_position;\n  return /* () */0;\n}\n\nfunction add_bytes(b, s) {\n  return add_string(b, Caml_string.bytes_to_string(s));\n}\n\nfunction add_buffer(b, bs) {\n  return add_subbytes(b, bs[/* buffer */0], 0, bs[/* position */1]);\n}\n\nfunction add_channel(b, ic, len) {\n  if (len < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Buffer.add_channel\"\n        ];\n  }\n  if ((b[/* position */1] + len | 0) > b[/* length */2]) {\n    resize(b, len);\n  }\n  Pervasives.really_input(ic, b[/* buffer */0], b[/* position */1], len);\n  b[/* position */1] = b[/* position */1] + len | 0;\n  return /* () */0;\n}\n\nfunction output_buffer(oc, b) {\n  return Pervasives.output(oc, b[/* buffer */0], 0, b[/* position */1]);\n}\n\nfunction closing(param) {\n  if (param !== 40) {\n    if (param !== 123) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            /* tuple */[\n              \"buffer.ml\",\n              126,\n              9\n            ]\n          ];\n    } else {\n      return /* \"}\" */125;\n    }\n  } else {\n    return /* \")\" */41;\n  }\n}\n\nfunction advance_to_closing(opening, closing, k, s, start) {\n  var _k = k;\n  var _i = start;\n  var lim = s.length;\n  while(true) {\n    var i = _i;\n    var k$1 = _k;\n    if (i >= lim) {\n      throw Caml_builtin_exceptions.not_found;\n    } else if (Caml_string.get(s, i) === opening) {\n      _i = i + 1 | 0;\n      _k = k$1 + 1 | 0;\n      continue ;\n    } else if (Caml_string.get(s, i) === closing) {\n      if (k$1 === 0) {\n        return i;\n      } else {\n        _i = i + 1 | 0;\n        _k = k$1 - 1 | 0;\n        continue ;\n      }\n    } else {\n      _i = i + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction advance_to_non_alpha(s, start) {\n  var _i = start;\n  var lim = s.length;\n  while(true) {\n    var i = _i;\n    if (i >= lim) {\n      return lim;\n    } else {\n      var match = Caml_string.get(s, i);\n      var exit = 0;\n      if (match >= 91) {\n        if (match >= 97) {\n          if (match >= 123) {\n            return i;\n          } else {\n            exit = 1;\n          }\n        } else if (match !== 95) {\n          return i;\n        } else {\n          exit = 1;\n        }\n      } else if (match >= 58) {\n        if (match >= 65) {\n          exit = 1;\n        } else {\n          return i;\n        }\n      } else if (match >= 48) {\n        exit = 1;\n      } else {\n        return i;\n      }\n      if (exit === 1) {\n        _i = i + 1 | 0;\n        continue ;\n      }\n      \n    }\n  };\n}\n\nfunction find_ident(s, start, lim) {\n  if (start >= lim) {\n    throw Caml_builtin_exceptions.not_found;\n  } else {\n    var c = Caml_string.get(s, start);\n    var exit = 0;\n    if (c !== 40 && c !== 123) {\n      var stop = advance_to_non_alpha(s, start + 1 | 0);\n      return /* tuple */[\n              $$String.sub(s, start, stop - start | 0),\n              stop\n            ];\n    } else {\n      exit = 1;\n    }\n    if (exit === 1) {\n      var new_start = start + 1 | 0;\n      var stop$1 = advance_to_closing(c, closing(c), 0, s, new_start);\n      return /* tuple */[\n              $$String.sub(s, new_start, (stop$1 - start | 0) - 1 | 0),\n              stop$1 + 1 | 0\n            ];\n    }\n    \n  }\n}\n\nfunction add_substitute(b, f, s) {\n  var lim = s.length;\n  var _previous = /* \" \" */32;\n  var _i = 0;\n  while(true) {\n    var i = _i;\n    var previous = _previous;\n    if (i < lim) {\n      var current = Caml_string.get(s, i);\n      if (current !== 36) {\n        if (previous === /* \"\\\\\" */92) {\n          add_char(b, /* \"\\\\\" */92);\n          add_char(b, current);\n          _i = i + 1 | 0;\n          _previous = /* \" \" */32;\n          continue ;\n        } else if (current !== 92) {\n          add_char(b, current);\n          _i = i + 1 | 0;\n          _previous = current;\n          continue ;\n        } else {\n          _i = i + 1 | 0;\n          _previous = current;\n          continue ;\n        }\n      } else if (previous === /* \"\\\\\" */92) {\n        add_char(b, current);\n        _i = i + 1 | 0;\n        _previous = /* \" \" */32;\n        continue ;\n      } else {\n        var j = i + 1 | 0;\n        var match = find_ident(s, j, lim);\n        add_string(b, Curry._1(f, match[0]));\n        _i = match[1];\n        _previous = /* \" \" */32;\n        continue ;\n      }\n    } else if (previous === /* \"\\\\\" */92) {\n      return add_char(b, previous);\n    } else {\n      return 0;\n    }\n  };\n}\n\nexports.create = create;\nexports.contents = contents;\nexports.to_bytes = to_bytes;\nexports.sub = sub;\nexports.blit = blit;\nexports.nth = nth;\nexports.length = length;\nexports.clear = clear;\nexports.reset = reset;\nexports.add_char = add_char;\nexports.add_string = add_string;\nexports.add_bytes = add_bytes;\nexports.add_substring = add_substring;\nexports.add_subbytes = add_subbytes;\nexports.add_substitute = add_substitute;\nexports.add_buffer = add_buffer;\nexports.add_channel = add_channel;\nexports.output_buffer = output_buffer;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/buffer.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/buffer.js");
},
d: {"./bytes.js":"NM$$bsb$$_$$native$lib$js$bytes","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./string.js":"NM$$bsb$$_$$native$lib$js$string","./pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$js_exn":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\n\nvar $$Error = Caml_exceptions.create(\"Js_exn.Error\");\n\nfunction internalToOCamlException(e) {\n  if (Caml_exceptions.isCamlExceptionOrOpenVariant(e)) {\n    return e;\n  } else {\n    return [\n            $$Error,\n            e\n          ];\n  }\n}\n\nfunction raiseError(str) {\n  throw new Error(str);\n}\n\nfunction raiseEvalError(str) {\n  throw new EvalError(str);\n}\n\nfunction raiseRangeError(str) {\n  throw new RangeError(str);\n}\n\nfunction raiseReferenceError(str) {\n  throw new ReferenceError(str);\n}\n\nfunction raiseSyntaxError(str) {\n  throw new SyntaxError(str);\n}\n\nfunction raiseTypeError(str) {\n  throw new TypeError(str);\n}\n\nfunction raiseUriError(str) {\n  throw new URIError(str);\n}\n\nexports.$$Error = $$Error;\nexports.internalToOCamlException = internalToOCamlException;\nexports.raiseError = raiseError;\nexports.raiseEvalError = raiseEvalError;\nexports.raiseRangeError = raiseRangeError;\nexports.raiseReferenceError = raiseReferenceError;\nexports.raiseSyntaxError = raiseSyntaxError;\nexports.raiseTypeError = raiseTypeError;\nexports.raiseUriError = raiseUriError;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/js_exn.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/js_exn.js");
},
d: {"./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_bytes":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction get(s, i) {\n  if (i < 0 || i >= s.length) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"index out of bounds\"\n        ];\n  } else {\n    return s[i];\n  }\n}\n\nexports.get = get;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_bytes.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_bytes.js");
},
d: {"./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_float":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nfunction caml_int32_float_of_bits(x) {\n  var int32 = new Int32Array(/* array */[x]);\n  var float32 = new Float32Array(int32.buffer);\n  return float32[0];\n}\n\nfunction caml_int32_bits_of_float(x) {\n  var float32 = new Float32Array(/* array */[x]);\n  return new Int32Array(float32.buffer)[0];\n}\n\nfunction caml_classify_float(x) {\n  if (isFinite(x)) {\n    if (Math.abs(x) >= 2.2250738585072014e-308) {\n      return /* FP_normal */0;\n    } else if (x !== 0) {\n      return /* FP_subnormal */1;\n    } else {\n      return /* FP_zero */2;\n    }\n  } else if (isNaN(x)) {\n    return /* FP_nan */4;\n  } else {\n    return /* FP_infinite */3;\n  }\n}\n\nfunction caml_modf_float(x) {\n  if (isFinite(x)) {\n    var neg = 1 / x < 0;\n    var x$1 = Math.abs(x);\n    var i = Math.floor(x$1);\n    var f = x$1 - i;\n    if (neg) {\n      return /* tuple */[\n              -f,\n              -i\n            ];\n    } else {\n      return /* tuple */[\n              f,\n              i\n            ];\n    }\n  } else if (isNaN(x)) {\n    return /* tuple */[\n            NaN,\n            NaN\n          ];\n  } else {\n    return /* tuple */[\n            1 / x,\n            x\n          ];\n  }\n}\n\nfunction caml_ldexp_float(x, exp) {\n  var x$prime = x;\n  var exp$prime = exp;\n  if (exp$prime > 1023) {\n    exp$prime -= 1023;\n    x$prime = x$prime * Math.pow(2, 1023);\n    if (exp$prime > 1023) {\n      exp$prime -= 1023;\n      x$prime = x$prime * Math.pow(2, 1023);\n    }\n    \n  } else if (exp$prime < -1023) {\n    exp$prime += 1023;\n    x$prime = x$prime * Math.pow(2, -1023);\n  }\n  return x$prime * Math.pow(2, exp$prime);\n}\n\nfunction caml_frexp_float(x) {\n  if (x === 0 || !isFinite(x)) {\n    return /* tuple */[\n            x,\n            0\n          ];\n  } else {\n    var neg = x < 0;\n    var x$prime = Math.abs(x);\n    var exp = Math.floor(Math.LOG2E * Math.log(x$prime)) + 1;\n    x$prime = x$prime * Math.pow(2, -exp);\n    if (x$prime < 0.5) {\n      x$prime = x$prime * 2;\n      exp -= 1;\n    }\n    if (neg) {\n      x$prime = -x$prime;\n    }\n    return /* tuple */[\n            x$prime,\n            exp | 0\n          ];\n  }\n}\n\nfunction caml_copysign_float(x, y) {\n  var x$1 = Math.abs(x);\n  var y$1 = y === 0 ? 1 / y : y;\n  if (y$1 < 0) {\n    return -x$1;\n  } else {\n    return x$1;\n  }\n}\n\nfunction caml_expm1_float(x) {\n  var y = Math.exp(x);\n  var z = y - 1;\n  if (Math.abs(x) > 1) {\n    return z;\n  } else if (z === 0) {\n    return x;\n  } else {\n    return x * z / Math.log(y);\n  }\n}\n\nfunction caml_hypot_float(x, y) {\n  var x0 = Math.abs(x);\n  var y0 = Math.abs(y);\n  var a = Math.max(x0, y0);\n  var b = Math.min(x0, y0) / (\n    a !== 0 ? a : 1\n  );\n  return a * Math.sqrt(1 + b * b);\n}\n\nfunction caml_log10_float(x) {\n  return Math.LOG10E * Math.log(x);\n}\n\nexports.caml_int32_float_of_bits = caml_int32_float_of_bits;\nexports.caml_int32_bits_of_float = caml_int32_bits_of_float;\nexports.caml_classify_float = caml_classify_float;\nexports.caml_modf_float = caml_modf_float;\nexports.caml_ldexp_float = caml_ldexp_float;\nexports.caml_frexp_float = caml_frexp_float;\nexports.caml_copysign_float = caml_copysign_float;\nexports.caml_expm1_float = caml_expm1_float;\nexports.caml_hypot_float = caml_hypot_float;\nexports.caml_log10_float = caml_log10_float;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_float.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_float.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$camlinternalFormat":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Char = __fastpack_require__(\"./char.js\");\nvar Block = __fastpack_require__(\"./block.js\");\nvar Bytes = __fastpack_require__(\"./bytes.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar $$Buffer = __fastpack_require__(\"./buffer.js\");\nvar Js_exn = __fastpack_require__(\"./js_exn.js\");\nvar $$String = __fastpack_require__(\"./string.js\");\nvar Caml_io = __fastpack_require__(\"./caml_io.js\");\nvar Caml_obj = __fastpack_require__(\"./caml_obj.js\");\nvar Caml_bytes = __fastpack_require__(\"./caml_bytes.js\");\nvar Caml_float = __fastpack_require__(\"./caml_float.js\");\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\nvar Pervasives = __fastpack_require__(\"./pervasives.js\");\nvar Caml_format = __fastpack_require__(\"./caml_format.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = __fastpack_require__(\"./camlinternalFormatBasics.js\");\n\nfunction create_char_set(param) {\n  return Bytes.make(32, /* \"\\000\" */0);\n}\n\nfunction add_in_char_set(char_set, c) {\n  var str_ind = (c >>> 3);\n  var mask = (1 << (c & 7));\n  char_set[str_ind] = Pervasives.char_of_int(Caml_bytes.get(char_set, str_ind) | mask);\n  return /* () */0;\n}\n\nvar freeze_char_set = Bytes.to_string;\n\nfunction rev_char_set(char_set) {\n  var char_set$prime = Bytes.make(32, /* \"\\000\" */0);\n  for(var i = 0; i <= 31; ++i){\n    char_set$prime[i] = Pervasives.char_of_int(Caml_string.get(char_set, i) ^ 255);\n  }\n  return Caml_string.bytes_to_string(char_set$prime);\n}\n\nfunction is_in_char_set(char_set, c) {\n  var str_ind = (c >>> 3);\n  var mask = (1 << (c & 7));\n  return (Caml_string.get(char_set, str_ind) & mask) !== 0;\n}\n\nfunction pad_of_pad_opt(pad_opt) {\n  if (pad_opt !== undefined) {\n    return /* Lit_padding */Block.__(0, [\n              /* Right */1,\n              pad_opt\n            ]);\n  } else {\n    return /* No_padding */0;\n  }\n}\n\nfunction prec_of_prec_opt(prec_opt) {\n  if (prec_opt !== undefined) {\n    return /* Lit_precision */[prec_opt];\n  } else {\n    return /* No_precision */0;\n  }\n}\n\nfunction param_format_of_ignored_format(ign, fmt) {\n  if (typeof ign === \"number\") {\n    switch (ign) {\n      case 0 : \n          return /* Param_format_EBB */[/* Char */Block.__(0, [fmt])];\n      case 1 : \n          return /* Param_format_EBB */[/* Caml_char */Block.__(1, [fmt])];\n      case 2 : \n          return /* Param_format_EBB */[/* Bool */Block.__(9, [fmt])];\n      case 3 : \n          return /* Param_format_EBB */[/* Reader */Block.__(19, [fmt])];\n      case 4 : \n          return /* Param_format_EBB */[/* Scan_next_char */Block.__(22, [fmt])];\n      \n    }\n  } else {\n    switch (ign.tag | 0) {\n      case 0 : \n          return /* Param_format_EBB */[/* String */Block.__(2, [\n                      pad_of_pad_opt(ign[0]),\n                      fmt\n                    ])];\n      case 1 : \n          return /* Param_format_EBB */[/* Caml_string */Block.__(3, [\n                      pad_of_pad_opt(ign[0]),\n                      fmt\n                    ])];\n      case 2 : \n          return /* Param_format_EBB */[/* Int */Block.__(4, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 3 : \n          return /* Param_format_EBB */[/* Int32 */Block.__(5, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 4 : \n          return /* Param_format_EBB */[/* Nativeint */Block.__(6, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 5 : \n          return /* Param_format_EBB */[/* Int64 */Block.__(7, [\n                      ign[0],\n                      pad_of_pad_opt(ign[1]),\n                      /* No_precision */0,\n                      fmt\n                    ])];\n      case 6 : \n          return /* Param_format_EBB */[/* Float */Block.__(8, [\n                      /* Float_f */0,\n                      pad_of_pad_opt(ign[0]),\n                      prec_of_prec_opt(ign[1]),\n                      fmt\n                    ])];\n      case 7 : \n          return /* Param_format_EBB */[/* Format_arg */Block.__(13, [\n                      ign[0],\n                      ign[1],\n                      fmt\n                    ])];\n      case 8 : \n          return /* Param_format_EBB */[/* Format_subst */Block.__(14, [\n                      ign[0],\n                      ign[1],\n                      fmt\n                    ])];\n      case 9 : \n          return /* Param_format_EBB */[/* Scan_char_set */Block.__(20, [\n                      ign[0],\n                      ign[1],\n                      fmt\n                    ])];\n      case 10 : \n          return /* Param_format_EBB */[/* Scan_get_counter */Block.__(21, [\n                      ign[0],\n                      fmt\n                    ])];\n      \n    }\n  }\n}\n\nfunction buffer_check_size(buf, overhead) {\n  var len = buf[/* bytes */1].length;\n  var min_len = buf[/* ind */0] + overhead | 0;\n  if (min_len > len) {\n    var new_len = Caml_primitive.caml_int_max((len << 1), min_len);\n    var new_str = Caml_string.caml_create_bytes(new_len);\n    Bytes.blit(buf[/* bytes */1], 0, new_str, 0, len);\n    buf[/* bytes */1] = new_str;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction buffer_add_char(buf, c) {\n  buffer_check_size(buf, 1);\n  buf[/* bytes */1][buf[/* ind */0]] = c;\n  buf[/* ind */0] = buf[/* ind */0] + 1 | 0;\n  return /* () */0;\n}\n\nfunction buffer_add_string(buf, s) {\n  var str_len = s.length;\n  buffer_check_size(buf, str_len);\n  $$String.blit(s, 0, buf[/* bytes */1], buf[/* ind */0], str_len);\n  buf[/* ind */0] = buf[/* ind */0] + str_len | 0;\n  return /* () */0;\n}\n\nfunction buffer_contents(buf) {\n  return Bytes.sub_string(buf[/* bytes */1], 0, buf[/* ind */0]);\n}\n\nfunction char_of_iconv(iconv) {\n  switch (iconv) {\n    case 0 : \n    case 1 : \n    case 2 : \n        return /* \"d\" */100;\n    case 3 : \n    case 4 : \n    case 5 : \n        return /* \"i\" */105;\n    case 6 : \n    case 7 : \n        return /* \"x\" */120;\n    case 8 : \n    case 9 : \n        return /* \"X\" */88;\n    case 10 : \n    case 11 : \n        return /* \"o\" */111;\n    case 12 : \n        return /* \"u\" */117;\n    \n  }\n}\n\nfunction char_of_fconv(fconv) {\n  switch (fconv) {\n    case 0 : \n    case 1 : \n    case 2 : \n        return /* \"f\" */102;\n    case 3 : \n    case 4 : \n    case 5 : \n        return /* \"e\" */101;\n    case 6 : \n    case 7 : \n    case 8 : \n        return /* \"E\" */69;\n    case 9 : \n    case 10 : \n    case 11 : \n        return /* \"g\" */103;\n    case 12 : \n    case 13 : \n    case 14 : \n        return /* \"G\" */71;\n    case 15 : \n        return /* \"F\" */70;\n    \n  }\n}\n\nfunction char_of_counter(counter) {\n  switch (counter) {\n    case 0 : \n        return /* \"l\" */108;\n    case 1 : \n        return /* \"n\" */110;\n    case 2 : \n        return /* \"N\" */78;\n    \n  }\n}\n\nfunction bprint_char_set(buf, char_set) {\n  var print_char = function (buf, i) {\n    var c = Pervasives.char_of_int(i);\n    if (c !== 37) {\n      if (c !== 64) {\n        return buffer_add_char(buf, c);\n      } else {\n        buffer_add_char(buf, /* \"%\" */37);\n        return buffer_add_char(buf, /* \"@\" */64);\n      }\n    } else {\n      buffer_add_char(buf, /* \"%\" */37);\n      return buffer_add_char(buf, /* \"%\" */37);\n    }\n  };\n  var print_out = function (set, _i) {\n    while(true) {\n      var i = _i;\n      if (i < 256) {\n        if (is_in_char_set(set, Pervasives.char_of_int(i))) {\n          var set$1 = set;\n          var i$1 = i;\n          var match = Pervasives.char_of_int(i$1);\n          var switcher = match - 45 | 0;\n          if (switcher > 48 || switcher < 0) {\n            if (switcher >= 210) {\n              return print_char(buf, 255);\n            } else {\n              return print_second(set$1, i$1 + 1 | 0);\n            }\n          } else if (switcher > 47 || switcher < 1) {\n            return print_out(set$1, i$1 + 1 | 0);\n          } else {\n            return print_second(set$1, i$1 + 1 | 0);\n          }\n        } else {\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else {\n        return 0;\n      }\n    };\n  };\n  var print_second = function (set, i) {\n    if (is_in_char_set(set, Pervasives.char_of_int(i))) {\n      var match = Pervasives.char_of_int(i);\n      var exit = 0;\n      var switcher = match - 45 | 0;\n      if (switcher > 48 || switcher < 0) {\n        if (switcher >= 210) {\n          print_char(buf, 254);\n          return print_char(buf, 255);\n        } else {\n          exit = 1;\n        }\n      } else if ((switcher > 47 || switcher < 1) && !is_in_char_set(set, Pervasives.char_of_int(i + 1 | 0))) {\n        print_char(buf, i - 1 | 0);\n        return print_out(set, i + 1 | 0);\n      } else {\n        exit = 1;\n      }\n      if (exit === 1) {\n        if (is_in_char_set(set, Pervasives.char_of_int(i + 1 | 0))) {\n          var set$1 = set;\n          var i$1 = i - 1 | 0;\n          var _j = i + 2 | 0;\n          while(true) {\n            var j = _j;\n            if (j === 256 || !is_in_char_set(set$1, Pervasives.char_of_int(j))) {\n              print_char(buf, i$1);\n              print_char(buf, /* \"-\" */45);\n              print_char(buf, j - 1 | 0);\n              if (j < 256) {\n                return print_out(set$1, j + 1 | 0);\n              } else {\n                return 0;\n              }\n            } else {\n              _j = j + 1 | 0;\n              continue ;\n            }\n          };\n        } else {\n          print_char(buf, i - 1 | 0);\n          print_char(buf, i);\n          return print_out(set, i + 2 | 0);\n        }\n      }\n      \n    } else {\n      print_char(buf, i - 1 | 0);\n      return print_out(set, i + 1 | 0);\n    }\n  };\n  var print_start = function (set) {\n    var is_alone = function (c) {\n      var before = Char.chr(c - 1 | 0);\n      var after = Char.chr(c + 1 | 0);\n      if (is_in_char_set(set, c)) {\n        return !(is_in_char_set(set, before) && is_in_char_set(set, after));\n      } else {\n        return false;\n      }\n    };\n    if (is_alone(/* \"]\" */93)) {\n      buffer_add_char(buf, /* \"]\" */93);\n    }\n    print_out(set, 1);\n    if (is_alone(/* \"-\" */45)) {\n      return buffer_add_char(buf, /* \"-\" */45);\n    } else {\n      return 0;\n    }\n  };\n  buffer_add_char(buf, /* \"[\" */91);\n  print_start(is_in_char_set(char_set, /* \"\\000\" */0) ? (buffer_add_char(buf, /* \"^\" */94), rev_char_set(char_set)) : char_set);\n  return buffer_add_char(buf, /* \"]\" */93);\n}\n\nfunction bprint_padty(buf, padty) {\n  switch (padty) {\n    case 0 : \n        return buffer_add_char(buf, /* \"-\" */45);\n    case 1 : \n        return /* () */0;\n    case 2 : \n        return buffer_add_char(buf, /* \"0\" */48);\n    \n  }\n}\n\nfunction bprint_ignored_flag(buf, ign_flag) {\n  if (ign_flag) {\n    return buffer_add_char(buf, /* \"_\" */95);\n  } else {\n    return 0;\n  }\n}\n\nfunction bprint_pad_opt(buf, pad_opt) {\n  if (pad_opt !== undefined) {\n    return buffer_add_string(buf, String(pad_opt));\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction bprint_padding(buf, pad) {\n  if (typeof pad === \"number\") {\n    return /* () */0;\n  } else {\n    bprint_padty(buf, pad[0]);\n    if (pad.tag) {\n      return buffer_add_char(buf, /* \"*\" */42);\n    } else {\n      return buffer_add_string(buf, String(pad[1]));\n    }\n  }\n}\n\nfunction bprint_precision(buf, prec) {\n  if (typeof prec === \"number\") {\n    if (prec !== 0) {\n      return buffer_add_string(buf, \".*\");\n    } else {\n      return /* () */0;\n    }\n  } else {\n    buffer_add_char(buf, /* \".\" */46);\n    return buffer_add_string(buf, String(prec[0]));\n  }\n}\n\nfunction bprint_iconv_flag(buf, iconv) {\n  switch (iconv) {\n    case 1 : \n    case 4 : \n        return buffer_add_char(buf, /* \"+\" */43);\n    case 2 : \n    case 5 : \n        return buffer_add_char(buf, /* \" \" */32);\n    case 7 : \n    case 9 : \n    case 11 : \n        return buffer_add_char(buf, /* \"#\" */35);\n    case 0 : \n    case 3 : \n    case 6 : \n    case 8 : \n    case 10 : \n    case 12 : \n        return /* () */0;\n    \n  }\n}\n\nfunction bprint_int_fmt(buf, ign_flag, iconv, pad, prec) {\n  buffer_add_char(buf, /* \"%\" */37);\n  bprint_ignored_flag(buf, ign_flag);\n  bprint_iconv_flag(buf, iconv);\n  bprint_padding(buf, pad);\n  bprint_precision(buf, prec);\n  return buffer_add_char(buf, char_of_iconv(iconv));\n}\n\nfunction bprint_altint_fmt(buf, ign_flag, iconv, pad, prec, c) {\n  buffer_add_char(buf, /* \"%\" */37);\n  bprint_ignored_flag(buf, ign_flag);\n  bprint_iconv_flag(buf, iconv);\n  bprint_padding(buf, pad);\n  bprint_precision(buf, prec);\n  buffer_add_char(buf, c);\n  return buffer_add_char(buf, char_of_iconv(iconv));\n}\n\nfunction bprint_fconv_flag(buf, fconv) {\n  switch (fconv) {\n    case 1 : \n    case 4 : \n    case 7 : \n    case 10 : \n    case 13 : \n        return buffer_add_char(buf, /* \"+\" */43);\n    case 2 : \n    case 5 : \n    case 8 : \n    case 11 : \n    case 14 : \n        return buffer_add_char(buf, /* \" \" */32);\n    case 0 : \n    case 3 : \n    case 6 : \n    case 9 : \n    case 12 : \n    case 15 : \n        return /* () */0;\n    \n  }\n}\n\nfunction bprint_float_fmt(buf, ign_flag, fconv, pad, prec) {\n  buffer_add_char(buf, /* \"%\" */37);\n  bprint_ignored_flag(buf, ign_flag);\n  bprint_fconv_flag(buf, fconv);\n  bprint_padding(buf, pad);\n  bprint_precision(buf, prec);\n  return buffer_add_char(buf, char_of_fconv(fconv));\n}\n\nfunction string_of_formatting_lit(formatting_lit) {\n  if (typeof formatting_lit === \"number\") {\n    switch (formatting_lit) {\n      case 0 : \n          return \"@]\";\n      case 1 : \n          return \"@}\";\n      case 2 : \n          return \"@?\";\n      case 3 : \n          return \"@\\n\";\n      case 4 : \n          return \"@.\";\n      case 5 : \n          return \"@@\";\n      case 6 : \n          return \"@%\";\n      \n    }\n  } else {\n    switch (formatting_lit.tag | 0) {\n      case 0 : \n      case 1 : \n          return formatting_lit[0];\n      case 2 : \n          return \"@\" + Caml_string.bytes_to_string(Bytes.make(1, formatting_lit[0]));\n      \n    }\n  }\n}\n\nfunction string_of_formatting_gen(formatting_gen) {\n  return formatting_gen[0][1];\n}\n\nfunction bprint_char_literal(buf, chr) {\n  if (chr !== 37) {\n    return buffer_add_char(buf, chr);\n  } else {\n    return buffer_add_string(buf, \"%%\");\n  }\n}\n\nfunction bprint_string_literal(buf, str) {\n  for(var i = 0 ,i_finish = str.length - 1 | 0; i <= i_finish; ++i){\n    bprint_char_literal(buf, Caml_string.get(str, i));\n  }\n  return /* () */0;\n}\n\nfunction bprint_fmtty(buf, _fmtty) {\n  while(true) {\n    var fmtty = _fmtty;\n    if (typeof fmtty === \"number\") {\n      return /* () */0;\n    } else {\n      switch (fmtty.tag | 0) {\n        case 0 : \n            buffer_add_string(buf, \"%c\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 1 : \n            buffer_add_string(buf, \"%s\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 2 : \n            buffer_add_string(buf, \"%i\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 3 : \n            buffer_add_string(buf, \"%li\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 4 : \n            buffer_add_string(buf, \"%ni\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 5 : \n            buffer_add_string(buf, \"%Li\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 6 : \n            buffer_add_string(buf, \"%f\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 7 : \n            buffer_add_string(buf, \"%B\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 8 : \n            buffer_add_string(buf, \"%{\");\n            bprint_fmtty(buf, fmtty[0]);\n            buffer_add_string(buf, \"%}\");\n            _fmtty = fmtty[1];\n            continue ;\n        case 9 : \n            buffer_add_string(buf, \"%(\");\n            bprint_fmtty(buf, fmtty[0]);\n            buffer_add_string(buf, \"%)\");\n            _fmtty = fmtty[2];\n            continue ;\n        case 10 : \n            buffer_add_string(buf, \"%a\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 11 : \n            buffer_add_string(buf, \"%t\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 12 : \n            buffer_add_string(buf, \"%?\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 13 : \n            buffer_add_string(buf, \"%r\");\n            _fmtty = fmtty[0];\n            continue ;\n        case 14 : \n            buffer_add_string(buf, \"%_r\");\n            _fmtty = fmtty[0];\n            continue ;\n        \n      }\n    }\n  };\n}\n\nfunction int_of_custom_arity(param) {\n  if (param) {\n    return 1 + int_of_custom_arity(param[0]) | 0;\n  } else {\n    return 0;\n  }\n}\n\nfunction bprint_fmt(buf, fmt) {\n  var _fmt = fmt;\n  var _ign_flag = false;\n  while(true) {\n    var ign_flag = _ign_flag;\n    var fmt$1 = _fmt;\n    if (typeof fmt$1 === \"number\") {\n      return /* () */0;\n    } else {\n      switch (fmt$1.tag | 0) {\n        case 0 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"c\" */99);\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 1 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"C\" */67);\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 2 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_padding(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"s\" */115);\n            _ign_flag = false;\n            _fmt = fmt$1[1];\n            continue ;\n        case 3 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_padding(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"S\" */83);\n            _ign_flag = false;\n            _fmt = fmt$1[1];\n            continue ;\n        case 4 : \n            bprint_int_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2]);\n            _ign_flag = false;\n            _fmt = fmt$1[3];\n            continue ;\n        case 5 : \n            bprint_altint_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2], /* \"l\" */108);\n            _ign_flag = false;\n            _fmt = fmt$1[3];\n            continue ;\n        case 6 : \n            bprint_altint_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2], /* \"n\" */110);\n            _ign_flag = false;\n            _fmt = fmt$1[3];\n            continue ;\n        case 7 : \n            bprint_altint_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2], /* \"L\" */76);\n            _ign_flag = false;\n            _fmt = fmt$1[3];\n            continue ;\n        case 8 : \n            bprint_float_fmt(buf, ign_flag, fmt$1[0], fmt$1[1], fmt$1[2]);\n            _ign_flag = false;\n            _fmt = fmt$1[3];\n            continue ;\n        case 9 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"B\" */66);\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 10 : \n            buffer_add_string(buf, \"%!\");\n            _fmt = fmt$1[0];\n            continue ;\n        case 11 : \n            bprint_string_literal(buf, fmt$1[0]);\n            _fmt = fmt$1[1];\n            continue ;\n        case 12 : \n            bprint_char_literal(buf, fmt$1[0]);\n            _fmt = fmt$1[1];\n            continue ;\n        case 13 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_pad_opt(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"{\" */123);\n            bprint_fmtty(buf, fmt$1[1]);\n            buffer_add_char(buf, /* \"%\" */37);\n            buffer_add_char(buf, /* \"}\" */125);\n            _ign_flag = false;\n            _fmt = fmt$1[2];\n            continue ;\n        case 14 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_pad_opt(buf, fmt$1[0]);\n            buffer_add_char(buf, /* \"(\" */40);\n            bprint_fmtty(buf, fmt$1[1]);\n            buffer_add_char(buf, /* \"%\" */37);\n            buffer_add_char(buf, /* \")\" */41);\n            _ign_flag = false;\n            _fmt = fmt$1[2];\n            continue ;\n        case 15 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"a\" */97);\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 16 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"t\" */116);\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 17 : \n            bprint_string_literal(buf, string_of_formatting_lit(fmt$1[0]));\n            _fmt = fmt$1[1];\n            continue ;\n        case 18 : \n            bprint_string_literal(buf, \"@{\");\n            bprint_string_literal(buf, string_of_formatting_gen(fmt$1[0]));\n            _fmt = fmt$1[1];\n            continue ;\n        case 19 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, /* \"r\" */114);\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 20 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_pad_opt(buf, fmt$1[0]);\n            bprint_char_set(buf, fmt$1[1]);\n            _ign_flag = false;\n            _fmt = fmt$1[2];\n            continue ;\n        case 21 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            buffer_add_char(buf, char_of_counter(fmt$1[0]));\n            _ign_flag = false;\n            _fmt = fmt$1[1];\n            continue ;\n        case 22 : \n            buffer_add_char(buf, /* \"%\" */37);\n            bprint_ignored_flag(buf, ign_flag);\n            bprint_string_literal(buf, \"0c\");\n            _ign_flag = false;\n            _fmt = fmt$1[0];\n            continue ;\n        case 23 : \n            var match = param_format_of_ignored_format(fmt$1[0], fmt$1[1]);\n            _ign_flag = true;\n            _fmt = match[0];\n            continue ;\n        case 24 : \n            for(var _i = 1 ,_i_finish = int_of_custom_arity(fmt$1[0]); _i <= _i_finish; ++_i){\n              buffer_add_char(buf, /* \"%\" */37);\n              bprint_ignored_flag(buf, ign_flag);\n              buffer_add_char(buf, /* \"?\" */63);\n            }\n            _ign_flag = false;\n            _fmt = fmt$1[2];\n            continue ;\n        \n      }\n    }\n  };\n}\n\nfunction string_of_fmt(fmt) {\n  var buf = /* record */[\n    /* ind */0,\n    /* bytes */Caml_string.caml_create_bytes(16)\n  ];\n  bprint_fmt(buf, fmt);\n  return buffer_contents(buf);\n}\n\nfunction symm(param) {\n  if (typeof param === \"number\") {\n    return /* End_of_fmtty */0;\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          return /* Char_ty */Block.__(0, [symm(param[0])]);\n      case 1 : \n          return /* String_ty */Block.__(1, [symm(param[0])]);\n      case 2 : \n          return /* Int_ty */Block.__(2, [symm(param[0])]);\n      case 3 : \n          return /* Int32_ty */Block.__(3, [symm(param[0])]);\n      case 4 : \n          return /* Nativeint_ty */Block.__(4, [symm(param[0])]);\n      case 5 : \n          return /* Int64_ty */Block.__(5, [symm(param[0])]);\n      case 6 : \n          return /* Float_ty */Block.__(6, [symm(param[0])]);\n      case 7 : \n          return /* Bool_ty */Block.__(7, [symm(param[0])]);\n      case 8 : \n          return /* Format_arg_ty */Block.__(8, [\n                    param[0],\n                    symm(param[1])\n                  ]);\n      case 9 : \n          return /* Format_subst_ty */Block.__(9, [\n                    param[1],\n                    param[0],\n                    symm(param[2])\n                  ]);\n      case 10 : \n          return /* Alpha_ty */Block.__(10, [symm(param[0])]);\n      case 11 : \n          return /* Theta_ty */Block.__(11, [symm(param[0])]);\n      case 12 : \n          return /* Any_ty */Block.__(12, [symm(param[0])]);\n      case 13 : \n          return /* Reader_ty */Block.__(13, [symm(param[0])]);\n      case 14 : \n          return /* Ignored_reader_ty */Block.__(14, [symm(param[0])]);\n      \n    }\n  }\n}\n\nfunction fmtty_rel_det(param) {\n  if (typeof param === \"number\") {\n    return /* tuple */[\n            (function (param) {\n                return /* Refl */0;\n              }),\n            (function (param) {\n                return /* Refl */0;\n              }),\n            (function (param) {\n                return /* Refl */0;\n              }),\n            (function (param) {\n                return /* Refl */0;\n              })\n          ];\n  } else {\n    switch (param.tag | 0) {\n      case 0 : \n          var match = fmtty_rel_det(param[0]);\n          var af = match[1];\n          var fa = match[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match[2],\n                  match[3]\n                ];\n      case 1 : \n          var match$1 = fmtty_rel_det(param[0]);\n          var af$1 = match$1[1];\n          var fa$1 = match$1[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$1, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$1, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$1[2],\n                  match$1[3]\n                ];\n      case 2 : \n          var match$2 = fmtty_rel_det(param[0]);\n          var af$2 = match$2[1];\n          var fa$2 = match$2[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$2, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$2, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$2[2],\n                  match$2[3]\n                ];\n      case 3 : \n          var match$3 = fmtty_rel_det(param[0]);\n          var af$3 = match$3[1];\n          var fa$3 = match$3[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$3, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$3, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$3[2],\n                  match$3[3]\n                ];\n      case 4 : \n          var match$4 = fmtty_rel_det(param[0]);\n          var af$4 = match$4[1];\n          var fa$4 = match$4[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$4, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$4, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$4[2],\n                  match$4[3]\n                ];\n      case 5 : \n          var match$5 = fmtty_rel_det(param[0]);\n          var af$5 = match$5[1];\n          var fa$5 = match$5[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$5, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$5, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$5[2],\n                  match$5[3]\n                ];\n      case 6 : \n          var match$6 = fmtty_rel_det(param[0]);\n          var af$6 = match$6[1];\n          var fa$6 = match$6[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$6, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$6, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$6[2],\n                  match$6[3]\n                ];\n      case 7 : \n          var match$7 = fmtty_rel_det(param[0]);\n          var af$7 = match$7[1];\n          var fa$7 = match$7[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$7, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$7, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$7[2],\n                  match$7[3]\n                ];\n      case 8 : \n          var match$8 = fmtty_rel_det(param[1]);\n          var af$8 = match$8[1];\n          var fa$8 = match$8[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$8, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$8, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$8[2],\n                  match$8[3]\n                ];\n      case 9 : \n          var match$9 = fmtty_rel_det(param[2]);\n          var de = match$9[3];\n          var ed = match$9[2];\n          var af$9 = match$9[1];\n          var fa$9 = match$9[0];\n          var ty = trans(symm(param[0]), param[1]);\n          var match$10 = fmtty_rel_det(ty);\n          var jd = match$10[3];\n          var dj = match$10[2];\n          var ga = match$10[1];\n          var ag = match$10[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$9, /* Refl */0);\n                      Curry._1(ag, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(ga, /* Refl */0);\n                      Curry._1(af$9, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(ed, /* Refl */0);\n                      Curry._1(dj, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(jd, /* Refl */0);\n                      Curry._1(de, /* Refl */0);\n                      return /* Refl */0;\n                    })\n                ];\n      case 10 : \n          var match$11 = fmtty_rel_det(param[0]);\n          var af$10 = match$11[1];\n          var fa$10 = match$11[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$10, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$10, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$11[2],\n                  match$11[3]\n                ];\n      case 11 : \n          var match$12 = fmtty_rel_det(param[0]);\n          var af$11 = match$12[1];\n          var fa$11 = match$12[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$11, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$11, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$12[2],\n                  match$12[3]\n                ];\n      case 12 : \n          var match$13 = fmtty_rel_det(param[0]);\n          var af$12 = match$13[1];\n          var fa$12 = match$13[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$12, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$12, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  match$13[2],\n                  match$13[3]\n                ];\n      case 13 : \n          var match$14 = fmtty_rel_det(param[0]);\n          var de$1 = match$14[3];\n          var ed$1 = match$14[2];\n          var af$13 = match$14[1];\n          var fa$13 = match$14[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$13, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$13, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(ed$1, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(de$1, /* Refl */0);\n                      return /* Refl */0;\n                    })\n                ];\n      case 14 : \n          var match$15 = fmtty_rel_det(param[0]);\n          var de$2 = match$15[3];\n          var ed$2 = match$15[2];\n          var af$14 = match$15[1];\n          var fa$14 = match$15[0];\n          return /* tuple */[\n                  (function (param) {\n                      Curry._1(fa$14, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(af$14, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(ed$2, /* Refl */0);\n                      return /* Refl */0;\n                    }),\n                  (function (param) {\n                      Curry._1(de$2, /* Refl */0);\n                      return /* Refl */0;\n                    })\n                ];\n      \n    }\n  }\n}\n\nfunction trans(ty1, ty2) {\n  var exit = 0;\n  if (typeof ty1 === \"number\") {\n    if (typeof ty2 === \"number\") {\n      return /* End_of_fmtty */0;\n    } else {\n      switch (ty2.tag | 0) {\n        case 8 : \n            exit = 6;\n            break;\n        case 9 : \n            exit = 7;\n            break;\n        case 10 : \n            exit = 1;\n            break;\n        case 11 : \n            exit = 2;\n            break;\n        case 12 : \n            exit = 3;\n            break;\n        case 13 : \n            exit = 4;\n            break;\n        case 14 : \n            exit = 5;\n            break;\n        default:\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                /* tuple */[\n                  \"camlinternalFormat.ml\",\n                  816,\n                  23\n                ]\n              ];\n      }\n    }\n  } else {\n    switch (ty1.tag | 0) {\n      case 0 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 0 : \n                  return /* Char_ty */Block.__(0, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 1 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 1 : \n                  return /* String_ty */Block.__(1, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 2 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 2 : \n                  return /* Int_ty */Block.__(2, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 3 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 3 : \n                  return /* Int32_ty */Block.__(3, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 4 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 4 : \n                  return /* Nativeint_ty */Block.__(4, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 5 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 5 : \n                  return /* Int64_ty */Block.__(5, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 6 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 6 : \n                  return /* Float_ty */Block.__(6, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 7 : \n          if (typeof ty2 === \"number\") {\n            exit = 8;\n          } else {\n            switch (ty2.tag | 0) {\n              case 7 : \n                  return /* Bool_ty */Block.__(7, [trans(ty1[0], ty2[0])]);\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  exit = 7;\n                  break;\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              \n            }\n          }\n          break;\n      case 8 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    802,\n                    26\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 8 : \n                  return /* Format_arg_ty */Block.__(8, [\n                            trans(ty1[0], ty2[0]),\n                            trans(ty1[1], ty2[1])\n                          ]);\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        802,\n                        26\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 9 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    812,\n                    28\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 8 : \n                  exit = 6;\n                  break;\n              case 9 : \n                  var ty = trans(symm(ty1[1]), ty2[0]);\n                  var match = fmtty_rel_det(ty);\n                  Curry._1(match[1], /* Refl */0);\n                  Curry._1(match[3], /* Refl */0);\n                  return /* Format_subst_ty */Block.__(9, [\n                            ty1[0],\n                            ty2[1],\n                            trans(ty1[2], ty2[2])\n                          ]);\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  exit = 5;\n                  break;\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        812,\n                        28\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 10 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    780,\n                    21\n                  ]\n                ];\n          } else if (ty2.tag === 10) {\n            return /* Alpha_ty */Block.__(10, [trans(ty1[0], ty2[0])]);\n          } else {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    780,\n                    21\n                  ]\n                ];\n          }\n      case 11 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    784,\n                    21\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  return /* Theta_ty */Block.__(11, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        784,\n                        21\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 12 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    788,\n                    19\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  return /* Any_ty */Block.__(12, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        788,\n                        19\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 13 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    792,\n                    22\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  return /* Reader_ty */Block.__(13, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        792,\n                        22\n                      ]\n                    ];\n            }\n          }\n          break;\n      case 14 : \n          if (typeof ty2 === \"number\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    797,\n                    30\n                  ]\n                ];\n          } else {\n            switch (ty2.tag | 0) {\n              case 10 : \n                  exit = 1;\n                  break;\n              case 11 : \n                  exit = 2;\n                  break;\n              case 12 : \n                  exit = 3;\n                  break;\n              case 13 : \n                  exit = 4;\n                  break;\n              case 14 : \n                  return /* Ignored_reader_ty */Block.__(14, [trans(ty1[0], ty2[0])]);\n              default:\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        797,\n                        30\n                      ]\n                    ];\n            }\n          }\n          break;\n      \n    }\n  }\n  switch (exit) {\n    case 1 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                781,\n                21\n              ]\n            ];\n    case 2 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                785,\n                21\n              ]\n            ];\n    case 3 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                789,\n                19\n              ]\n            ];\n    case 4 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                793,\n                22\n              ]\n            ];\n    case 5 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                798,\n                30\n              ]\n            ];\n    case 6 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                803,\n                26\n              ]\n            ];\n    case 7 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                813,\n                28\n              ]\n            ];\n    case 8 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                817,\n                23\n              ]\n            ];\n    \n  }\n}\n\nfunction fmtty_of_formatting_gen(formatting_gen) {\n  return fmtty_of_fmt(formatting_gen[0][0]);\n}\n\nfunction fmtty_of_fmt(_fmtty) {\n  while(true) {\n    var fmtty = _fmtty;\n    var exit = 0;\n    if (typeof fmtty === \"number\") {\n      return /* End_of_fmtty */0;\n    } else {\n      switch (fmtty.tag | 0) {\n        case 2 : \n        case 3 : \n            exit = 1;\n            break;\n        case 4 : \n            var ty_rest = fmtty_of_fmt(fmtty[3]);\n            var prec_ty = fmtty_of_precision_fmtty(fmtty[2], /* Int_ty */Block.__(2, [ty_rest]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty);\n        case 5 : \n            var ty_rest$1 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$1 = fmtty_of_precision_fmtty(fmtty[2], /* Int32_ty */Block.__(3, [ty_rest$1]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$1);\n        case 6 : \n            var ty_rest$2 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$2 = fmtty_of_precision_fmtty(fmtty[2], /* Nativeint_ty */Block.__(4, [ty_rest$2]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$2);\n        case 7 : \n            var ty_rest$3 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$3 = fmtty_of_precision_fmtty(fmtty[2], /* Int64_ty */Block.__(5, [ty_rest$3]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$3);\n        case 8 : \n            var ty_rest$4 = fmtty_of_fmt(fmtty[3]);\n            var prec_ty$4 = fmtty_of_precision_fmtty(fmtty[2], /* Float_ty */Block.__(6, [ty_rest$4]));\n            return fmtty_of_padding_fmtty(fmtty[1], prec_ty$4);\n        case 9 : \n            return /* Bool_ty */Block.__(7, [fmtty_of_fmt(fmtty[0])]);\n        case 10 : \n            _fmtty = fmtty[0];\n            continue ;\n        case 13 : \n            return /* Format_arg_ty */Block.__(8, [\n                      fmtty[1],\n                      fmtty_of_fmt(fmtty[2])\n                    ]);\n        case 14 : \n            var ty = fmtty[1];\n            return /* Format_subst_ty */Block.__(9, [\n                      ty,\n                      ty,\n                      fmtty_of_fmt(fmtty[2])\n                    ]);\n        case 15 : \n            return /* Alpha_ty */Block.__(10, [fmtty_of_fmt(fmtty[0])]);\n        case 16 : \n            return /* Theta_ty */Block.__(11, [fmtty_of_fmt(fmtty[0])]);\n        case 18 : \n            return CamlinternalFormatBasics.concat_fmtty(fmtty_of_formatting_gen(fmtty[0]), fmtty_of_fmt(fmtty[1]));\n        case 19 : \n            return /* Reader_ty */Block.__(13, [fmtty_of_fmt(fmtty[0])]);\n        case 20 : \n            return /* String_ty */Block.__(1, [fmtty_of_fmt(fmtty[2])]);\n        case 21 : \n            return /* Int_ty */Block.__(2, [fmtty_of_fmt(fmtty[1])]);\n        case 0 : \n        case 1 : \n        case 22 : \n            return /* Char_ty */Block.__(0, [fmtty_of_fmt(fmtty[0])]);\n        case 23 : \n            var ign = fmtty[0];\n            var fmt = fmtty[1];\n            if (typeof ign === \"number\") {\n              if (ign === 3) {\n                return /* Ignored_reader_ty */Block.__(14, [fmtty_of_fmt(fmt)]);\n              } else {\n                return fmtty_of_fmt(fmt);\n              }\n            } else if (ign.tag === 8) {\n              return CamlinternalFormatBasics.concat_fmtty(ign[1], fmtty_of_fmt(fmt));\n            } else {\n              return fmtty_of_fmt(fmt);\n            }\n        case 24 : \n            return fmtty_of_custom(fmtty[0], fmtty_of_fmt(fmtty[2]));\n        default:\n          _fmtty = fmtty[1];\n          continue ;\n      }\n    }\n    if (exit === 1) {\n      return fmtty_of_padding_fmtty(fmtty[0], /* String_ty */Block.__(1, [fmtty_of_fmt(fmtty[1])]));\n    }\n    \n  };\n}\n\nfunction fmtty_of_custom(arity, fmtty) {\n  if (arity) {\n    return /* Any_ty */Block.__(12, [fmtty_of_custom(arity[0], fmtty)]);\n  } else {\n    return fmtty;\n  }\n}\n\nfunction fmtty_of_padding_fmtty(pad, fmtty) {\n  if (typeof pad === \"number\" || !pad.tag) {\n    return fmtty;\n  } else {\n    return /* Int_ty */Block.__(2, [fmtty]);\n  }\n}\n\nfunction fmtty_of_precision_fmtty(prec, fmtty) {\n  if (typeof prec === \"number\" && prec !== 0) {\n    return /* Int_ty */Block.__(2, [fmtty]);\n  } else {\n    return fmtty;\n  }\n}\n\nvar Type_mismatch = Caml_exceptions.create(\"CamlinternalFormat.Type_mismatch\");\n\nfunction type_padding(pad, fmtty) {\n  if (typeof pad === \"number\") {\n    return /* Padding_fmtty_EBB */[\n            /* No_padding */0,\n            fmtty\n          ];\n  } else if (pad.tag) {\n    if (typeof fmtty === \"number\") {\n      throw Type_mismatch;\n    } else if (fmtty.tag === 2) {\n      return /* Padding_fmtty_EBB */[\n              /* Arg_padding */Block.__(1, [pad[0]]),\n              fmtty[0]\n            ];\n    } else {\n      throw Type_mismatch;\n    }\n  } else {\n    return /* Padding_fmtty_EBB */[\n            /* Lit_padding */Block.__(0, [\n                pad[0],\n                pad[1]\n              ]),\n            fmtty\n          ];\n  }\n}\n\nfunction type_padprec(pad, prec, fmtty) {\n  var match = type_padding(pad, fmtty);\n  if (typeof prec === \"number\") {\n    if (prec !== 0) {\n      var match$1 = match[1];\n      if (typeof match$1 === \"number\") {\n        throw Type_mismatch;\n      } else if (match$1.tag === 2) {\n        return /* Padprec_fmtty_EBB */[\n                match[0],\n                /* Arg_precision */1,\n                match$1[0]\n              ];\n      } else {\n        throw Type_mismatch;\n      }\n    } else {\n      return /* Padprec_fmtty_EBB */[\n              match[0],\n              /* No_precision */0,\n              match[1]\n            ];\n    }\n  } else {\n    return /* Padprec_fmtty_EBB */[\n            match[0],\n            /* Lit_precision */[prec[0]],\n            match[1]\n          ];\n  }\n}\n\nfunction type_ignored_param_one(ign, fmt, fmtty) {\n  var match = type_format_gen(fmt, fmtty);\n  return /* Fmt_fmtty_EBB */[\n          /* Ignored_param */Block.__(23, [\n              ign,\n              match[0]\n            ]),\n          match[1]\n        ];\n}\n\nfunction type_format_gen(fmt, fmtty) {\n  if (typeof fmt === \"number\") {\n    return /* Fmt_fmtty_EBB */[\n            /* End_of_format */0,\n            fmtty\n          ];\n  } else {\n    switch (fmt.tag | 0) {\n      case 0 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag) {\n            throw Type_mismatch;\n          } else {\n            var match = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Char */Block.__(0, [match[0]]),\n                    match[1]\n                  ];\n          }\n      case 1 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag) {\n            throw Type_mismatch;\n          } else {\n            var match$1 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Caml_char */Block.__(1, [match$1[0]]),\n                    match$1[1]\n                  ];\n          }\n      case 2 : \n          var match$2 = type_padding(fmt[0], fmtty);\n          var match$3 = match$2[1];\n          if (typeof match$3 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$3.tag === 1) {\n            var match$4 = type_format_gen(fmt[1], match$3[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* String */Block.__(2, [\n                        match$2[0],\n                        match$4[0]\n                      ]),\n                    match$4[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 3 : \n          var match$5 = type_padding(fmt[0], fmtty);\n          var match$6 = match$5[1];\n          if (typeof match$6 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$6.tag === 1) {\n            var match$7 = type_format_gen(fmt[1], match$6[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Caml_string */Block.__(3, [\n                        match$5[0],\n                        match$7[0]\n                      ]),\n                    match$7[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 4 : \n          var match$8 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$9 = match$8[2];\n          if (typeof match$9 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$9.tag === 2) {\n            var match$10 = type_format_gen(fmt[3], match$9[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Int */Block.__(4, [\n                        fmt[0],\n                        match$8[0],\n                        match$8[1],\n                        match$10[0]\n                      ]),\n                    match$10[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 5 : \n          var match$11 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$12 = match$11[2];\n          if (typeof match$12 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$12.tag === 3) {\n            var match$13 = type_format_gen(fmt[3], match$12[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Int32 */Block.__(5, [\n                        fmt[0],\n                        match$11[0],\n                        match$11[1],\n                        match$13[0]\n                      ]),\n                    match$13[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 6 : \n          var match$14 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$15 = match$14[2];\n          if (typeof match$15 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$15.tag === 4) {\n            var match$16 = type_format_gen(fmt[3], match$15[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Nativeint */Block.__(6, [\n                        fmt[0],\n                        match$14[0],\n                        match$14[1],\n                        match$16[0]\n                      ]),\n                    match$16[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 7 : \n          var match$17 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$18 = match$17[2];\n          if (typeof match$18 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$18.tag === 5) {\n            var match$19 = type_format_gen(fmt[3], match$18[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Int64 */Block.__(7, [\n                        fmt[0],\n                        match$17[0],\n                        match$17[1],\n                        match$19[0]\n                      ]),\n                    match$19[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 8 : \n          var match$20 = type_padprec(fmt[1], fmt[2], fmtty);\n          var match$21 = match$20[2];\n          if (typeof match$21 === \"number\") {\n            throw Type_mismatch;\n          } else if (match$21.tag === 6) {\n            var match$22 = type_format_gen(fmt[3], match$21[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Float */Block.__(8, [\n                        fmt[0],\n                        match$20[0],\n                        match$20[1],\n                        match$22[0]\n                      ]),\n                    match$22[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 9 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 7) {\n            var match$23 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Bool */Block.__(9, [match$23[0]]),\n                    match$23[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 10 : \n          var match$24 = type_format_gen(fmt[0], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* Flush */Block.__(10, [match$24[0]]),\n                  match$24[1]\n                ];\n      case 11 : \n          var match$25 = type_format_gen(fmt[1], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* String_literal */Block.__(11, [\n                      fmt[0],\n                      match$25[0]\n                    ]),\n                  match$25[1]\n                ];\n      case 12 : \n          var match$26 = type_format_gen(fmt[1], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* Char_literal */Block.__(12, [\n                      fmt[0],\n                      match$26[0]\n                    ]),\n                  match$26[1]\n                ];\n      case 13 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 8) {\n            var sub_fmtty$prime = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[fmt[1]], /* Fmtty_EBB */[sub_fmtty$prime])) {\n              throw Type_mismatch;\n            }\n            var match$27 = type_format_gen(fmt[2], fmtty[1]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Format_arg */Block.__(13, [\n                        fmt[0],\n                        sub_fmtty$prime,\n                        match$27[0]\n                      ]),\n                    match$27[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 14 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 9) {\n            var sub_fmtty1 = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(fmt[1])], /* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub_fmtty1)])) {\n              throw Type_mismatch;\n            }\n            var match$28 = type_format_gen(fmt[2], CamlinternalFormatBasics.erase_rel(fmtty[2]));\n            return /* Fmt_fmtty_EBB */[\n                    /* Format_subst */Block.__(14, [\n                        fmt[0],\n                        sub_fmtty1,\n                        match$28[0]\n                      ]),\n                    match$28[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 15 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 10) {\n            var match$29 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Alpha */Block.__(15, [match$29[0]]),\n                    match$29[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 16 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 11) {\n            var match$30 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Theta */Block.__(16, [match$30[0]]),\n                    match$30[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 17 : \n          var match$31 = type_format_gen(fmt[1], fmtty);\n          return /* Fmt_fmtty_EBB */[\n                  /* Formatting_lit */Block.__(17, [\n                      fmt[0],\n                      match$31[0]\n                    ]),\n                  match$31[1]\n                ];\n      case 18 : \n          var formatting_gen = fmt[0];\n          var fmt0 = fmt[1];\n          var fmtty0 = fmtty;\n          if (formatting_gen.tag) {\n            var match$32 = formatting_gen[0];\n            var match$33 = type_format_gen(match$32[0], fmtty0);\n            var match$34 = type_format_gen(fmt0, match$33[1]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Formatting_gen */Block.__(18, [\n                        /* Open_box */Block.__(1, [/* Format */[\n                              match$33[0],\n                              match$32[1]\n                            ]]),\n                        match$34[0]\n                      ]),\n                    match$34[1]\n                  ];\n          } else {\n            var match$35 = formatting_gen[0];\n            var match$36 = type_format_gen(match$35[0], fmtty0);\n            var match$37 = type_format_gen(fmt0, match$36[1]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Formatting_gen */Block.__(18, [\n                        /* Open_tag */Block.__(0, [/* Format */[\n                              match$36[0],\n                              match$35[1]\n                            ]]),\n                        match$37[0]\n                      ]),\n                    match$37[1]\n                  ];\n          }\n      case 19 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 13) {\n            var match$38 = type_format_gen(fmt[0], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Reader */Block.__(19, [match$38[0]]),\n                    match$38[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 20 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 1) {\n            var match$39 = type_format_gen(fmt[2], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Scan_char_set */Block.__(20, [\n                        fmt[0],\n                        fmt[1],\n                        match$39[0]\n                      ]),\n                    match$39[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 21 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 2) {\n            var match$40 = type_format_gen(fmt[1], fmtty[0]);\n            return /* Fmt_fmtty_EBB */[\n                    /* Scan_get_counter */Block.__(21, [\n                        fmt[0],\n                        match$40[0]\n                      ]),\n                    match$40[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 23 : \n          var ign = fmt[0];\n          var fmt$1 = fmt[1];\n          var fmtty$1 = fmtty;\n          if (typeof ign === \"number\") {\n            if (ign === 3) {\n              if (typeof fmtty$1 === \"number\") {\n                throw Type_mismatch;\n              } else if (fmtty$1.tag === 14) {\n                var match$41 = type_format_gen(fmt$1, fmtty$1[0]);\n                return /* Fmt_fmtty_EBB */[\n                        /* Ignored_param */Block.__(23, [\n                            /* Ignored_reader */3,\n                            match$41[0]\n                          ]),\n                        match$41[1]\n                      ];\n              } else {\n                throw Type_mismatch;\n              }\n            } else {\n              return type_ignored_param_one(ign, fmt$1, fmtty$1);\n            }\n          } else {\n            switch (ign.tag | 0) {\n              case 7 : \n                  return type_ignored_param_one(/* Ignored_format_arg */Block.__(7, [\n                                ign[0],\n                                ign[1]\n                              ]), fmt$1, fmtty$1);\n              case 8 : \n                  var match$42 = type_ignored_format_substitution(ign[1], fmt$1, fmtty$1);\n                  var match$43 = match$42[1];\n                  return /* Fmt_fmtty_EBB */[\n                          /* Ignored_param */Block.__(23, [\n                              /* Ignored_format_subst */Block.__(8, [\n                                  ign[0],\n                                  match$42[0]\n                                ]),\n                              match$43[0]\n                            ]),\n                          match$43[1]\n                        ];\n              default:\n                return type_ignored_param_one(ign, fmt$1, fmtty$1);\n            }\n          }\n      case 22 : \n      case 24 : \n          throw Type_mismatch;\n      \n    }\n  }\n}\n\nfunction type_ignored_format_substitution(sub_fmtty, fmt, fmtty) {\n  if (typeof sub_fmtty === \"number\") {\n    return /* Fmtty_fmt_EBB */[\n            /* End_of_fmtty */0,\n            type_format_gen(fmt, fmtty)\n          ];\n  } else {\n    switch (sub_fmtty.tag | 0) {\n      case 0 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag) {\n            throw Type_mismatch;\n          } else {\n            var match = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Char_ty */Block.__(0, [match[0]]),\n                    match[1]\n                  ];\n          }\n      case 1 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 1) {\n            var match$1 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* String_ty */Block.__(1, [match$1[0]]),\n                    match$1[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 2 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 2) {\n            var match$2 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Int_ty */Block.__(2, [match$2[0]]),\n                    match$2[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 3 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 3) {\n            var match$3 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Int32_ty */Block.__(3, [match$3[0]]),\n                    match$3[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 4 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 4) {\n            var match$4 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Nativeint_ty */Block.__(4, [match$4[0]]),\n                    match$4[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 5 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 5) {\n            var match$5 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Int64_ty */Block.__(5, [match$5[0]]),\n                    match$5[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 6 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 6) {\n            var match$6 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Float_ty */Block.__(6, [match$6[0]]),\n                    match$6[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 7 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 7) {\n            var match$7 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Bool_ty */Block.__(7, [match$7[0]]),\n                    match$7[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 8 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 8) {\n            var sub2_fmtty$prime = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[sub_fmtty[0]], /* Fmtty_EBB */[sub2_fmtty$prime])) {\n              throw Type_mismatch;\n            }\n            var match$8 = type_ignored_format_substitution(sub_fmtty[1], fmt, fmtty[1]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Format_arg_ty */Block.__(8, [\n                        sub2_fmtty$prime,\n                        match$8[0]\n                      ]),\n                    match$8[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 9 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 9) {\n            var sub2_fmtty$prime$1 = fmtty[1];\n            var sub1_fmtty$prime = fmtty[0];\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub_fmtty[0])], /* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub1_fmtty$prime)])) {\n              throw Type_mismatch;\n            }\n            if (Caml_obj.caml_notequal(/* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub_fmtty[1])], /* Fmtty_EBB */[CamlinternalFormatBasics.erase_rel(sub2_fmtty$prime$1)])) {\n              throw Type_mismatch;\n            }\n            var sub_fmtty$prime = trans(symm(sub1_fmtty$prime), sub2_fmtty$prime$1);\n            var match$9 = fmtty_rel_det(sub_fmtty$prime);\n            Curry._1(match$9[1], /* Refl */0);\n            Curry._1(match$9[3], /* Refl */0);\n            var match$10 = type_ignored_format_substitution(CamlinternalFormatBasics.erase_rel(sub_fmtty[2]), fmt, fmtty[2]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Format_subst_ty */Block.__(9, [\n                        sub1_fmtty$prime,\n                        sub2_fmtty$prime$1,\n                        symm(match$10[0])\n                      ]),\n                    match$10[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 10 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 10) {\n            var match$11 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Alpha_ty */Block.__(10, [match$11[0]]),\n                    match$11[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 11 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 11) {\n            var match$12 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Theta_ty */Block.__(11, [match$12[0]]),\n                    match$12[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 12 : \n          throw Type_mismatch;\n      case 13 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 13) {\n            var match$13 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Reader_ty */Block.__(13, [match$13[0]]),\n                    match$13[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      case 14 : \n          if (typeof fmtty === \"number\") {\n            throw Type_mismatch;\n          } else if (fmtty.tag === 14) {\n            var match$14 = type_ignored_format_substitution(sub_fmtty[0], fmt, fmtty[0]);\n            return /* Fmtty_fmt_EBB */[\n                    /* Ignored_reader_ty */Block.__(14, [match$14[0]]),\n                    match$14[1]\n                  ];\n          } else {\n            throw Type_mismatch;\n          }\n      \n    }\n  }\n}\n\nfunction type_format(fmt, fmtty) {\n  var match = type_format_gen(fmt, fmtty);\n  if (typeof match[1] === \"number\") {\n    return match[0];\n  } else {\n    throw Type_mismatch;\n  }\n}\n\nfunction recast(fmt, fmtty) {\n  return type_format(fmt, CamlinternalFormatBasics.erase_rel(symm(fmtty)));\n}\n\nfunction fix_padding(padty, width, str) {\n  var len = str.length;\n  var width$1 = Pervasives.abs(width);\n  var padty$1 = width < 0 ? /* Left */0 : padty;\n  if (width$1 <= len) {\n    return str;\n  } else {\n    var res = Bytes.make(width$1, padty$1 === /* Zeros */2 ? /* \"0\" */48 : /* \" \" */32);\n    switch (padty$1) {\n      case 0 : \n          $$String.blit(str, 0, res, 0, len);\n          break;\n      case 1 : \n          $$String.blit(str, 0, res, width$1 - len | 0, len);\n          break;\n      case 2 : \n          if (len > 0 && (Caml_string.get(str, 0) === /* \"+\" */43 || Caml_string.get(str, 0) === /* \"-\" */45 || Caml_string.get(str, 0) === /* \" \" */32)) {\n            res[0] = Caml_string.get(str, 0);\n            $$String.blit(str, 1, res, (width$1 - len | 0) + 1 | 0, len - 1 | 0);\n          } else if (len > 1 && Caml_string.get(str, 0) === /* \"0\" */48 && (Caml_string.get(str, 1) === /* \"x\" */120 || Caml_string.get(str, 1) === /* \"X\" */88)) {\n            res[1] = Caml_string.get(str, 1);\n            $$String.blit(str, 2, res, (width$1 - len | 0) + 2 | 0, len - 2 | 0);\n          } else {\n            $$String.blit(str, 0, res, width$1 - len | 0, len);\n          }\n          break;\n      \n    }\n    return Caml_string.bytes_to_string(res);\n  }\n}\n\nfunction fix_int_precision(prec, str) {\n  var prec$1 = Pervasives.abs(prec);\n  var len = str.length;\n  var c = Caml_string.get(str, 0);\n  var exit = 0;\n  if (c >= 58) {\n    if (c >= 71) {\n      if (c > 102 || c < 97) {\n        return str;\n      } else {\n        exit = 2;\n      }\n    } else if (c >= 65) {\n      exit = 2;\n    } else {\n      return str;\n    }\n  } else if (c !== 32) {\n    if (c >= 43) {\n      switch (c - 43 | 0) {\n        case 0 : \n        case 2 : \n            exit = 1;\n            break;\n        case 1 : \n        case 3 : \n        case 4 : \n            return str;\n        case 5 : \n            if ((prec$1 + 2 | 0) > len && len > 1 && (Caml_string.get(str, 1) === /* \"x\" */120 || Caml_string.get(str, 1) === /* \"X\" */88)) {\n              var res = Bytes.make(prec$1 + 2 | 0, /* \"0\" */48);\n              res[1] = Caml_string.get(str, 1);\n              $$String.blit(str, 2, res, (prec$1 - len | 0) + 4 | 0, len - 2 | 0);\n              return Caml_string.bytes_to_string(res);\n            } else {\n              exit = 2;\n            }\n            break;\n        case 6 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n        case 11 : \n        case 12 : \n        case 13 : \n        case 14 : \n            exit = 2;\n            break;\n        \n      }\n    } else {\n      return str;\n    }\n  } else {\n    exit = 1;\n  }\n  switch (exit) {\n    case 1 : \n        if ((prec$1 + 1 | 0) > len) {\n          var res$1 = Bytes.make(prec$1 + 1 | 0, /* \"0\" */48);\n          res$1[0] = c;\n          $$String.blit(str, 1, res$1, (prec$1 - len | 0) + 2 | 0, len - 1 | 0);\n          return Caml_string.bytes_to_string(res$1);\n        } else {\n          return str;\n        }\n    case 2 : \n        if (prec$1 > len) {\n          var res$2 = Bytes.make(prec$1, /* \"0\" */48);\n          $$String.blit(str, 0, res$2, prec$1 - len | 0, len);\n          return Caml_string.bytes_to_string(res$2);\n        } else {\n          return str;\n        }\n    \n  }\n}\n\nfunction string_to_caml_string(str) {\n  return $$String.concat($$String.escaped(str), /* :: */[\n              \"\\\"\",\n              /* :: */[\n                \"\\\"\",\n                /* [] */0\n              ]\n            ]);\n}\n\nfunction format_of_iconv(iconv) {\n  switch (iconv) {\n    case 0 : \n        return \"%d\";\n    case 1 : \n        return \"%+d\";\n    case 2 : \n        return \"% d\";\n    case 3 : \n        return \"%i\";\n    case 4 : \n        return \"%+i\";\n    case 5 : \n        return \"% i\";\n    case 6 : \n        return \"%x\";\n    case 7 : \n        return \"%#x\";\n    case 8 : \n        return \"%X\";\n    case 9 : \n        return \"%#X\";\n    case 10 : \n        return \"%o\";\n    case 11 : \n        return \"%#o\";\n    case 12 : \n        return \"%u\";\n    \n  }\n}\n\nfunction format_of_aconv(iconv, c) {\n  var seps;\n  switch (iconv) {\n    case 0 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"d\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 1 : \n        seps = /* :: */[\n          \"%+\",\n          /* :: */[\n            \"d\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 2 : \n        seps = /* :: */[\n          \"% \",\n          /* :: */[\n            \"d\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 3 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"i\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 4 : \n        seps = /* :: */[\n          \"%+\",\n          /* :: */[\n            \"i\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 5 : \n        seps = /* :: */[\n          \"% \",\n          /* :: */[\n            \"i\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 6 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"x\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 7 : \n        seps = /* :: */[\n          \"%#\",\n          /* :: */[\n            \"x\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 8 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"X\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 9 : \n        seps = /* :: */[\n          \"%#\",\n          /* :: */[\n            \"X\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 10 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"o\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 11 : \n        seps = /* :: */[\n          \"%#\",\n          /* :: */[\n            \"o\",\n            /* [] */0\n          ]\n        ];\n        break;\n    case 12 : \n        seps = /* :: */[\n          \"%\",\n          /* :: */[\n            \"u\",\n            /* [] */0\n          ]\n        ];\n        break;\n    \n  }\n  return $$String.concat(Caml_string.bytes_to_string(Bytes.make(1, c)), seps);\n}\n\nfunction format_of_fconv(fconv, prec) {\n  if (fconv === /* Float_F */15) {\n    return \"%.12g\";\n  } else {\n    var prec$1 = Pervasives.abs(prec);\n    var symb = char_of_fconv(fconv);\n    var buf = /* record */[\n      /* ind */0,\n      /* bytes */Caml_string.caml_create_bytes(16)\n    ];\n    buffer_add_char(buf, /* \"%\" */37);\n    bprint_fconv_flag(buf, fconv);\n    buffer_add_char(buf, /* \".\" */46);\n    buffer_add_string(buf, String(prec$1));\n    buffer_add_char(buf, symb);\n    return buffer_contents(buf);\n  }\n}\n\nfunction convert_int(iconv, n) {\n  return Caml_format.caml_format_int(format_of_iconv(iconv), n);\n}\n\nfunction convert_int32(iconv, n) {\n  return Caml_format.caml_int32_format(format_of_aconv(iconv, /* \"l\" */108), n);\n}\n\nfunction convert_nativeint(iconv, n) {\n  return Caml_format.caml_nativeint_format(format_of_aconv(iconv, /* \"n\" */110), n);\n}\n\nfunction convert_int64(iconv, n) {\n  return Caml_format.caml_int64_format(format_of_aconv(iconv, /* \"L\" */76), n);\n}\n\nfunction convert_float(fconv, prec, x) {\n  var prec$1 = Pervasives.abs(prec);\n  var str = Caml_format.caml_format_float(format_of_fconv(fconv, prec$1), x);\n  if (fconv !== /* Float_F */15) {\n    return str;\n  } else {\n    var len = str.length;\n    var is_valid = function (_i) {\n      while(true) {\n        var i = _i;\n        if (i === len) {\n          return false;\n        } else {\n          var match = Caml_string.get(str, i);\n          var switcher = match - 46 | 0;\n          if (switcher > 23 || switcher < 0) {\n            if (switcher !== 55) {\n              _i = i + 1 | 0;\n              continue ;\n            } else {\n              return true;\n            }\n          } else if (switcher > 22 || switcher < 1) {\n            return true;\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n          }\n        }\n      };\n    };\n    var match = Caml_float.caml_classify_float(x);\n    if (match !== 3) {\n      if (match >= 4) {\n        return \"nan\";\n      } else if (is_valid(0)) {\n        return str;\n      } else {\n        return str + \".\";\n      }\n    } else if (x < 0.0) {\n      return \"neg_infinity\";\n    } else {\n      return \"infinity\";\n    }\n  }\n}\n\nfunction format_caml_char(c) {\n  return $$String.concat(Char.escaped(c), /* :: */[\n              \"'\",\n              /* :: */[\n                \"'\",\n                /* [] */0\n              ]\n            ]);\n}\n\nfunction string_of_fmtty(fmtty) {\n  var buf = /* record */[\n    /* ind */0,\n    /* bytes */Caml_string.caml_create_bytes(16)\n  ];\n  bprint_fmtty(buf, fmtty);\n  return buffer_contents(buf);\n}\n\nfunction make_printf(_k, o, _acc, _fmt) {\n  while(true) {\n    var fmt = _fmt;\n    var acc = _acc;\n    var k = _k;\n    if (typeof fmt === \"number\") {\n      return Curry._2(k, o, acc);\n    } else {\n      switch (fmt.tag | 0) {\n        case 0 : \n            var rest = fmt[0];\n            return (function(k,acc,rest){\n            return function (c) {\n              var new_acc = /* Acc_data_char */Block.__(5, [\n                  acc,\n                  c\n                ]);\n              return make_printf(k, o, new_acc, rest);\n            }\n            }(k,acc,rest));\n        case 1 : \n            var rest$1 = fmt[0];\n            return (function(k,acc,rest$1){\n            return function (c) {\n              var new_acc_001 = format_caml_char(c);\n              var new_acc = /* Acc_data_string */Block.__(4, [\n                  acc,\n                  new_acc_001\n                ]);\n              return make_printf(k, o, new_acc, rest$1);\n            }\n            }(k,acc,rest$1));\n        case 2 : \n            return make_string_padding(k, o, acc, fmt[1], fmt[0], (function (str) {\n                          return str;\n                        }));\n        case 3 : \n            return make_string_padding(k, o, acc, fmt[1], fmt[0], string_to_caml_string);\n        case 4 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_int, fmt[0]);\n        case 5 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_int32, fmt[0]);\n        case 6 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_nativeint, fmt[0]);\n        case 7 : \n            return make_int_padding_precision(k, o, acc, fmt[3], fmt[1], fmt[2], convert_int64, fmt[0]);\n        case 8 : \n            var k$1 = k;\n            var o$1 = o;\n            var acc$1 = acc;\n            var fmt$1 = fmt[3];\n            var pad = fmt[1];\n            var prec = fmt[2];\n            var fconv = fmt[0];\n            if (typeof pad === \"number\") {\n              if (typeof prec === \"number\") {\n                if (prec !== 0) {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv){\n                  return function (p, x) {\n                    var str = convert_float(fconv, p, x);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv));\n                } else {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv){\n                  return function (x) {\n                    var str = convert_float(fconv, 6, x);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv));\n                }\n              } else {\n                var p = prec[0];\n                return (function(k$1,o$1,acc$1,fmt$1,fconv,p){\n                return function (x) {\n                  var str = convert_float(fconv, p, x);\n                  return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                acc$1,\n                                str\n                              ]), fmt$1);\n                }\n                }(k$1,o$1,acc$1,fmt$1,fconv,p));\n              }\n            } else if (pad.tag) {\n              var padty = pad[0];\n              if (typeof prec === \"number\") {\n                if (prec !== 0) {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty){\n                  return function (w, p, x) {\n                    var str = fix_padding(padty, w, convert_float(fconv, p, x));\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty));\n                } else {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty){\n                  return function (w, x) {\n                    var str = convert_float(fconv, 6, x);\n                    var str$prime = fix_padding(padty, w, str);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str$prime\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty));\n                }\n              } else {\n                var p$1 = prec[0];\n                return (function(k$1,o$1,acc$1,fmt$1,fconv,padty,p$1){\n                return function (w, x) {\n                  var str = fix_padding(padty, w, convert_float(fconv, p$1, x));\n                  return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                acc$1,\n                                str\n                              ]), fmt$1);\n                }\n                }(k$1,o$1,acc$1,fmt$1,fconv,padty,p$1));\n              }\n            } else {\n              var w = pad[1];\n              var padty$1 = pad[0];\n              if (typeof prec === \"number\") {\n                if (prec !== 0) {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w){\n                  return function (p, x) {\n                    var str = fix_padding(padty$1, w, convert_float(fconv, p, x));\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w));\n                } else {\n                  return (function(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w){\n                  return function (x) {\n                    var str = convert_float(fconv, 6, x);\n                    var str$prime = fix_padding(padty$1, w, str);\n                    return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                  acc$1,\n                                  str$prime\n                                ]), fmt$1);\n                  }\n                  }(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w));\n                }\n              } else {\n                var p$2 = prec[0];\n                return (function(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w,p$2){\n                return function (x) {\n                  var str = fix_padding(padty$1, w, convert_float(fconv, p$2, x));\n                  return make_printf(k$1, o$1, /* Acc_data_string */Block.__(4, [\n                                acc$1,\n                                str\n                              ]), fmt$1);\n                }\n                }(k$1,o$1,acc$1,fmt$1,fconv,padty$1,w,p$2));\n              }\n            }\n        case 9 : \n            var rest$2 = fmt[0];\n            return (function(k,acc,rest$2){\n            return function (b) {\n              return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                            acc,\n                            b ? \"true\" : \"false\"\n                          ]), rest$2);\n            }\n            }(k,acc,rest$2));\n        case 10 : \n            _fmt = fmt[0];\n            _acc = /* Acc_flush */Block.__(7, [acc]);\n            continue ;\n        case 11 : \n            _fmt = fmt[1];\n            _acc = /* Acc_string_literal */Block.__(2, [\n                acc,\n                fmt[0]\n              ]);\n            continue ;\n        case 12 : \n            _fmt = fmt[1];\n            _acc = /* Acc_char_literal */Block.__(3, [\n                acc,\n                fmt[0]\n              ]);\n            continue ;\n        case 13 : \n            var rest$3 = fmt[2];\n            var ty = string_of_fmtty(fmt[1]);\n            return (function(k,acc,rest$3,ty){\n            return function (str) {\n              return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                            acc,\n                            ty\n                          ]), rest$3);\n            }\n            }(k,acc,rest$3,ty));\n        case 14 : \n            var rest$4 = fmt[2];\n            var fmtty = fmt[1];\n            return (function(k,acc,fmtty,rest$4){\n            return function (param) {\n              return make_printf(k, o, acc, CamlinternalFormatBasics.concat_fmt(recast(param[0], fmtty), rest$4));\n            }\n            }(k,acc,fmtty,rest$4));\n        case 15 : \n            var rest$5 = fmt[0];\n            return (function(k,acc,rest$5){\n            return function (f, x) {\n              return make_printf(k, o, /* Acc_delay */Block.__(6, [\n                            acc,\n                            (function (o) {\n                                return Curry._2(f, o, x);\n                              })\n                          ]), rest$5);\n            }\n            }(k,acc,rest$5));\n        case 16 : \n            var rest$6 = fmt[0];\n            return (function(k,acc,rest$6){\n            return function (f) {\n              return make_printf(k, o, /* Acc_delay */Block.__(6, [\n                            acc,\n                            f\n                          ]), rest$6);\n            }\n            }(k,acc,rest$6));\n        case 17 : \n            _fmt = fmt[1];\n            _acc = /* Acc_formatting_lit */Block.__(0, [\n                acc,\n                fmt[0]\n              ]);\n            continue ;\n        case 18 : \n            var match = fmt[0];\n            if (match.tag) {\n              var rest$7 = fmt[1];\n              var k$prime = (function(k,acc,rest$7){\n              return function k$prime(koc, kacc) {\n                return make_printf(k, koc, /* Acc_formatting_gen */Block.__(1, [\n                              acc,\n                              /* Acc_open_box */Block.__(1, [kacc])\n                            ]), rest$7);\n              }\n              }(k,acc,rest$7));\n              _fmt = match[0][0];\n              _acc = /* End_of_acc */0;\n              _k = k$prime;\n              continue ;\n            } else {\n              var rest$8 = fmt[1];\n              var k$prime$1 = (function(k,acc,rest$8){\n              return function k$prime$1(koc, kacc) {\n                return make_printf(k, koc, /* Acc_formatting_gen */Block.__(1, [\n                              acc,\n                              /* Acc_open_tag */Block.__(0, [kacc])\n                            ]), rest$8);\n              }\n              }(k,acc,rest$8));\n              _fmt = match[0][0];\n              _acc = /* End_of_acc */0;\n              _k = k$prime$1;\n              continue ;\n            }\n        case 19 : \n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    1449,\n                    4\n                  ]\n                ];\n        case 20 : \n            var rest$9 = fmt[2];\n            var new_acc = /* Acc_invalid_arg */Block.__(8, [\n                acc,\n                \"Printf: bad conversion %[\"\n              ]);\n            return (function(k,rest$9,new_acc){\n            return function (param) {\n              return make_printf(k, o, new_acc, rest$9);\n            }\n            }(k,rest$9,new_acc));\n        case 21 : \n            var rest$10 = fmt[1];\n            return (function(k,acc,rest$10){\n            return function (n) {\n              var new_acc_001 = Caml_format.caml_format_int(\"%u\", n);\n              var new_acc = /* Acc_data_string */Block.__(4, [\n                  acc,\n                  new_acc_001\n                ]);\n              return make_printf(k, o, new_acc, rest$10);\n            }\n            }(k,acc,rest$10));\n        case 22 : \n            var rest$11 = fmt[0];\n            return (function(k,acc,rest$11){\n            return function (c) {\n              var new_acc = /* Acc_data_char */Block.__(5, [\n                  acc,\n                  c\n                ]);\n              return make_printf(k, o, new_acc, rest$11);\n            }\n            }(k,acc,rest$11));\n        case 23 : \n            var k$2 = k;\n            var o$2 = o;\n            var acc$2 = acc;\n            var ign = fmt[0];\n            var fmt$2 = fmt[1];\n            if (typeof ign === \"number\") {\n              if (ign === 3) {\n                throw [\n                      Caml_builtin_exceptions.assert_failure,\n                      /* tuple */[\n                        \"camlinternalFormat.ml\",\n                        1517,\n                        39\n                      ]\n                    ];\n              } else {\n                return make_invalid_arg(k$2, o$2, acc$2, fmt$2);\n              }\n            } else if (ign.tag === 8) {\n              return make_from_fmtty(k$2, o$2, acc$2, ign[1], fmt$2);\n            } else {\n              return make_invalid_arg(k$2, o$2, acc$2, fmt$2);\n            }\n        case 24 : \n            return make_custom(k, o, acc, fmt[2], fmt[0], Curry._1(fmt[1], /* () */0));\n        \n      }\n    }\n  };\n}\n\nfunction make_from_fmtty(k, o, acc, fmtty, fmt) {\n  if (typeof fmtty === \"number\") {\n    return make_invalid_arg(k, o, acc, fmt);\n  } else {\n    switch (fmtty.tag | 0) {\n      case 0 : \n          var rest = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest, fmt);\n            });\n      case 1 : \n          var rest$1 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$1, fmt);\n            });\n      case 2 : \n          var rest$2 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$2, fmt);\n            });\n      case 3 : \n          var rest$3 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$3, fmt);\n            });\n      case 4 : \n          var rest$4 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$4, fmt);\n            });\n      case 5 : \n          var rest$5 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$5, fmt);\n            });\n      case 6 : \n          var rest$6 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$6, fmt);\n            });\n      case 7 : \n          var rest$7 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$7, fmt);\n            });\n      case 8 : \n          var rest$8 = fmtty[1];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$8, fmt);\n            });\n      case 9 : \n          var rest$9 = fmtty[2];\n          var ty = trans(symm(fmtty[0]), fmtty[1]);\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, CamlinternalFormatBasics.concat_fmtty(ty, rest$9), fmt);\n            });\n      case 10 : \n          var rest$10 = fmtty[0];\n          return (function (param, param$1) {\n              return make_from_fmtty(k, o, acc, rest$10, fmt);\n            });\n      case 11 : \n          var rest$11 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$11, fmt);\n            });\n      case 12 : \n          var rest$12 = fmtty[0];\n          return (function (param) {\n              return make_from_fmtty(k, o, acc, rest$12, fmt);\n            });\n      case 13 : \n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                /* tuple */[\n                  \"camlinternalFormat.ml\",\n                  1540,\n                  31\n                ]\n              ];\n      case 14 : \n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                /* tuple */[\n                  \"camlinternalFormat.ml\",\n                  1541,\n                  31\n                ]\n              ];\n      \n    }\n  }\n}\n\nfunction make_invalid_arg(k, o, acc, fmt) {\n  return make_printf(k, o, /* Acc_invalid_arg */Block.__(8, [\n                acc,\n                \"Printf: bad conversion %_\"\n              ]), fmt);\n}\n\nfunction make_string_padding(k, o, acc, fmt, pad, trans) {\n  if (typeof pad === \"number\") {\n    return (function (x) {\n        var new_acc_001 = Curry._1(trans, x);\n        var new_acc = /* Acc_data_string */Block.__(4, [\n            acc,\n            new_acc_001\n          ]);\n        return make_printf(k, o, new_acc, fmt);\n      });\n  } else if (pad.tag) {\n    var padty = pad[0];\n    return (function (w, x) {\n        var new_acc_001 = fix_padding(padty, w, Curry._1(trans, x));\n        var new_acc = /* Acc_data_string */Block.__(4, [\n            acc,\n            new_acc_001\n          ]);\n        return make_printf(k, o, new_acc, fmt);\n      });\n  } else {\n    var width = pad[1];\n    var padty$1 = pad[0];\n    return (function (x) {\n        var new_acc_001 = fix_padding(padty$1, width, Curry._1(trans, x));\n        var new_acc = /* Acc_data_string */Block.__(4, [\n            acc,\n            new_acc_001\n          ]);\n        return make_printf(k, o, new_acc, fmt);\n      });\n  }\n}\n\nfunction make_int_padding_precision(k, o, acc, fmt, pad, prec, trans, iconv) {\n  if (typeof pad === \"number\") {\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        return (function (p, x) {\n            var str = fix_int_precision(p, Curry._2(trans, iconv, x));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      } else {\n        return (function (x) {\n            var str = Curry._2(trans, iconv, x);\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      }\n    } else {\n      var p = prec[0];\n      return (function (x) {\n          var str = fix_int_precision(p, Curry._2(trans, iconv, x));\n          return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                        acc,\n                        str\n                      ]), fmt);\n        });\n    }\n  } else if (pad.tag) {\n    var padty = pad[0];\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        return (function (w, p, x) {\n            var str = fix_padding(padty, w, fix_int_precision(p, Curry._2(trans, iconv, x)));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      } else {\n        return (function (w, x) {\n            var str = fix_padding(padty, w, Curry._2(trans, iconv, x));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      }\n    } else {\n      var p$1 = prec[0];\n      return (function (w, x) {\n          var str = fix_padding(padty, w, fix_int_precision(p$1, Curry._2(trans, iconv, x)));\n          return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                        acc,\n                        str\n                      ]), fmt);\n        });\n    }\n  } else {\n    var w = pad[1];\n    var padty$1 = pad[0];\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        return (function (p, x) {\n            var str = fix_padding(padty$1, w, fix_int_precision(p, Curry._2(trans, iconv, x)));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      } else {\n        return (function (x) {\n            var str = fix_padding(padty$1, w, Curry._2(trans, iconv, x));\n            return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                          acc,\n                          str\n                        ]), fmt);\n          });\n      }\n    } else {\n      var p$2 = prec[0];\n      return (function (x) {\n          var str = fix_padding(padty$1, w, fix_int_precision(p$2, Curry._2(trans, iconv, x)));\n          return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                        acc,\n                        str\n                      ]), fmt);\n        });\n    }\n  }\n}\n\nfunction make_custom(k, o, acc, rest, arity, f) {\n  if (arity) {\n    var arity$1 = arity[0];\n    return (function (x) {\n        return make_custom(k, o, acc, rest, arity$1, Curry._1(f, x));\n      });\n  } else {\n    return make_printf(k, o, /* Acc_data_string */Block.__(4, [\n                  acc,\n                  f\n                ]), rest);\n  }\n}\n\nfunction output_acc(o, _acc) {\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    if (typeof acc === \"number\") {\n      return /* () */0;\n    } else {\n      switch (acc.tag | 0) {\n        case 0 : \n            var s = string_of_formatting_lit(acc[1]);\n            output_acc(o, acc[0]);\n            return Pervasives.output_string(o, s);\n        case 1 : \n            var match = acc[1];\n            var p = acc[0];\n            output_acc(o, p);\n            if (match.tag) {\n              Pervasives.output_string(o, \"@[\");\n              _acc = match[0];\n              continue ;\n            } else {\n              Pervasives.output_string(o, \"@{\");\n              _acc = match[0];\n              continue ;\n            }\n        case 2 : \n        case 4 : \n            exit = 1;\n            break;\n        case 3 : \n        case 5 : \n            exit = 2;\n            break;\n        case 6 : \n            output_acc(o, acc[0]);\n            return Curry._1(acc[1], o);\n        case 7 : \n            output_acc(o, acc[0]);\n            return Caml_io.caml_ml_flush(o);\n        case 8 : \n            output_acc(o, acc[0]);\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  acc[1]\n                ];\n        \n      }\n    }\n    switch (exit) {\n      case 1 : \n          output_acc(o, acc[0]);\n          return Pervasives.output_string(o, acc[1]);\n      case 2 : \n          output_acc(o, acc[0]);\n          return Caml_io.caml_ml_output_char(o, acc[1]);\n      \n    }\n  };\n}\n\nfunction bufput_acc(b, _acc) {\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    if (typeof acc === \"number\") {\n      return /* () */0;\n    } else {\n      switch (acc.tag | 0) {\n        case 0 : \n            var s = string_of_formatting_lit(acc[1]);\n            bufput_acc(b, acc[0]);\n            return $$Buffer.add_string(b, s);\n        case 1 : \n            var match = acc[1];\n            var p = acc[0];\n            bufput_acc(b, p);\n            if (match.tag) {\n              $$Buffer.add_string(b, \"@[\");\n              _acc = match[0];\n              continue ;\n            } else {\n              $$Buffer.add_string(b, \"@{\");\n              _acc = match[0];\n              continue ;\n            }\n        case 2 : \n        case 4 : \n            exit = 1;\n            break;\n        case 3 : \n        case 5 : \n            exit = 2;\n            break;\n        case 6 : \n            bufput_acc(b, acc[0]);\n            return Curry._1(acc[1], b);\n        case 7 : \n            _acc = acc[0];\n            continue ;\n        case 8 : \n            bufput_acc(b, acc[0]);\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  acc[1]\n                ];\n        \n      }\n    }\n    switch (exit) {\n      case 1 : \n          bufput_acc(b, acc[0]);\n          return $$Buffer.add_string(b, acc[1]);\n      case 2 : \n          bufput_acc(b, acc[0]);\n          return $$Buffer.add_char(b, acc[1]);\n      \n    }\n  };\n}\n\nfunction strput_acc(b, _acc) {\n  while(true) {\n    var acc = _acc;\n    var exit = 0;\n    if (typeof acc === \"number\") {\n      return /* () */0;\n    } else {\n      switch (acc.tag | 0) {\n        case 0 : \n            var s = string_of_formatting_lit(acc[1]);\n            strput_acc(b, acc[0]);\n            return $$Buffer.add_string(b, s);\n        case 1 : \n            var match = acc[1];\n            var p = acc[0];\n            strput_acc(b, p);\n            if (match.tag) {\n              $$Buffer.add_string(b, \"@[\");\n              _acc = match[0];\n              continue ;\n            } else {\n              $$Buffer.add_string(b, \"@{\");\n              _acc = match[0];\n              continue ;\n            }\n        case 2 : \n        case 4 : \n            exit = 1;\n            break;\n        case 3 : \n        case 5 : \n            exit = 2;\n            break;\n        case 6 : \n            strput_acc(b, acc[0]);\n            return $$Buffer.add_string(b, Curry._1(acc[1], /* () */0));\n        case 7 : \n            _acc = acc[0];\n            continue ;\n        case 8 : \n            strput_acc(b, acc[0]);\n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  acc[1]\n                ];\n        \n      }\n    }\n    switch (exit) {\n      case 1 : \n          strput_acc(b, acc[0]);\n          return $$Buffer.add_string(b, acc[1]);\n      case 2 : \n          strput_acc(b, acc[0]);\n          return $$Buffer.add_char(b, acc[1]);\n      \n    }\n  };\n}\n\nfunction failwith_message(param) {\n  var buf = $$Buffer.create(256);\n  var k = function (param, acc) {\n    strput_acc(buf, acc);\n    var s = $$Buffer.contents(buf);\n    throw [\n          Caml_builtin_exceptions.failure,\n          s\n        ];\n  };\n  return make_printf(k, /* () */0, /* End_of_acc */0, param[0]);\n}\n\nfunction open_box_of_string(str) {\n  if (str === \"\") {\n    return /* tuple */[\n            0,\n            /* Pp_box */4\n          ];\n  } else {\n    var len = str.length;\n    var invalid_box = function (param) {\n      return Curry._1(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"invalid box description \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* End_of_format */0\n                            ])\n                        ]),\n                      \"invalid box description %S\"\n                    ]), str);\n    };\n    var parse_spaces = function (_i) {\n      while(true) {\n        var i = _i;\n        if (i === len) {\n          return i;\n        } else {\n          var match = Caml_string.get(str, i);\n          if (match !== 9) {\n            if (match !== 32) {\n              return i;\n            } else {\n              _i = i + 1 | 0;\n              continue ;\n            }\n          } else {\n            _i = i + 1 | 0;\n            continue ;\n          }\n        }\n      };\n    };\n    var parse_lword = function (i, _j) {\n      while(true) {\n        var j = _j;\n        if (j === len) {\n          return j;\n        } else {\n          var match = Caml_string.get(str, j);\n          if (match > 122 || match < 97) {\n            return j;\n          } else {\n            _j = j + 1 | 0;\n            continue ;\n          }\n        }\n      };\n    };\n    var parse_int = function (i, _j) {\n      while(true) {\n        var j = _j;\n        if (j === len) {\n          return j;\n        } else {\n          var match = Caml_string.get(str, j);\n          if (match >= 48) {\n            if (match >= 58) {\n              return j;\n            } else {\n              _j = j + 1 | 0;\n              continue ;\n            }\n          } else if (match !== 45) {\n            return j;\n          } else {\n            _j = j + 1 | 0;\n            continue ;\n          }\n        }\n      };\n    };\n    var wstart = parse_spaces(0);\n    var wend = parse_lword(wstart, wstart);\n    var box_name = $$String.sub(str, wstart, wend - wstart | 0);\n    var nstart = parse_spaces(wend);\n    var nend = parse_int(nstart, nstart);\n    var indent;\n    if (nstart === nend) {\n      indent = 0;\n    } else {\n      try {\n        indent = Caml_format.caml_int_of_string($$String.sub(str, nstart, nend - nstart | 0));\n      }\n      catch (raw_exn){\n        var exn = Js_exn.internalToOCamlException(raw_exn);\n        if (exn[0] === Caml_builtin_exceptions.failure) {\n          indent = invalid_box(/* () */0);\n        } else {\n          throw exn;\n        }\n      }\n    }\n    var exp_end = parse_spaces(nend);\n    if (exp_end !== len) {\n      invalid_box(/* () */0);\n    }\n    var box_type;\n    switch (box_name) {\n      case \"\" : \n      case \"b\" : \n          box_type = /* Pp_box */4;\n          break;\n      case \"h\" : \n          box_type = /* Pp_hbox */0;\n          break;\n      case \"hov\" : \n          box_type = /* Pp_hovbox */3;\n          break;\n      case \"hv\" : \n          box_type = /* Pp_hvbox */2;\n          break;\n      case \"v\" : \n          box_type = /* Pp_vbox */1;\n          break;\n      default:\n        box_type = invalid_box(/* () */0);\n    }\n    return /* tuple */[\n            indent,\n            box_type\n          ];\n  }\n}\n\nfunction make_padding_fmt_ebb(pad, fmt) {\n  if (typeof pad === \"number\") {\n    return /* Padding_fmt_EBB */[\n            /* No_padding */0,\n            fmt\n          ];\n  } else if (pad.tag) {\n    return /* Padding_fmt_EBB */[\n            /* Arg_padding */Block.__(1, [pad[0]]),\n            fmt\n          ];\n  } else {\n    return /* Padding_fmt_EBB */[\n            /* Lit_padding */Block.__(0, [\n                pad[0],\n                pad[1]\n              ]),\n            fmt\n          ];\n  }\n}\n\nfunction make_precision_fmt_ebb(prec, fmt) {\n  if (typeof prec === \"number\") {\n    if (prec !== 0) {\n      return /* Precision_fmt_EBB */[\n              /* Arg_precision */1,\n              fmt\n            ];\n    } else {\n      return /* Precision_fmt_EBB */[\n              /* No_precision */0,\n              fmt\n            ];\n    }\n  } else {\n    return /* Precision_fmt_EBB */[\n            /* Lit_precision */[prec[0]],\n            fmt\n          ];\n  }\n}\n\nfunction make_padprec_fmt_ebb(pad, prec, fmt) {\n  var match = make_precision_fmt_ebb(prec, fmt);\n  var fmt$prime = match[1];\n  var prec$1 = match[0];\n  if (typeof pad === \"number\") {\n    return /* Padprec_fmt_EBB */[\n            /* No_padding */0,\n            prec$1,\n            fmt$prime\n          ];\n  } else if (pad.tag) {\n    return /* Padprec_fmt_EBB */[\n            /* Arg_padding */Block.__(1, [pad[0]]),\n            prec$1,\n            fmt$prime\n          ];\n  } else {\n    return /* Padprec_fmt_EBB */[\n            /* Lit_padding */Block.__(0, [\n                pad[0],\n                pad[1]\n              ]),\n            prec$1,\n            fmt$prime\n          ];\n  }\n}\n\nfunction fmt_ebb_of_string(legacy_behavior, str) {\n  var legacy_behavior$1 = legacy_behavior !== undefined ? legacy_behavior : true;\n  var invalid_format_message = function (str_ind, msg) {\n    return Curry._3(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", \",\n                                        /* String */Block.__(2, [\n                                            /* No_padding */0,\n                                            /* End_of_format */0\n                                          ])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, %s\"\n                  ]), str, str_ind, msg);\n  };\n  var invalid_format_without = function (str_ind, c, s) {\n    return Curry._4(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", '\",\n                                        /* Char */Block.__(0, [/* String_literal */Block.__(11, [\n                                                \"' without \",\n                                                /* String */Block.__(2, [\n                                                    /* No_padding */0,\n                                                    /* End_of_format */0\n                                                  ])\n                                              ])])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, '%c' without %s\"\n                  ]), str, str_ind, c, s);\n  };\n  var expected_character = function (str_ind, expected, read) {\n    return Curry._4(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", \",\n                                        /* String */Block.__(2, [\n                                            /* No_padding */0,\n                                            /* String_literal */Block.__(11, [\n                                                \" expected, read \",\n                                                /* Caml_char */Block.__(1, [/* End_of_format */0])\n                                              ])\n                                          ])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, %s expected, read %C\"\n                  ]), str, str_ind, expected, read);\n  };\n  var compute_int_conv = function (pct_ind, str_ind, _plus, _sharp, _space, symb) {\n    while(true) {\n      var space = _space;\n      var sharp = _sharp;\n      var plus = _plus;\n      var exit = 0;\n      var exit$1 = 0;\n      if (plus) {\n        if (sharp) {\n          exit$1 = 2;\n        } else if (space) {\n          exit = 1;\n        } else if (symb !== 100) {\n          if (symb !== 105) {\n            exit = 1;\n          } else {\n            return /* Int_pi */4;\n          }\n        } else {\n          return /* Int_pd */1;\n        }\n      } else if (sharp) {\n        if (space) {\n          exit$1 = 2;\n        } else if (symb !== 88) {\n          if (symb !== 111) {\n            if (symb !== 120) {\n              exit$1 = 2;\n            } else {\n              return /* Int_Cx */7;\n            }\n          } else {\n            return /* Int_Co */11;\n          }\n        } else {\n          return /* Int_CX */9;\n        }\n      } else if (space) {\n        if (symb !== 100) {\n          if (symb !== 105) {\n            exit = 1;\n          } else {\n            return /* Int_si */5;\n          }\n        } else {\n          return /* Int_sd */2;\n        }\n      } else {\n        switch (symb) {\n          case 88 : \n              return /* Int_X */8;\n          case 100 : \n              return /* Int_d */0;\n          case 105 : \n              return /* Int_i */3;\n          case 111 : \n              return /* Int_o */10;\n          case 117 : \n              return /* Int_u */12;\n          case 89 : \n          case 90 : \n          case 91 : \n          case 92 : \n          case 93 : \n          case 94 : \n          case 95 : \n          case 96 : \n          case 97 : \n          case 98 : \n          case 99 : \n          case 101 : \n          case 102 : \n          case 103 : \n          case 104 : \n          case 106 : \n          case 107 : \n          case 108 : \n          case 109 : \n          case 110 : \n          case 112 : \n          case 113 : \n          case 114 : \n          case 115 : \n          case 116 : \n          case 118 : \n          case 119 : \n              exit = 1;\n              break;\n          case 120 : \n              return /* Int_x */6;\n          default:\n            exit = 1;\n        }\n      }\n      if (exit$1 === 2) {\n        var exit$2 = 0;\n        switch (symb) {\n          case 88 : \n              if (legacy_behavior$1) {\n                return /* Int_CX */9;\n              } else {\n                exit = 1;\n              }\n              break;\n          case 111 : \n              if (legacy_behavior$1) {\n                return /* Int_Co */11;\n              } else {\n                exit = 1;\n              }\n              break;\n          case 100 : \n          case 105 : \n          case 117 : \n              exit$2 = 3;\n              break;\n          case 89 : \n          case 90 : \n          case 91 : \n          case 92 : \n          case 93 : \n          case 94 : \n          case 95 : \n          case 96 : \n          case 97 : \n          case 98 : \n          case 99 : \n          case 101 : \n          case 102 : \n          case 103 : \n          case 104 : \n          case 106 : \n          case 107 : \n          case 108 : \n          case 109 : \n          case 110 : \n          case 112 : \n          case 113 : \n          case 114 : \n          case 115 : \n          case 116 : \n          case 118 : \n          case 119 : \n              exit = 1;\n              break;\n          case 120 : \n              if (legacy_behavior$1) {\n                return /* Int_Cx */7;\n              } else {\n                exit = 1;\n              }\n              break;\n          default:\n            exit = 1;\n        }\n        if (exit$2 === 3) {\n          if (legacy_behavior$1) {\n            _sharp = false;\n            continue ;\n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"'#'\");\n          }\n        }\n        \n      }\n      if (exit === 1) {\n        if (plus) {\n          if (space) {\n            if (legacy_behavior$1) {\n              _space = false;\n              continue ;\n            } else {\n              return incompatible_flag(pct_ind, str_ind, /* \" \" */32, \"'+'\");\n            }\n          } else if (legacy_behavior$1) {\n            _plus = false;\n            continue ;\n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"'+'\");\n          }\n        } else if (space) {\n          if (legacy_behavior$1) {\n            _space = false;\n            continue ;\n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"' '\");\n          }\n        } else {\n          throw [\n                Caml_builtin_exceptions.assert_failure,\n                /* tuple */[\n                  \"camlinternalFormat.ml\",\n                  2719,\n                  28\n                ]\n              ];\n        }\n      }\n      \n    };\n  };\n  var incompatible_flag = function (pct_ind, str_ind, symb, option) {\n    var subfmt = $$String.sub(str, pct_ind, str_ind - pct_ind | 0);\n    return Curry._5(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", \",\n                                        /* String */Block.__(2, [\n                                            /* No_padding */0,\n                                            /* String_literal */Block.__(11, [\n                                                \" is incompatible with '\",\n                                                /* Char */Block.__(0, [/* String_literal */Block.__(11, [\n                                                        \"' in sub-format \",\n                                                        /* Caml_string */Block.__(3, [\n                                                            /* No_padding */0,\n                                                            /* End_of_format */0\n                                                          ])\n                                                      ])])\n                                              ])\n                                          ])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, %s is incompatible with '%c' in sub-format %S\"\n                  ]), str, pct_ind, option, symb, subfmt);\n  };\n  var parse_positive = function (_str_ind, end_ind, _acc) {\n    while(true) {\n      var acc = _acc;\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var c = Caml_string.get(str, str_ind);\n      if (c > 57 || c < 48) {\n        return /* tuple */[\n                str_ind,\n                acc\n              ];\n      } else {\n        var new_acc = Caml_int32.imul(acc, 10) + (c - /* \"0\" */48 | 0) | 0;\n        _acc = new_acc;\n        _str_ind = str_ind + 1 | 0;\n        continue ;\n      }\n    };\n  };\n  var parse_after_precision = function (pct_ind, str_ind, end_ind, minus, plus, sharp, space, ign, pad, prec) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var parse_conv = function (padprec) {\n      return parse_conversion(pct_ind, str_ind + 1 | 0, end_ind, plus, sharp, space, ign, pad, prec, padprec, Caml_string.get(str, str_ind));\n    };\n    if (typeof pad === \"number\") {\n      var exit = 0;\n      if (typeof prec === \"number\" && prec === 0) {\n        return parse_conv(/* No_padding */0);\n      } else {\n        exit = 1;\n      }\n      if (exit === 1) {\n        if (minus) {\n          if (typeof prec === \"number\") {\n            return parse_conv(/* Arg_padding */Block.__(1, [/* Left */0]));\n          } else {\n            return parse_conv(/* Lit_padding */Block.__(0, [\n                          /* Left */0,\n                          prec[0]\n                        ]));\n          }\n        } else if (typeof prec === \"number\") {\n          return parse_conv(/* Arg_padding */Block.__(1, [/* Right */1]));\n        } else {\n          return parse_conv(/* Lit_padding */Block.__(0, [\n                        /* Right */1,\n                        prec[0]\n                      ]));\n        }\n      }\n      \n    } else {\n      return parse_conv(pad);\n    }\n  };\n  var parse_after_padding = function (pct_ind, str_ind, end_ind, minus, plus, sharp, space, ign, pad) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var symb = Caml_string.get(str, str_ind);\n    if (symb !== 46) {\n      return parse_conversion(pct_ind, str_ind + 1 | 0, end_ind, plus, sharp, space, ign, pad, /* No_precision */0, pad, symb);\n    } else {\n      var pct_ind$1 = pct_ind;\n      var str_ind$1 = str_ind + 1 | 0;\n      var end_ind$1 = end_ind;\n      var minus$1 = minus;\n      var plus$1 = plus;\n      var sharp$1 = sharp;\n      var space$1 = space;\n      var ign$1 = ign;\n      var pad$1 = pad;\n      if (str_ind$1 === end_ind$1) {\n        invalid_format_message(end_ind$1, \"unexpected end of format\");\n      }\n      var parse_literal = function (minus, str_ind) {\n        var match = parse_positive(str_ind, end_ind$1, 0);\n        return parse_after_precision(pct_ind$1, match[0], end_ind$1, minus, plus$1, sharp$1, space$1, ign$1, pad$1, /* Lit_precision */[match[1]]);\n      };\n      var symb$1 = Caml_string.get(str, str_ind$1);\n      var exit = 0;\n      var exit$1 = 0;\n      if (symb$1 >= 48) {\n        if (symb$1 >= 58) {\n          exit = 1;\n        } else {\n          return parse_literal(minus$1, str_ind$1);\n        }\n      } else if (symb$1 >= 42) {\n        switch (symb$1 - 42 | 0) {\n          case 0 : \n              return parse_after_precision(pct_ind$1, str_ind$1 + 1 | 0, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, pad$1, /* Arg_precision */1);\n          case 1 : \n          case 3 : \n              exit$1 = 2;\n              break;\n          case 2 : \n          case 4 : \n          case 5 : \n              exit = 1;\n              break;\n          \n        }\n      } else {\n        exit = 1;\n      }\n      if (exit$1 === 2) {\n        if (legacy_behavior$1) {\n          return parse_literal(minus$1 || symb$1 === /* \"-\" */45, str_ind$1 + 1 | 0);\n        } else {\n          exit = 1;\n        }\n      }\n      if (exit === 1) {\n        if (legacy_behavior$1) {\n          return parse_after_precision(pct_ind$1, str_ind$1, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, pad$1, /* Lit_precision */[0]);\n        } else {\n          return invalid_format_without(str_ind$1 - 1 | 0, /* \".\" */46, \"precision\");\n        }\n      }\n      \n    }\n  };\n  var parse_literal = function (lit_start, _str_ind, end_ind) {\n    while(true) {\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        return add_literal(lit_start, str_ind, /* End_of_format */0);\n      } else {\n        var match = Caml_string.get(str, str_ind);\n        if (match !== 37) {\n          if (match !== 64) {\n            _str_ind = str_ind + 1 | 0;\n            continue ;\n          } else {\n            var match$1 = parse_after_at(str_ind + 1 | 0, end_ind);\n            return add_literal(lit_start, str_ind, match$1[0]);\n          }\n        } else {\n          var match$2 = parse_format(str_ind, end_ind);\n          return add_literal(lit_start, str_ind, match$2[0]);\n        }\n      }\n    };\n  };\n  var parse_format = function (pct_ind, end_ind) {\n    var pct_ind$1 = pct_ind;\n    var str_ind = pct_ind + 1 | 0;\n    var end_ind$1 = end_ind;\n    if (str_ind === end_ind$1) {\n      invalid_format_message(end_ind$1, \"unexpected end of format\");\n    }\n    var match = Caml_string.get(str, str_ind);\n    if (match !== 95) {\n      return parse_flags(pct_ind$1, str_ind, end_ind$1, false);\n    } else {\n      return parse_flags(pct_ind$1, str_ind + 1 | 0, end_ind$1, true);\n    }\n  };\n  var parse_after_at = function (str_ind, end_ind) {\n    if (str_ind === end_ind) {\n      return /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                  /* \"@\" */64,\n                  /* End_of_format */0\n                ])];\n    } else {\n      var c = Caml_string.get(str, str_ind);\n      var exit = 0;\n      if (c >= 65) {\n        if (c >= 94) {\n          switch (c) {\n            case 123 : \n                return parse_tag(true, str_ind + 1 | 0, end_ind);\n            case 124 : \n                exit = 1;\n                break;\n            case 125 : \n                var beg_ind = str_ind + 1 | 0;\n                var match = parse_literal(beg_ind, beg_ind, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Close_tag */1,\n                            match[0]\n                          ])];\n            default:\n              exit = 1;\n          }\n        } else if (c >= 91) {\n          switch (c - 91 | 0) {\n            case 0 : \n                return parse_tag(false, str_ind + 1 | 0, end_ind);\n            case 1 : \n                exit = 1;\n                break;\n            case 2 : \n                var beg_ind$1 = str_ind + 1 | 0;\n                var match$1 = parse_literal(beg_ind$1, beg_ind$1, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Close_box */0,\n                            match$1[0]\n                          ])];\n            \n          }\n        } else {\n          exit = 1;\n        }\n      } else if (c !== 10) {\n        if (c >= 32) {\n          switch (c - 32 | 0) {\n            case 0 : \n                var beg_ind$2 = str_ind + 1 | 0;\n                var match$2 = parse_literal(beg_ind$2, beg_ind$2, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Break */Block.__(0, [\n                                \"@ \",\n                                1,\n                                0\n                              ]),\n                            match$2[0]\n                          ])];\n            case 5 : \n                if ((str_ind + 1 | 0) < end_ind && Caml_string.get(str, str_ind + 1 | 0) === /* \"%\" */37) {\n                  var beg_ind$3 = str_ind + 2 | 0;\n                  var match$3 = parse_literal(beg_ind$3, beg_ind$3, end_ind);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              /* Escaped_percent */6,\n                              match$3[0]\n                            ])];\n                } else {\n                  var match$4 = parse_literal(str_ind, str_ind, end_ind);\n                  return /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                              /* \"@\" */64,\n                              match$4[0]\n                            ])];\n                }\n            case 12 : \n                var beg_ind$4 = str_ind + 1 | 0;\n                var match$5 = parse_literal(beg_ind$4, beg_ind$4, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Break */Block.__(0, [\n                                \"@,\",\n                                0,\n                                0\n                              ]),\n                            match$5[0]\n                          ])];\n            case 14 : \n                var beg_ind$5 = str_ind + 1 | 0;\n                var match$6 = parse_literal(beg_ind$5, beg_ind$5, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Flush_newline */4,\n                            match$6[0]\n                          ])];\n            case 27 : \n                var str_ind$1 = str_ind + 1 | 0;\n                var end_ind$1 = end_ind;\n                var match$7;\n                try {\n                  if (str_ind$1 === end_ind$1 || Caml_string.get(str, str_ind$1) !== /* \"<\" */60) {\n                    throw Caml_builtin_exceptions.not_found;\n                  }\n                  var str_ind_1 = parse_spaces(str_ind$1 + 1 | 0, end_ind$1);\n                  var match$8 = Caml_string.get(str, str_ind_1);\n                  var exit$1 = 0;\n                  if (match$8 >= 48) {\n                    if (match$8 >= 58) {\n                      throw Caml_builtin_exceptions.not_found;\n                    } else {\n                      exit$1 = 1;\n                    }\n                  } else if (match$8 !== 45) {\n                    throw Caml_builtin_exceptions.not_found;\n                  } else {\n                    exit$1 = 1;\n                  }\n                  if (exit$1 === 1) {\n                    var match$9 = parse_integer(str_ind_1, end_ind$1);\n                    var width = match$9[1];\n                    var str_ind_3 = parse_spaces(match$9[0], end_ind$1);\n                    var match$10 = Caml_string.get(str, str_ind_3);\n                    var switcher = match$10 - 45 | 0;\n                    if (switcher > 12 || switcher < 0) {\n                      if (switcher !== 17) {\n                        throw Caml_builtin_exceptions.not_found;\n                      } else {\n                        var s = $$String.sub(str, str_ind$1 - 2 | 0, (str_ind_3 - str_ind$1 | 0) + 3 | 0);\n                        match$7 = /* tuple */[\n                          str_ind_3 + 1 | 0,\n                          /* Break */Block.__(0, [\n                              s,\n                              width,\n                              0\n                            ])\n                        ];\n                      }\n                    } else if (switcher === 2 || switcher === 1) {\n                      throw Caml_builtin_exceptions.not_found;\n                    } else {\n                      var match$11 = parse_integer(str_ind_3, end_ind$1);\n                      var str_ind_5 = parse_spaces(match$11[0], end_ind$1);\n                      if (Caml_string.get(str, str_ind_5) !== /* \">\" */62) {\n                        throw Caml_builtin_exceptions.not_found;\n                      }\n                      var s$1 = $$String.sub(str, str_ind$1 - 2 | 0, (str_ind_5 - str_ind$1 | 0) + 3 | 0);\n                      match$7 = /* tuple */[\n                        str_ind_5 + 1 | 0,\n                        /* Break */Block.__(0, [\n                            s$1,\n                            width,\n                            match$11[1]\n                          ])\n                      ];\n                    }\n                  }\n                  \n                }\n                catch (raw_exn){\n                  var exn = Js_exn.internalToOCamlException(raw_exn);\n                  if (exn === Caml_builtin_exceptions.not_found || exn[0] === Caml_builtin_exceptions.failure) {\n                    match$7 = /* tuple */[\n                      str_ind$1,\n                      /* Break */Block.__(0, [\n                          \"@;\",\n                          1,\n                          0\n                        ])\n                    ];\n                  } else {\n                    throw exn;\n                  }\n                }\n                var next_ind = match$7[0];\n                var match$12 = parse_literal(next_ind, next_ind, end_ind$1);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            match$7[1],\n                            match$12[0]\n                          ])];\n            case 28 : \n                var str_ind$2 = str_ind + 1 | 0;\n                var end_ind$2 = end_ind;\n                var match$13;\n                try {\n                  var str_ind_1$1 = parse_spaces(str_ind$2, end_ind$2);\n                  var match$14 = Caml_string.get(str, str_ind_1$1);\n                  var exit$2 = 0;\n                  if (match$14 >= 48) {\n                    if (match$14 >= 58) {\n                      match$13 = undefined;\n                    } else {\n                      exit$2 = 1;\n                    }\n                  } else if (match$14 !== 45) {\n                    match$13 = undefined;\n                  } else {\n                    exit$2 = 1;\n                  }\n                  if (exit$2 === 1) {\n                    var match$15 = parse_integer(str_ind_1$1, end_ind$2);\n                    var str_ind_3$1 = parse_spaces(match$15[0], end_ind$2);\n                    if (Caml_string.get(str, str_ind_3$1) !== /* \">\" */62) {\n                      throw Caml_builtin_exceptions.not_found;\n                    }\n                    var s$2 = $$String.sub(str, str_ind$2 - 2 | 0, (str_ind_3$1 - str_ind$2 | 0) + 3 | 0);\n                    match$13 = /* tuple */[\n                      str_ind_3$1 + 1 | 0,\n                      /* Magic_size */Block.__(1, [\n                          s$2,\n                          match$15[1]\n                        ])\n                    ];\n                  }\n                  \n                }\n                catch (raw_exn$1){\n                  var exn$1 = Js_exn.internalToOCamlException(raw_exn$1);\n                  if (exn$1 === Caml_builtin_exceptions.not_found || exn$1[0] === Caml_builtin_exceptions.failure) {\n                    match$13 = undefined;\n                  } else {\n                    throw exn$1;\n                  }\n                }\n                if (match$13 !== undefined) {\n                  var match$16 = match$13;\n                  var next_ind$1 = match$16[0];\n                  var match$17 = parse_literal(next_ind$1, next_ind$1, end_ind$2);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              match$16[1],\n                              match$17[0]\n                            ])];\n                } else {\n                  var match$18 = parse_literal(str_ind$2, str_ind$2, end_ind$2);\n                  return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                              /* Scan_indic */Block.__(2, [/* \"<\" */60]),\n                              match$18[0]\n                            ])];\n                }\n            case 1 : \n            case 2 : \n            case 3 : \n            case 4 : \n            case 6 : \n            case 7 : \n            case 8 : \n            case 9 : \n            case 10 : \n            case 11 : \n            case 13 : \n            case 15 : \n            case 16 : \n            case 17 : \n            case 18 : \n            case 19 : \n            case 20 : \n            case 21 : \n            case 22 : \n            case 23 : \n            case 24 : \n            case 25 : \n            case 26 : \n            case 29 : \n            case 30 : \n                exit = 1;\n                break;\n            case 31 : \n                var beg_ind$6 = str_ind + 1 | 0;\n                var match$19 = parse_literal(beg_ind$6, beg_ind$6, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* FFlush */2,\n                            match$19[0]\n                          ])];\n            case 32 : \n                var beg_ind$7 = str_ind + 1 | 0;\n                var match$20 = parse_literal(beg_ind$7, beg_ind$7, end_ind);\n                return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                            /* Escaped_at */5,\n                            match$20[0]\n                          ])];\n            \n          }\n        } else {\n          exit = 1;\n        }\n      } else {\n        var beg_ind$8 = str_ind + 1 | 0;\n        var match$21 = parse_literal(beg_ind$8, beg_ind$8, end_ind);\n        return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                    /* Force_newline */3,\n                    match$21[0]\n                  ])];\n      }\n      if (exit === 1) {\n        var beg_ind$9 = str_ind + 1 | 0;\n        var match$22 = parse_literal(beg_ind$9, beg_ind$9, end_ind);\n        return /* Fmt_EBB */[/* Formatting_lit */Block.__(17, [\n                    /* Scan_indic */Block.__(2, [c]),\n                    match$22[0]\n                  ])];\n      }\n      \n    }\n  };\n  var add_literal = function (lit_start, str_ind, fmt) {\n    var size = str_ind - lit_start | 0;\n    if (size !== 0) {\n      if (size !== 1) {\n        return /* Fmt_EBB */[/* String_literal */Block.__(11, [\n                    $$String.sub(str, lit_start, size),\n                    fmt\n                  ])];\n      } else {\n        return /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                    Caml_string.get(str, lit_start),\n                    fmt\n                  ])];\n      }\n    } else {\n      return /* Fmt_EBB */[fmt];\n    }\n  };\n  var parse_spaces = function (_str_ind, end_ind) {\n    while(true) {\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      if (Caml_string.get(str, str_ind) === /* \" \" */32) {\n        _str_ind = str_ind + 1 | 0;\n        continue ;\n      } else {\n        return str_ind;\n      }\n    };\n  };\n  var parse_integer = function (str_ind, end_ind) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var match = Caml_string.get(str, str_ind);\n    if (match >= 48) {\n      if (match >= 58) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                2624,\n                11\n              ]\n            ];\n      } else {\n        return parse_positive(str_ind, end_ind, 0);\n      }\n    } else if (match !== 45) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            /* tuple */[\n              \"camlinternalFormat.ml\",\n              2624,\n              11\n            ]\n          ];\n    } else {\n      if ((str_ind + 1 | 0) === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var c = Caml_string.get(str, str_ind + 1 | 0);\n      if (c > 57 || c < 48) {\n        return expected_character(str_ind + 1 | 0, \"digit\", c);\n      } else {\n        var match$1 = parse_positive(str_ind + 1 | 0, end_ind, 0);\n        return /* tuple */[\n                match$1[0],\n                -match$1[1] | 0\n              ];\n      }\n    }\n  };\n  var compute_float_conv = function (pct_ind, str_ind, _plus, _space, symb) {\n    while(true) {\n      var space = _space;\n      var plus = _plus;\n      if (plus) {\n        if (space) {\n          if (legacy_behavior$1) {\n            _space = false;\n            continue ;\n          } else {\n            return incompatible_flag(pct_ind, str_ind, /* \" \" */32, \"'+'\");\n          }\n        } else {\n          var exit = 0;\n          if (symb >= 72) {\n            switch (symb) {\n              case 101 : \n                  return /* Float_pe */4;\n              case 102 : \n                  return /* Float_pf */1;\n              case 103 : \n                  return /* Float_pg */10;\n              default:\n                exit = 1;\n            }\n          } else if (symb >= 69) {\n            switch (symb - 69 | 0) {\n              case 0 : \n                  return /* Float_pE */7;\n              case 1 : \n                  exit = 1;\n                  break;\n              case 2 : \n                  return /* Float_pG */13;\n              \n            }\n          } else {\n            exit = 1;\n          }\n          if (exit === 1) {\n            if (legacy_behavior$1) {\n              _plus = false;\n              continue ;\n            } else {\n              return incompatible_flag(pct_ind, str_ind, symb, \"'+'\");\n            }\n          }\n          \n        }\n      } else if (space) {\n        var exit$1 = 0;\n        if (symb >= 72) {\n          switch (symb) {\n            case 101 : \n                return /* Float_se */5;\n            case 102 : \n                return /* Float_sf */2;\n            case 103 : \n                return /* Float_sg */11;\n            default:\n              exit$1 = 1;\n          }\n        } else if (symb >= 69) {\n          switch (symb - 69 | 0) {\n            case 0 : \n                return /* Float_sE */8;\n            case 1 : \n                exit$1 = 1;\n                break;\n            case 2 : \n                return /* Float_sG */14;\n            \n          }\n        } else {\n          exit$1 = 1;\n        }\n        if (exit$1 === 1) {\n          if (legacy_behavior$1) {\n            _space = false;\n            continue ;\n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"' '\");\n          }\n        }\n        \n      } else if (symb >= 72) {\n        switch (symb) {\n          case 101 : \n              return /* Float_e */3;\n          case 102 : \n              return /* Float_f */0;\n          case 103 : \n              return /* Float_g */9;\n          default:\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"camlinternalFormat.ml\",\n                    2747,\n                    25\n                  ]\n                ];\n        }\n      } else if (symb >= 69) {\n        switch (symb - 69 | 0) {\n          case 0 : \n              return /* Float_E */6;\n          case 1 : \n              return /* Float_F */15;\n          case 2 : \n              return /* Float_G */12;\n          \n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"camlinternalFormat.ml\",\n                2747,\n                25\n              ]\n            ];\n      }\n    };\n  };\n  var search_subformat_end = function (_str_ind, end_ind, c) {\n    while(true) {\n      var str_ind = _str_ind;\n      if (str_ind === end_ind) {\n        Curry._3(failwith_message(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \"invalid format \",\n                      /* Caml_string */Block.__(3, [\n                          /* No_padding */0,\n                          /* String_literal */Block.__(11, [\n                              \": unclosed sub-format, expected \\\"\",\n                              /* Char_literal */Block.__(12, [\n                                  /* \"%\" */37,\n                                  /* Char */Block.__(0, [/* String_literal */Block.__(11, [\n                                          \"\\\" at character number \",\n                                          /* Int */Block.__(4, [\n                                              /* Int_d */0,\n                                              /* No_padding */0,\n                                              /* No_precision */0,\n                                              /* End_of_format */0\n                                            ])\n                                        ])])\n                                ])\n                            ])\n                        ])\n                    ]),\n                  \"invalid format %S: unclosed sub-format, expected \\\"%%%c\\\" at character number %d\"\n                ]), str, c, end_ind);\n      }\n      var match = Caml_string.get(str, str_ind);\n      if (match !== 37) {\n        _str_ind = str_ind + 1 | 0;\n        continue ;\n      } else {\n        if ((str_ind + 1 | 0) === end_ind) {\n          invalid_format_message(end_ind, \"unexpected end of format\");\n        }\n        if (Caml_string.get(str, str_ind + 1 | 0) === c) {\n          return str_ind;\n        } else {\n          var match$1 = Caml_string.get(str, str_ind + 1 | 0);\n          var exit = 0;\n          if (match$1 >= 95) {\n            if (match$1 >= 123) {\n              if (match$1 >= 126) {\n                exit = 1;\n              } else {\n                switch (match$1 - 123 | 0) {\n                  case 0 : \n                      var sub_end = search_subformat_end(str_ind + 2 | 0, end_ind, /* \"}\" */125);\n                      _str_ind = sub_end + 2 | 0;\n                      continue ;\n                  case 1 : \n                      exit = 1;\n                      break;\n                  case 2 : \n                      return expected_character(str_ind + 1 | 0, \"character ')'\", /* \"}\" */125);\n                  \n                }\n              }\n            } else if (match$1 >= 96) {\n              exit = 1;\n            } else {\n              if ((str_ind + 2 | 0) === end_ind) {\n                invalid_format_message(end_ind, \"unexpected end of format\");\n              }\n              var match$2 = Caml_string.get(str, str_ind + 2 | 0);\n              if (match$2 !== 40) {\n                if (match$2 !== 123) {\n                  _str_ind = str_ind + 3 | 0;\n                  continue ;\n                } else {\n                  var sub_end$1 = search_subformat_end(str_ind + 3 | 0, end_ind, /* \"}\" */125);\n                  _str_ind = sub_end$1 + 2 | 0;\n                  continue ;\n                }\n              } else {\n                var sub_end$2 = search_subformat_end(str_ind + 3 | 0, end_ind, /* \")\" */41);\n                _str_ind = sub_end$2 + 2 | 0;\n                continue ;\n              }\n            }\n          } else if (match$1 !== 40) {\n            if (match$1 !== 41) {\n              exit = 1;\n            } else {\n              return expected_character(str_ind + 1 | 0, \"character '}'\", /* \")\" */41);\n            }\n          } else {\n            var sub_end$3 = search_subformat_end(str_ind + 2 | 0, end_ind, /* \")\" */41);\n            _str_ind = sub_end$3 + 2 | 0;\n            continue ;\n          }\n          if (exit === 1) {\n            _str_ind = str_ind + 2 | 0;\n            continue ;\n          }\n          \n        }\n      }\n    };\n  };\n  var parse_conversion = function (pct_ind, str_ind, end_ind, plus, sharp, space, ign, pad, prec, padprec, symb) {\n    var plus_used = false;\n    var sharp_used = false;\n    var space_used = false;\n    var ign_used = /* record */[/* contents */false];\n    var pad_used = false;\n    var prec_used = /* record */[/* contents */false];\n    var check_no_0 = function (symb, pad) {\n      if (typeof pad === \"number\") {\n        return pad;\n      } else if (pad.tag) {\n        if (pad[0] >= 2) {\n          if (legacy_behavior$1) {\n            return /* Arg_padding */Block.__(1, [/* Right */1]);\n          } else {\n            return incompatible_flag(pct_ind, str_ind, symb, \"0\");\n          }\n        } else {\n          return pad;\n        }\n      } else if (pad[0] >= 2) {\n        if (legacy_behavior$1) {\n          return /* Lit_padding */Block.__(0, [\n                    /* Right */1,\n                    pad[1]\n                  ]);\n        } else {\n          return incompatible_flag(pct_ind, str_ind, symb, \"0\");\n        }\n      } else {\n        return pad;\n      }\n    };\n    var opt_of_pad = function (c, pad) {\n      if (typeof pad === \"number\") {\n        return undefined;\n      } else if (pad.tag) {\n        return incompatible_flag(pct_ind, str_ind, c, \"'*'\");\n      } else {\n        switch (pad[0]) {\n          case 0 : \n              if (legacy_behavior$1) {\n                return pad[1];\n              } else {\n                return incompatible_flag(pct_ind, str_ind, c, \"'-'\");\n              }\n          case 1 : \n              return pad[1];\n          case 2 : \n              if (legacy_behavior$1) {\n                return pad[1];\n              } else {\n                return incompatible_flag(pct_ind, str_ind, c, \"'0'\");\n              }\n          \n        }\n      }\n    };\n    var get_prec_opt = function (param) {\n      prec_used[0] = true;\n      if (typeof prec === \"number\") {\n        if (prec !== 0) {\n          return incompatible_flag(pct_ind, str_ind, /* \"_\" */95, \"'*'\");\n        } else {\n          return undefined;\n        }\n      } else {\n        return prec[0];\n      }\n    };\n    var fmt_result;\n    var exit = 0;\n    var exit$1 = 0;\n    var exit$2 = 0;\n    if (symb >= 124) {\n      exit$1 = 6;\n    } else {\n      switch (symb) {\n        case 33 : \n            var match = parse_literal(str_ind, str_ind, end_ind);\n            fmt_result = /* Fmt_EBB */[/* Flush */Block.__(10, [match[0]])];\n            break;\n        case 40 : \n            var sub_end = search_subformat_end(str_ind, end_ind, /* \")\" */41);\n            var beg_ind = sub_end + 2 | 0;\n            var match$1 = parse_literal(beg_ind, beg_ind, end_ind);\n            var fmt_rest = match$1[0];\n            var match$2 = parse_literal(str_ind, str_ind, sub_end);\n            var sub_fmtty = fmtty_of_fmt(match$2[0]);\n            if (ign_used[0] = true, ign) {\n              pad_used = true;\n              var ignored_000 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored = /* Ignored_format_subst */Block.__(8, [\n                  ignored_000,\n                  sub_fmtty\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored,\n                    fmt_rest\n                  ])];\n            } else {\n              pad_used = true;\n              fmt_result = /* Fmt_EBB */[/* Format_subst */Block.__(14, [\n                    opt_of_pad(/* \"(\" */40, pad),\n                    sub_fmtty,\n                    fmt_rest\n                  ])];\n            }\n            break;\n        case 44 : \n            fmt_result = parse_literal(str_ind, str_ind, end_ind);\n            break;\n        case 37 : \n        case 64 : \n            exit$1 = 4;\n            break;\n        case 67 : \n            var match$3 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$1 = match$3[0];\n            fmt_result = (ign_used[0] = true, ign) ? /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    /* Ignored_caml_char */1,\n                    fmt_rest$1\n                  ])] : /* Fmt_EBB */[/* Caml_char */Block.__(1, [fmt_rest$1])];\n            break;\n        case 78 : \n            var match$4 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$2 = match$4[0];\n            if (ign_used[0] = true, ign) {\n              var ignored$1 = /* Ignored_scan_get_counter */Block.__(10, [/* Token_counter */2]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$1,\n                    fmt_rest$2\n                  ])];\n            } else {\n              fmt_result = /* Fmt_EBB */[/* Scan_get_counter */Block.__(21, [\n                    /* Token_counter */2,\n                    fmt_rest$2\n                  ])];\n            }\n            break;\n        case 83 : \n            pad_used = true;\n            var pad$1 = check_no_0(symb, padprec);\n            var match$5 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$3 = match$5[0];\n            if (ign_used[0] = true, ign) {\n              pad_used = true;\n              var ignored$2 = /* Ignored_caml_string */Block.__(1, [opt_of_pad(/* \"_\" */95, padprec)]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$2,\n                    fmt_rest$3\n                  ])];\n            } else {\n              var match$6 = make_padding_fmt_ebb(pad$1, fmt_rest$3);\n              fmt_result = /* Fmt_EBB */[/* Caml_string */Block.__(3, [\n                    match$6[0],\n                    match$6[1]\n                  ])];\n            }\n            break;\n        case 91 : \n            var match$7 = parse_char_set(str_ind, end_ind);\n            var char_set = match$7[1];\n            var next_ind = match$7[0];\n            var match$8 = parse_literal(next_ind, next_ind, end_ind);\n            var fmt_rest$4 = match$8[0];\n            if (ign_used[0] = true, ign) {\n              pad_used = true;\n              var ignored_000$1 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored$3 = /* Ignored_scan_char_set */Block.__(9, [\n                  ignored_000$1,\n                  char_set\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$3,\n                    fmt_rest$4\n                  ])];\n            } else {\n              pad_used = true;\n              fmt_result = /* Fmt_EBB */[/* Scan_char_set */Block.__(20, [\n                    opt_of_pad(/* \"[\" */91, pad),\n                    char_set,\n                    fmt_rest$4\n                  ])];\n            }\n            break;\n        case 32 : \n        case 35 : \n        case 43 : \n        case 45 : \n        case 95 : \n            exit$1 = 5;\n            break;\n        case 97 : \n            var match$9 = parse_literal(str_ind, str_ind, end_ind);\n            fmt_result = /* Fmt_EBB */[/* Alpha */Block.__(15, [match$9[0]])];\n            break;\n        case 66 : \n        case 98 : \n            exit$1 = 3;\n            break;\n        case 99 : \n            var char_format = function (fmt_rest) {\n              if (ign_used[0] = true, ign) {\n                return /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            /* Ignored_char */0,\n                            fmt_rest\n                          ])];\n              } else {\n                return /* Fmt_EBB */[/* Char */Block.__(0, [fmt_rest])];\n              }\n            };\n            var scan_format = function (fmt_rest) {\n              if (ign_used[0] = true, ign) {\n                return /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            /* Ignored_scan_next_char */4,\n                            fmt_rest\n                          ])];\n              } else {\n                return /* Fmt_EBB */[/* Scan_next_char */Block.__(22, [fmt_rest])];\n              }\n            };\n            var match$10 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$5 = match$10[0];\n            pad_used = true;\n            var match$11 = opt_of_pad(/* \"c\" */99, pad);\n            fmt_result = match$11 !== undefined ? (\n                match$11 !== 0 ? (\n                    legacy_behavior$1 ? char_format(fmt_rest$5) : invalid_format_message(str_ind, \"non-zero widths are unsupported for %c conversions\")\n                  ) : scan_format(fmt_rest$5)\n              ) : char_format(fmt_rest$5);\n            break;\n        case 69 : \n        case 70 : \n        case 71 : \n        case 101 : \n        case 102 : \n        case 103 : \n            exit$1 = 2;\n            break;\n        case 76 : \n        case 108 : \n        case 110 : \n            exit$2 = 8;\n            break;\n        case 114 : \n            var match$12 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$6 = match$12[0];\n            fmt_result = (ign_used[0] = true, ign) ? /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    /* Ignored_reader */3,\n                    fmt_rest$6\n                  ])] : /* Fmt_EBB */[/* Reader */Block.__(19, [fmt_rest$6])];\n            break;\n        case 115 : \n            pad_used = true;\n            var pad$2 = check_no_0(symb, padprec);\n            var match$13 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$7 = match$13[0];\n            if (ign_used[0] = true, ign) {\n              pad_used = true;\n              var ignored$4 = /* Ignored_string */Block.__(0, [opt_of_pad(/* \"_\" */95, padprec)]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$4,\n                    fmt_rest$7\n                  ])];\n            } else {\n              var match$14 = make_padding_fmt_ebb(pad$2, fmt_rest$7);\n              fmt_result = /* Fmt_EBB */[/* String */Block.__(2, [\n                    match$14[0],\n                    match$14[1]\n                  ])];\n            }\n            break;\n        case 116 : \n            var match$15 = parse_literal(str_ind, str_ind, end_ind);\n            fmt_result = /* Fmt_EBB */[/* Theta */Block.__(16, [match$15[0]])];\n            break;\n        case 88 : \n        case 100 : \n        case 105 : \n        case 111 : \n        case 117 : \n        case 120 : \n            exit$2 = 7;\n            break;\n        case 0 : \n        case 1 : \n        case 2 : \n        case 3 : \n        case 4 : \n        case 5 : \n        case 6 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n        case 11 : \n        case 12 : \n        case 13 : \n        case 14 : \n        case 15 : \n        case 16 : \n        case 17 : \n        case 18 : \n        case 19 : \n        case 20 : \n        case 21 : \n        case 22 : \n        case 23 : \n        case 24 : \n        case 25 : \n        case 26 : \n        case 27 : \n        case 28 : \n        case 29 : \n        case 30 : \n        case 31 : \n        case 34 : \n        case 36 : \n        case 38 : \n        case 39 : \n        case 41 : \n        case 42 : \n        case 46 : \n        case 47 : \n        case 48 : \n        case 49 : \n        case 50 : \n        case 51 : \n        case 52 : \n        case 53 : \n        case 54 : \n        case 55 : \n        case 56 : \n        case 57 : \n        case 58 : \n        case 59 : \n        case 60 : \n        case 61 : \n        case 62 : \n        case 63 : \n        case 65 : \n        case 68 : \n        case 72 : \n        case 73 : \n        case 74 : \n        case 75 : \n        case 77 : \n        case 79 : \n        case 80 : \n        case 81 : \n        case 82 : \n        case 84 : \n        case 85 : \n        case 86 : \n        case 87 : \n        case 89 : \n        case 90 : \n        case 92 : \n        case 93 : \n        case 94 : \n        case 96 : \n        case 104 : \n        case 106 : \n        case 107 : \n        case 109 : \n        case 112 : \n        case 113 : \n        case 118 : \n        case 119 : \n        case 121 : \n        case 122 : \n            exit$1 = 6;\n            break;\n        case 123 : \n            var sub_end$1 = search_subformat_end(str_ind, end_ind, /* \"}\" */125);\n            var match$16 = parse_literal(str_ind, str_ind, sub_end$1);\n            var beg_ind$1 = sub_end$1 + 2 | 0;\n            var match$17 = parse_literal(beg_ind$1, beg_ind$1, end_ind);\n            var fmt_rest$8 = match$17[0];\n            var sub_fmtty$1 = fmtty_of_fmt(match$16[0]);\n            if (ign_used[0] = true, ign) {\n              pad_used = true;\n              var ignored_000$2 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored$5 = /* Ignored_format_arg */Block.__(7, [\n                  ignored_000$2,\n                  sub_fmtty$1\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$5,\n                    fmt_rest$8\n                  ])];\n            } else {\n              pad_used = true;\n              fmt_result = /* Fmt_EBB */[/* Format_arg */Block.__(13, [\n                    opt_of_pad(/* \"{\" */123, pad),\n                    sub_fmtty$1,\n                    fmt_rest$8\n                  ])];\n            }\n            break;\n        \n      }\n    }\n    switch (exit$2) {\n      case 7 : \n          plus_used = true;\n          sharp_used = true;\n          space_used = true;\n          var iconv = compute_int_conv(pct_ind, str_ind, plus, sharp, space, symb);\n          var match$18 = parse_literal(str_ind, str_ind, end_ind);\n          var fmt_rest$9 = match$18[0];\n          if (ign_used[0] = true, ign) {\n            pad_used = true;\n            var ignored_001 = opt_of_pad(/* \"_\" */95, pad);\n            var ignored$6 = /* Ignored_int */Block.__(2, [\n                iconv,\n                ignored_001\n              ]);\n            fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                  ignored$6,\n                  fmt_rest$9\n                ])];\n          } else {\n            pad_used = true;\n            prec_used[0] = true;\n            var pad$3;\n            var exit$3 = 0;\n            if (typeof prec === \"number\" && prec === 0) {\n              pad$3 = pad;\n            } else {\n              exit$3 = 9;\n            }\n            if (exit$3 === 9) {\n              pad$3 = typeof pad === \"number\" ? /* No_padding */0 : (\n                  pad.tag ? (\n                      pad[0] >= 2 ? (\n                          legacy_behavior$1 ? /* Arg_padding */Block.__(1, [/* Right */1]) : incompatible_flag(pct_ind, str_ind, /* \"0\" */48, \"precision\")\n                        ) : pad\n                    ) : (\n                      pad[0] >= 2 ? (\n                          legacy_behavior$1 ? /* Lit_padding */Block.__(0, [\n                                /* Right */1,\n                                pad[1]\n                              ]) : incompatible_flag(pct_ind, str_ind, /* \"0\" */48, \"precision\")\n                        ) : pad\n                    )\n                );\n            }\n            var match$19 = make_padprec_fmt_ebb(pad$3, (prec_used[0] = true, prec), fmt_rest$9);\n            fmt_result = /* Fmt_EBB */[/* Int */Block.__(4, [\n                  iconv,\n                  match$19[0],\n                  match$19[1],\n                  match$19[2]\n                ])];\n          }\n          break;\n      case 8 : \n          if (str_ind === end_ind || !is_int_base(Caml_string.get(str, str_ind))) {\n            var match$20 = parse_literal(str_ind, str_ind, end_ind);\n            var fmt_rest$10 = match$20[0];\n            var counter = counter_of_char(symb);\n            if (ign_used[0] = true, ign) {\n              var ignored$7 = /* Ignored_scan_get_counter */Block.__(10, [counter]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$7,\n                    fmt_rest$10\n                  ])];\n            } else {\n              fmt_result = /* Fmt_EBB */[/* Scan_get_counter */Block.__(21, [\n                    counter,\n                    fmt_rest$10\n                  ])];\n            }\n          } else {\n            exit$1 = 6;\n          }\n          break;\n      \n    }\n    switch (exit$1) {\n      case 2 : \n          plus_used = true;\n          space_used = true;\n          var fconv = compute_float_conv(pct_ind, str_ind, plus, space, symb);\n          var match$21 = parse_literal(str_ind, str_ind, end_ind);\n          var fmt_rest$11 = match$21[0];\n          if (ign_used[0] = true, ign) {\n            pad_used = true;\n            var ignored_000$3 = opt_of_pad(/* \"_\" */95, pad);\n            var ignored_001$1 = get_prec_opt(/* () */0);\n            var ignored$8 = /* Ignored_float */Block.__(6, [\n                ignored_000$3,\n                ignored_001$1\n              ]);\n            fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                  ignored$8,\n                  fmt_rest$11\n                ])];\n          } else {\n            pad_used = true;\n            var match$22 = make_padprec_fmt_ebb(pad, (prec_used[0] = true, prec), fmt_rest$11);\n            fmt_result = /* Fmt_EBB */[/* Float */Block.__(8, [\n                  fconv,\n                  match$22[0],\n                  match$22[1],\n                  match$22[2]\n                ])];\n          }\n          break;\n      case 3 : \n          var match$23 = parse_literal(str_ind, str_ind, end_ind);\n          var fmt_rest$12 = match$23[0];\n          fmt_result = (ign_used[0] = true, ign) ? /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                  /* Ignored_bool */2,\n                  fmt_rest$12\n                ])] : /* Fmt_EBB */[/* Bool */Block.__(9, [fmt_rest$12])];\n          break;\n      case 4 : \n          var match$24 = parse_literal(str_ind, str_ind, end_ind);\n          fmt_result = /* Fmt_EBB */[/* Char_literal */Block.__(12, [\n                symb,\n                match$24[0]\n              ])];\n          break;\n      case 5 : \n          fmt_result = Curry._3(failwith_message(/* Format */[\n                    /* String_literal */Block.__(11, [\n                        \"invalid format \",\n                        /* Caml_string */Block.__(3, [\n                            /* No_padding */0,\n                            /* String_literal */Block.__(11, [\n                                \": at character number \",\n                                /* Int */Block.__(4, [\n                                    /* Int_d */0,\n                                    /* No_padding */0,\n                                    /* No_precision */0,\n                                    /* String_literal */Block.__(11, [\n                                        \", flag \",\n                                        /* Caml_char */Block.__(1, [/* String_literal */Block.__(11, [\n                                                \" is only allowed after the '\",\n                                                /* Char_literal */Block.__(12, [\n                                                    /* \"%\" */37,\n                                                    /* String_literal */Block.__(11, [\n                                                        \"', before padding and precision\",\n                                                        /* End_of_format */0\n                                                      ])\n                                                  ])\n                                              ])])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ]),\n                    \"invalid format %S: at character number %d, flag %C is only allowed after the '%%', before padding and precision\"\n                  ]), str, pct_ind, symb);\n          break;\n      case 6 : \n          if (symb >= 108) {\n            if (symb >= 111) {\n              exit = 1;\n            } else {\n              switch (symb - 108 | 0) {\n                case 0 : \n                    plus_used = true;\n                    sharp_used = true;\n                    space_used = true;\n                    var iconv$1 = compute_int_conv(pct_ind, str_ind + 1 | 0, plus, sharp, space, Caml_string.get(str, str_ind));\n                    var beg_ind$2 = str_ind + 1 | 0;\n                    var match$25 = parse_literal(beg_ind$2, beg_ind$2, end_ind);\n                    var fmt_rest$13 = match$25[0];\n                    if (ign_used[0] = true, ign) {\n                      pad_used = true;\n                      var ignored_001$2 = opt_of_pad(/* \"_\" */95, pad);\n                      var ignored$9 = /* Ignored_int32 */Block.__(3, [\n                          iconv$1,\n                          ignored_001$2\n                        ]);\n                      fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            ignored$9,\n                            fmt_rest$13\n                          ])];\n                    } else {\n                      pad_used = true;\n                      var match$26 = make_padprec_fmt_ebb(pad, (prec_used[0] = true, prec), fmt_rest$13);\n                      fmt_result = /* Fmt_EBB */[/* Int32 */Block.__(5, [\n                            iconv$1,\n                            match$26[0],\n                            match$26[1],\n                            match$26[2]\n                          ])];\n                    }\n                    break;\n                case 1 : \n                    exit = 1;\n                    break;\n                case 2 : \n                    plus_used = true;\n                    sharp_used = true;\n                    space_used = true;\n                    var iconv$2 = compute_int_conv(pct_ind, str_ind + 1 | 0, plus, sharp, space, Caml_string.get(str, str_ind));\n                    var beg_ind$3 = str_ind + 1 | 0;\n                    var match$27 = parse_literal(beg_ind$3, beg_ind$3, end_ind);\n                    var fmt_rest$14 = match$27[0];\n                    if (ign_used[0] = true, ign) {\n                      pad_used = true;\n                      var ignored_001$3 = opt_of_pad(/* \"_\" */95, pad);\n                      var ignored$10 = /* Ignored_nativeint */Block.__(4, [\n                          iconv$2,\n                          ignored_001$3\n                        ]);\n                      fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                            ignored$10,\n                            fmt_rest$14\n                          ])];\n                    } else {\n                      pad_used = true;\n                      var match$28 = make_padprec_fmt_ebb(pad, (prec_used[0] = true, prec), fmt_rest$14);\n                      fmt_result = /* Fmt_EBB */[/* Nativeint */Block.__(6, [\n                            iconv$2,\n                            match$28[0],\n                            match$28[1],\n                            match$28[2]\n                          ])];\n                    }\n                    break;\n                \n              }\n            }\n          } else if (symb !== 76) {\n            exit = 1;\n          } else {\n            plus_used = true;\n            sharp_used = true;\n            space_used = true;\n            var iconv$3 = compute_int_conv(pct_ind, str_ind + 1 | 0, plus, sharp, space, Caml_string.get(str, str_ind));\n            var beg_ind$4 = str_ind + 1 | 0;\n            var match$29 = parse_literal(beg_ind$4, beg_ind$4, end_ind);\n            var fmt_rest$15 = match$29[0];\n            if (ign_used[0] = true, ign) {\n              pad_used = true;\n              var ignored_001$4 = opt_of_pad(/* \"_\" */95, pad);\n              var ignored$11 = /* Ignored_int64 */Block.__(5, [\n                  iconv$3,\n                  ignored_001$4\n                ]);\n              fmt_result = /* Fmt_EBB */[/* Ignored_param */Block.__(23, [\n                    ignored$11,\n                    fmt_rest$15\n                  ])];\n            } else {\n              pad_used = true;\n              var match$30 = make_padprec_fmt_ebb(pad, (prec_used[0] = true, prec), fmt_rest$15);\n              fmt_result = /* Fmt_EBB */[/* Int64 */Block.__(7, [\n                    iconv$3,\n                    match$30[0],\n                    match$30[1],\n                    match$30[2]\n                  ])];\n            }\n          }\n          break;\n      \n    }\n    if (exit === 1) {\n      fmt_result = Curry._3(failwith_message(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"invalid format \",\n                    /* Caml_string */Block.__(3, [\n                        /* No_padding */0,\n                        /* String_literal */Block.__(11, [\n                            \": at character number \",\n                            /* Int */Block.__(4, [\n                                /* Int_d */0,\n                                /* No_padding */0,\n                                /* No_precision */0,\n                                /* String_literal */Block.__(11, [\n                                    \", invalid conversion \\\"\",\n                                    /* Char_literal */Block.__(12, [\n                                        /* \"%\" */37,\n                                        /* Char */Block.__(0, [/* Char_literal */Block.__(12, [\n                                                /* \"\\\"\" */34,\n                                                /* End_of_format */0\n                                              ])])\n                                      ])\n                                  ])\n                              ])\n                          ])\n                      ])\n                  ]),\n                \"invalid format %S: at character number %d, invalid conversion \\\"%%%c\\\"\"\n              ]), str, str_ind - 1 | 0, symb);\n    }\n    if (!legacy_behavior$1) {\n      if (!plus_used && plus) {\n        incompatible_flag(pct_ind, str_ind, symb, \"'+'\");\n      }\n      if (!sharp_used && sharp) {\n        incompatible_flag(pct_ind, str_ind, symb, \"'#'\");\n      }\n      if (!space_used && space) {\n        incompatible_flag(pct_ind, str_ind, symb, \"' '\");\n      }\n      if (!pad_used && Caml_obj.caml_notequal(/* Padding_EBB */[pad], /* Padding_EBB */[/* No_padding */0])) {\n        incompatible_flag(pct_ind, str_ind, symb, \"`padding'\");\n      }\n      if (!prec_used[0] && Caml_obj.caml_notequal(/* Precision_EBB */[prec], /* Precision_EBB */[/* No_precision */0])) {\n        incompatible_flag(pct_ind, str_ind, ign ? /* \"_\" */95 : symb, \"`precision'\");\n      }\n      if (ign && plus) {\n        incompatible_flag(pct_ind, str_ind, /* \"_\" */95, \"'+'\");\n      }\n      \n    }\n    if (!ign_used[0] && ign) {\n      var exit$4 = 0;\n      if (symb >= 38) {\n        if (symb !== 44) {\n          if (symb !== 64) {\n            exit$4 = 1;\n          } else if (!legacy_behavior$1) {\n            exit$4 = 1;\n          }\n          \n        } else if (!legacy_behavior$1) {\n          exit$4 = 1;\n        }\n        \n      } else if (symb !== 33) {\n        if (symb >= 37) {\n          if (!legacy_behavior$1) {\n            exit$4 = 1;\n          }\n          \n        } else {\n          exit$4 = 1;\n        }\n      } else if (!legacy_behavior$1) {\n        exit$4 = 1;\n      }\n      if (exit$4 === 1) {\n        incompatible_flag(pct_ind, str_ind, symb, \"'_'\");\n      }\n      \n    }\n    return fmt_result;\n  };\n  var parse_flags = function (pct_ind, str_ind, end_ind, ign) {\n    var zero = /* record */[/* contents */false];\n    var minus = /* record */[/* contents */false];\n    var plus = /* record */[/* contents */false];\n    var space = /* record */[/* contents */false];\n    var sharp = /* record */[/* contents */false];\n    var set_flag = function (str_ind, flag) {\n      if (flag[0] && !legacy_behavior$1) {\n        Curry._3(failwith_message(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \"invalid format \",\n                      /* Caml_string */Block.__(3, [\n                          /* No_padding */0,\n                          /* String_literal */Block.__(11, [\n                              \": at character number \",\n                              /* Int */Block.__(4, [\n                                  /* Int_d */0,\n                                  /* No_padding */0,\n                                  /* No_precision */0,\n                                  /* String_literal */Block.__(11, [\n                                      \", duplicate flag \",\n                                      /* Caml_char */Block.__(1, [/* End_of_format */0])\n                                    ])\n                                ])\n                            ])\n                        ])\n                    ]),\n                  \"invalid format %S: at character number %d, duplicate flag %C\"\n                ]), str, str_ind, Caml_string.get(str, str_ind));\n      }\n      flag[0] = true;\n      return /* () */0;\n    };\n    var _str_ind = str_ind;\n    while(true) {\n      var str_ind$1 = _str_ind;\n      if (str_ind$1 === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var match = Caml_string.get(str, str_ind$1);\n      var exit = 0;\n      switch (match) {\n        case 32 : \n            set_flag(str_ind$1, space);\n            _str_ind = str_ind$1 + 1 | 0;\n            continue ;\n        case 35 : \n            set_flag(str_ind$1, sharp);\n            _str_ind = str_ind$1 + 1 | 0;\n            continue ;\n        case 43 : \n            set_flag(str_ind$1, plus);\n            _str_ind = str_ind$1 + 1 | 0;\n            continue ;\n        case 45 : \n            set_flag(str_ind$1, minus);\n            _str_ind = str_ind$1 + 1 | 0;\n            continue ;\n        case 33 : \n        case 34 : \n        case 36 : \n        case 37 : \n        case 38 : \n        case 39 : \n        case 40 : \n        case 41 : \n        case 42 : \n        case 44 : \n        case 46 : \n        case 47 : \n            exit = 1;\n            break;\n        case 48 : \n            set_flag(str_ind$1, zero);\n            _str_ind = str_ind$1 + 1 | 0;\n            continue ;\n        default:\n          exit = 1;\n      }\n      if (exit === 1) {\n        var pct_ind$1 = pct_ind;\n        var str_ind$2 = str_ind$1;\n        var end_ind$1 = end_ind;\n        var zero$1 = zero[0];\n        var minus$1 = minus[0];\n        var plus$1 = plus[0];\n        var sharp$1 = sharp[0];\n        var space$1 = space[0];\n        var ign$1 = ign;\n        if (str_ind$2 === end_ind$1) {\n          invalid_format_message(end_ind$1, \"unexpected end of format\");\n        }\n        var padty = zero$1 ? (\n            minus$1 ? (\n                legacy_behavior$1 ? /* Left */0 : incompatible_flag(pct_ind$1, str_ind$2, /* \"-\" */45, \"0\")\n              ) : /* Zeros */2\n          ) : (\n            minus$1 ? /* Left */0 : /* Right */1\n          );\n        var match$1 = Caml_string.get(str, str_ind$2);\n        var exit$1 = 0;\n        if (match$1 >= 48) {\n          if (match$1 >= 58) {\n            exit$1 = 1;\n          } else {\n            var match$2 = parse_positive(str_ind$2, end_ind$1, 0);\n            return parse_after_padding(pct_ind$1, match$2[0], end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* Lit_padding */Block.__(0, [\n                          padty,\n                          match$2[1]\n                        ]));\n          }\n        } else if (match$1 !== 42) {\n          exit$1 = 1;\n        } else {\n          return parse_after_padding(pct_ind$1, str_ind$2 + 1 | 0, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* Arg_padding */Block.__(1, [padty]));\n        }\n        if (exit$1 === 1) {\n          switch (padty) {\n            case 0 : \n                if (!legacy_behavior$1) {\n                  invalid_format_without(str_ind$2 - 1 | 0, /* \"-\" */45, \"padding\");\n                }\n                return parse_after_padding(pct_ind$1, str_ind$2, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* No_padding */0);\n            case 1 : \n                return parse_after_padding(pct_ind$1, str_ind$2, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* No_padding */0);\n            case 2 : \n                return parse_after_padding(pct_ind$1, str_ind$2, end_ind$1, minus$1, plus$1, sharp$1, space$1, ign$1, /* Lit_padding */Block.__(0, [\n                              /* Right */1,\n                              0\n                            ]));\n            \n          }\n        }\n        \n      }\n      \n    };\n  };\n  var is_int_base = function (symb) {\n    switch (symb) {\n      case 89 : \n      case 90 : \n      case 91 : \n      case 92 : \n      case 93 : \n      case 94 : \n      case 95 : \n      case 96 : \n      case 97 : \n      case 98 : \n      case 99 : \n      case 101 : \n      case 102 : \n      case 103 : \n      case 104 : \n      case 106 : \n      case 107 : \n      case 108 : \n      case 109 : \n      case 110 : \n      case 112 : \n      case 113 : \n      case 114 : \n      case 115 : \n      case 116 : \n      case 118 : \n      case 119 : \n          return false;\n      case 88 : \n      case 100 : \n      case 105 : \n      case 111 : \n      case 117 : \n      case 120 : \n          return true;\n      default:\n        return false;\n    }\n  };\n  var counter_of_char = function (symb) {\n    var exit = 0;\n    if (symb >= 108) {\n      if (symb >= 111) {\n        exit = 1;\n      } else {\n        switch (symb - 108 | 0) {\n          case 0 : \n              return /* Line_counter */0;\n          case 1 : \n              exit = 1;\n              break;\n          case 2 : \n              return /* Char_counter */1;\n          \n        }\n      }\n    } else if (symb !== 76) {\n      exit = 1;\n    } else {\n      return /* Token_counter */2;\n    }\n    if (exit === 1) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            /* tuple */[\n              \"camlinternalFormat.ml\",\n              2686,\n              34\n            ]\n          ];\n    }\n    \n  };\n  var parse_char_set = function (str_ind, end_ind) {\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var char_set = Bytes.make(32, /* \"\\000\" */0);\n    var add_range = function (c, c$prime) {\n      for(var i = c; i <= c$prime; ++i){\n        add_in_char_set(char_set, Pervasives.char_of_int(i));\n      }\n      return /* () */0;\n    };\n    var fail_single_percent = function (str_ind) {\n      return Curry._2(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"invalid format \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \": '\",\n                                  /* Char_literal */Block.__(12, [\n                                      /* \"%\" */37,\n                                      /* String_literal */Block.__(11, [\n                                          \"' alone is not accepted in character sets, use \",\n                                          /* Char_literal */Block.__(12, [\n                                              /* \"%\" */37,\n                                              /* Char_literal */Block.__(12, [\n                                                  /* \"%\" */37,\n                                                  /* String_literal */Block.__(11, [\n                                                      \" instead at position \",\n                                                      /* Int */Block.__(4, [\n                                                          /* Int_d */0,\n                                                          /* No_padding */0,\n                                                          /* No_precision */0,\n                                                          /* Char_literal */Block.__(12, [\n                                                              /* \".\" */46,\n                                                              /* End_of_format */0\n                                                            ])\n                                                        ])\n                                                    ])\n                                                ])\n                                            ])\n                                        ])\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"invalid format %S: '%%' alone is not accepted in character sets, use %%%% instead at position %d.\"\n                    ]), str, str_ind);\n    };\n    var parse_char_set_after_char = function (_str_ind, end_ind, _c) {\n      while(true) {\n        var c = _c;\n        var str_ind = _str_ind;\n        if (str_ind === end_ind) {\n          invalid_format_message(end_ind, \"unexpected end of format\");\n        }\n        var c$prime = Caml_string.get(str, str_ind);\n        var exit = 0;\n        var exit$1 = 0;\n        if (c$prime >= 46) {\n          if (c$prime !== 64) {\n            if (c$prime !== 93) {\n              exit = 1;\n            } else {\n              add_in_char_set(char_set, c);\n              return str_ind + 1 | 0;\n            }\n          } else {\n            exit$1 = 2;\n          }\n        } else if (c$prime !== 37) {\n          if (c$prime >= 45) {\n            var str_ind$1 = str_ind + 1 | 0;\n            var end_ind$1 = end_ind;\n            var c$1 = c;\n            if (str_ind$1 === end_ind$1) {\n              invalid_format_message(end_ind$1, \"unexpected end of format\");\n            }\n            var c$prime$1 = Caml_string.get(str, str_ind$1);\n            if (c$prime$1 !== 37) {\n              if (c$prime$1 !== 93) {\n                add_range(c$1, c$prime$1);\n                return parse_char_set_content(str_ind$1 + 1 | 0, end_ind$1);\n              } else {\n                add_in_char_set(char_set, c$1);\n                add_in_char_set(char_set, /* \"-\" */45);\n                return str_ind$1 + 1 | 0;\n              }\n            } else {\n              if ((str_ind$1 + 1 | 0) === end_ind$1) {\n                invalid_format_message(end_ind$1, \"unexpected end of format\");\n              }\n              var c$prime$2 = Caml_string.get(str, str_ind$1 + 1 | 0);\n              var exit$2 = 0;\n              if (c$prime$2 !== 37 && c$prime$2 !== 64) {\n                return fail_single_percent(str_ind$1);\n              } else {\n                exit$2 = 1;\n              }\n              if (exit$2 === 1) {\n                add_range(c$1, c$prime$2);\n                return parse_char_set_content(str_ind$1 + 2 | 0, end_ind$1);\n              }\n              \n            }\n          } else {\n            exit = 1;\n          }\n        } else {\n          exit$1 = 2;\n        }\n        if (exit$1 === 2) {\n          if (c === /* \"%\" */37) {\n            add_in_char_set(char_set, c$prime);\n            return parse_char_set_content(str_ind + 1 | 0, end_ind);\n          } else {\n            exit = 1;\n          }\n        }\n        if (exit === 1) {\n          if (c === /* \"%\" */37) {\n            fail_single_percent(str_ind);\n          }\n          add_in_char_set(char_set, c);\n          _c = c$prime;\n          _str_ind = str_ind + 1 | 0;\n          continue ;\n        }\n        \n      };\n    };\n    var parse_char_set_content = function (_str_ind, end_ind) {\n      while(true) {\n        var str_ind = _str_ind;\n        if (str_ind === end_ind) {\n          invalid_format_message(end_ind, \"unexpected end of format\");\n        }\n        var c = Caml_string.get(str, str_ind);\n        if (c !== 45) {\n          if (c !== 93) {\n            return parse_char_set_after_char(str_ind + 1 | 0, end_ind, c);\n          } else {\n            return str_ind + 1 | 0;\n          }\n        } else {\n          add_in_char_set(char_set, /* \"-\" */45);\n          _str_ind = str_ind + 1 | 0;\n          continue ;\n        }\n      };\n    };\n    var parse_char_set_start = function (str_ind, end_ind) {\n      if (str_ind === end_ind) {\n        invalid_format_message(end_ind, \"unexpected end of format\");\n      }\n      var c = Caml_string.get(str, str_ind);\n      return parse_char_set_after_char(str_ind + 1 | 0, end_ind, c);\n    };\n    if (str_ind === end_ind) {\n      invalid_format_message(end_ind, \"unexpected end of format\");\n    }\n    var match = Caml_string.get(str, str_ind);\n    var match$1 = match !== 94 ? /* tuple */[\n        str_ind,\n        false\n      ] : /* tuple */[\n        str_ind + 1 | 0,\n        true\n      ];\n    var next_ind = parse_char_set_start(match$1[0], end_ind);\n    var char_set$1 = Bytes.to_string(char_set);\n    return /* tuple */[\n            next_ind,\n            match$1[1] ? rev_char_set(char_set$1) : char_set$1\n          ];\n  };\n  var check_open_box = function (fmt) {\n    if (typeof fmt === \"number\" || !(fmt.tag === 11 && typeof fmt[1] === \"number\")) {\n      return /* () */0;\n    } else {\n      try {\n        open_box_of_string(fmt[0]);\n        return /* () */0;\n      }\n      catch (raw_exn){\n        var exn = Js_exn.internalToOCamlException(raw_exn);\n        if (exn[0] === Caml_builtin_exceptions.failure) {\n          return /* () */0;\n        } else {\n          throw exn;\n        }\n      }\n    }\n  };\n  var parse_tag = function (is_open_tag, str_ind, end_ind) {\n    try {\n      if (str_ind === end_ind) {\n        throw Caml_builtin_exceptions.not_found;\n      }\n      var match = Caml_string.get(str, str_ind);\n      if (match !== 60) {\n        throw Caml_builtin_exceptions.not_found;\n      } else {\n        var ind = $$String.index_from(str, str_ind + 1 | 0, /* \">\" */62);\n        if (ind >= end_ind) {\n          throw Caml_builtin_exceptions.not_found;\n        }\n        var sub_str = $$String.sub(str, str_ind, (ind - str_ind | 0) + 1 | 0);\n        var beg_ind = ind + 1 | 0;\n        var match$1 = parse_literal(beg_ind, beg_ind, end_ind);\n        var match$2 = parse_literal(str_ind, str_ind, ind + 1 | 0);\n        var sub_fmt = match$2[0];\n        var sub_format = /* Format */[\n          sub_fmt,\n          sub_str\n        ];\n        var formatting = is_open_tag ? /* Open_tag */Block.__(0, [sub_format]) : (check_open_box(sub_fmt), /* Open_box */Block.__(1, [sub_format]));\n        return /* Fmt_EBB */[/* Formatting_gen */Block.__(18, [\n                    formatting,\n                    match$1[0]\n                  ])];\n      }\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        var match$3 = parse_literal(str_ind, str_ind, end_ind);\n        var sub_format$1 = /* Format */[\n          /* End_of_format */0,\n          \"\"\n        ];\n        var formatting$1 = is_open_tag ? /* Open_tag */Block.__(0, [sub_format$1]) : /* Open_box */Block.__(1, [sub_format$1]);\n        return /* Fmt_EBB */[/* Formatting_gen */Block.__(18, [\n                    formatting$1,\n                    match$3[0]\n                  ])];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  return parse_literal(0, 0, str.length);\n}\n\nfunction format_of_string_fmtty(str, fmtty) {\n  var match = fmt_ebb_of_string(undefined, str);\n  try {\n    return /* Format */[\n            type_format(match[0], fmtty),\n            str\n          ];\n  }\n  catch (exn){\n    if (exn === Type_mismatch) {\n      return Curry._2(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"bad input: format type mismatch between \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \" and \",\n                                  /* Caml_string */Block.__(3, [\n                                      /* No_padding */0,\n                                      /* End_of_format */0\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"bad input: format type mismatch between %S and %S\"\n                    ]), str, string_of_fmtty(fmtty));\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction format_of_string_format(str, param) {\n  var match = fmt_ebb_of_string(undefined, str);\n  try {\n    return /* Format */[\n            type_format(match[0], fmtty_of_fmt(param[0])),\n            str\n          ];\n  }\n  catch (exn){\n    if (exn === Type_mismatch) {\n      return Curry._2(failwith_message(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"bad input: format type mismatch between \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \" and \",\n                                  /* Caml_string */Block.__(3, [\n                                      /* No_padding */0,\n                                      /* End_of_format */0\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"bad input: format type mismatch between %S and %S\"\n                    ]), str, param[1]);\n    } else {\n      throw exn;\n    }\n  }\n}\n\nexports.is_in_char_set = is_in_char_set;\nexports.rev_char_set = rev_char_set;\nexports.create_char_set = create_char_set;\nexports.add_in_char_set = add_in_char_set;\nexports.freeze_char_set = freeze_char_set;\nexports.param_format_of_ignored_format = param_format_of_ignored_format;\nexports.make_printf = make_printf;\nexports.output_acc = output_acc;\nexports.bufput_acc = bufput_acc;\nexports.strput_acc = strput_acc;\nexports.type_format = type_format;\nexports.fmt_ebb_of_string = fmt_ebb_of_string;\nexports.format_of_string_fmtty = format_of_string_fmtty;\nexports.format_of_string_format = format_of_string_format;\nexports.char_of_iconv = char_of_iconv;\nexports.string_of_formatting_lit = string_of_formatting_lit;\nexports.string_of_formatting_gen = string_of_formatting_gen;\nexports.string_of_fmtty = string_of_fmtty;\nexports.string_of_fmt = string_of_fmt;\nexports.open_box_of_string = open_box_of_string;\nexports.symm = symm;\nexports.trans = trans;\nexports.recast = recast;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/camlinternalFormat.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/camlinternalFormat.js");
},
d: {"./char.js":"NM$$bsb$$_$$native$lib$js$char","./block.js":"NM$$bsb$$_$$native$lib$js$block","./bytes.js":"NM$$bsb$$_$$native$lib$js$bytes","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./buffer.js":"NM$$bsb$$_$$native$lib$js$buffer","./js_exn.js":"NM$$bsb$$_$$native$lib$js$js_exn","./string.js":"NM$$bsb$$_$$native$lib$js$string","./caml_io.js":"NM$$bsb$$_$$native$lib$js$caml_io","./caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","./caml_bytes.js":"NM$$bsb$$_$$native$lib$js$caml_bytes","./caml_float.js":"NM$$bsb$$_$$native$lib$js$caml_float","./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","./caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions","./camlinternalFormatBasics.js":"NM$$bsb$$_$$native$lib$js$camlinternalFormatBasics"}
},
"NM$$bsb$$_$$native$lib$js$printf":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar $$Buffer = __fastpack_require__(\"./buffer.js\");\nvar Pervasives = __fastpack_require__(\"./pervasives.js\");\nvar CamlinternalFormat = __fastpack_require__(\"./camlinternalFormat.js\");\n\nfunction kfprintf(k, o, param) {\n  return CamlinternalFormat.make_printf((function (o, acc) {\n                CamlinternalFormat.output_acc(o, acc);\n                return Curry._1(k, o);\n              }), o, /* End_of_acc */0, param[0]);\n}\n\nfunction kbprintf(k, b, param) {\n  return CamlinternalFormat.make_printf((function (b, acc) {\n                CamlinternalFormat.bufput_acc(b, acc);\n                return Curry._1(k, b);\n              }), b, /* End_of_acc */0, param[0]);\n}\n\nfunction ikfprintf(k, oc, param) {\n  return CamlinternalFormat.make_printf((function (oc, param) {\n                return Curry._1(k, oc);\n              }), oc, /* End_of_acc */0, param[0]);\n}\n\nfunction fprintf(oc, fmt) {\n  return kfprintf((function (prim) {\n                return /* () */0;\n              }), oc, fmt);\n}\n\nfunction bprintf(b, fmt) {\n  return kbprintf((function (prim) {\n                return /* () */0;\n              }), b, fmt);\n}\n\nfunction ifprintf(oc, fmt) {\n  return ikfprintf((function (prim) {\n                return /* () */0;\n              }), oc, fmt);\n}\n\nfunction printf(fmt) {\n  return fprintf(Pervasives.stdout, fmt);\n}\n\nfunction eprintf(fmt) {\n  return fprintf(Pervasives.stderr, fmt);\n}\n\nfunction ksprintf(k, param) {\n  var k$prime = function (param, acc) {\n    var buf = $$Buffer.create(64);\n    CamlinternalFormat.strput_acc(buf, acc);\n    return Curry._1(k, $$Buffer.contents(buf));\n  };\n  return CamlinternalFormat.make_printf(k$prime, /* () */0, /* End_of_acc */0, param[0]);\n}\n\nfunction sprintf(fmt) {\n  return ksprintf((function (s) {\n                return s;\n              }), fmt);\n}\n\nvar kprintf = ksprintf;\n\nexports.fprintf = fprintf;\nexports.printf = printf;\nexports.eprintf = eprintf;\nexports.sprintf = sprintf;\nexports.bprintf = bprintf;\nexports.ifprintf = ifprintf;\nexports.kfprintf = kfprintf;\nexports.ikfprintf = ikfprintf;\nexports.ksprintf = ksprintf;\nexports.kbprintf = kbprintf;\nexports.kprintf = kprintf;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/printf.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/printf.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./buffer.js":"NM$$bsb$$_$$native$lib$js$buffer","./pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","./camlinternalFormat.js":"NM$$bsb$$_$$native$lib$js$camlinternalFormat"}
},
"NM$$bsb$$_$$native$lib$js$scanf":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar List = __fastpack_require__(\"./list.js\");\nvar Block = __fastpack_require__(\"./block.js\");\nvar Bytes = __fastpack_require__(\"./bytes.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar $$Buffer = __fastpack_require__(\"./buffer.js\");\nvar Js_exn = __fastpack_require__(\"./js_exn.js\");\nvar Printf = __fastpack_require__(\"./printf.js\");\nvar $$String = __fastpack_require__(\"./string.js\");\nvar Caml_bytes = __fastpack_require__(\"./caml_bytes.js\");\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\nvar Pervasives = __fastpack_require__(\"./pervasives.js\");\nvar Caml_format = __fastpack_require__(\"./caml_format.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\nvar CamlinternalFormat = __fastpack_require__(\"./camlinternalFormat.js\");\nvar Caml_missing_polyfill = __fastpack_require__(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\nvar CamlinternalFormatBasics = __fastpack_require__(\"./camlinternalFormatBasics.js\");\n\nfunction next_char(ib) {\n  try {\n    var c = Curry._1(ib[/* get_next_char */6], /* () */0);\n    ib[/* current_char */1] = c;\n    ib[/* current_char_is_valid */2] = true;\n    ib[/* char_count */3] = ib[/* char_count */3] + 1 | 0;\n    if (c === /* \"\\n\" */10) {\n      ib[/* line_count */4] = ib[/* line_count */4] + 1 | 0;\n    }\n    return c;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.end_of_file) {\n      ib[/* current_char */1] = /* \"\\000\" */0;\n      ib[/* current_char_is_valid */2] = false;\n      ib[/* eof */0] = true;\n      return /* \"\\000\" */0;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction peek_char(ib) {\n  if (ib[/* current_char_is_valid */2]) {\n    return ib[/* current_char */1];\n  } else {\n    return next_char(ib);\n  }\n}\n\nfunction checked_peek_char(ib) {\n  var c = peek_char(ib);\n  if (ib[/* eof */0]) {\n    throw Caml_builtin_exceptions.end_of_file;\n  }\n  return c;\n}\n\nfunction end_of_input(ib) {\n  peek_char(ib);\n  return ib[/* eof */0];\n}\n\nfunction beginning_of_input(ib) {\n  return ib[/* char_count */3] === 0;\n}\n\nfunction name_of_input(ib) {\n  var match = ib[/* input_name */8];\n  if (typeof match === \"number\") {\n    if (match === 0) {\n      return \"unnamed character string\";\n    } else {\n      return \"unnamed function\";\n    }\n  } else if (match.tag) {\n    return \"unnamed pervasives input channel\";\n  } else {\n    return match[0];\n  }\n}\n\nfunction char_count(ib) {\n  if (ib[/* current_char_is_valid */2]) {\n    return ib[/* char_count */3] - 1 | 0;\n  } else {\n    return ib[/* char_count */3];\n  }\n}\n\nfunction token(ib) {\n  var tokbuf = ib[/* tokbuf */7];\n  var tok = $$Buffer.contents(tokbuf);\n  tokbuf[/* position */1] = 0;\n  ib[/* token_count */5] = ib[/* token_count */5] + 1 | 0;\n  return tok;\n}\n\nfunction ignore_char(width, ib) {\n  var width$1 = width - 1 | 0;\n  ib[/* current_char_is_valid */2] = false;\n  return width$1;\n}\n\nfunction store_char(width, ib, c) {\n  $$Buffer.add_char(ib[/* tokbuf */7], c);\n  return ignore_char(width, ib);\n}\n\nfunction create(iname, next) {\n  return /* record */[\n          /* eof */false,\n          /* current_char : \"\\000\" */0,\n          /* current_char_is_valid */false,\n          /* char_count */0,\n          /* line_count */0,\n          /* token_count */0,\n          /* get_next_char */next,\n          /* tokbuf */$$Buffer.create(1024),\n          /* input_name */iname\n        ];\n}\n\nfunction from_string(s) {\n  var i = /* record */[/* contents */0];\n  var len = s.length;\n  var next = function (param) {\n    if (i[0] >= len) {\n      throw Caml_builtin_exceptions.end_of_file;\n    } else {\n      var c = Caml_string.get(s, i[0]);\n      i[0] = i[0] + 1 | 0;\n      return c;\n    }\n  };\n  return create(/* From_string */0, next);\n}\n\nfunction from_function(param) {\n  return create(/* From_function */1, param);\n}\n\nvar file_buffer_size = /* record */[/* contents */1024];\n\nfunction scan_close_at_end(ic) {\n  Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  throw Caml_builtin_exceptions.end_of_file;\n}\n\nfunction scan_raise_at_end(_ic) {\n  throw Caml_builtin_exceptions.end_of_file;\n}\n\nfunction from_ic(scan_close_ic, iname, ic) {\n  var len = file_buffer_size[0];\n  var buf = Caml_string.caml_create_bytes(len);\n  var i = /* record */[/* contents */0];\n  var lim = /* record */[/* contents */0];\n  var eof = /* record */[/* contents */false];\n  var next = function (param) {\n    if (i[0] < lim[0]) {\n      var c = Caml_bytes.get(buf, i[0]);\n      i[0] = i[0] + 1 | 0;\n      return c;\n    } else if (eof[0]) {\n      throw Caml_builtin_exceptions.end_of_file;\n    } else {\n      lim[0] = Pervasives.input(ic, buf, 0, len);\n      if (lim[0] === 0) {\n        eof[0] = true;\n        return Curry._1(scan_close_ic, ic);\n      } else {\n        i[0] = 1;\n        return Caml_bytes.get(buf, 0);\n      }\n    }\n  };\n  return create(iname, next);\n}\n\nvar stdin = from_ic(scan_raise_at_end, /* From_file */Block.__(0, [\n        \"-\",\n        Pervasives.stdin\n      ]), Pervasives.stdin);\n\nfunction open_in(fname) {\n  if (fname === \"-\") {\n    return stdin;\n  } else {\n    var ic = Pervasives.open_in(fname);\n    return from_ic(scan_close_at_end, /* From_file */Block.__(0, [\n                  fname,\n                  ic\n                ]), ic);\n  }\n}\n\nfunction open_in_bin(fname) {\n  if (fname === \"-\") {\n    return stdin;\n  } else {\n    var ic = Pervasives.open_in_bin(fname);\n    return from_ic(scan_close_at_end, /* From_file */Block.__(0, [\n                  fname,\n                  ic\n                ]), ic);\n  }\n}\n\nvar memo = /* record */[/* contents : [] */0];\n\nfunction memo_from_ic(scan_close_ic, ic) {\n  try {\n    return List.assq(ic, memo[0]);\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      var ib = from_ic(scan_close_ic, /* From_channel */Block.__(1, [ic]), ic);\n      memo[0] = /* :: */[\n        /* tuple */[\n          ic,\n          ib\n        ],\n        memo[0]\n      ];\n      return ib;\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction from_channel(param) {\n  return memo_from_ic(scan_raise_at_end, param);\n}\n\nfunction close_in(ib) {\n  var match = ib[/* input_name */8];\n  if (typeof match === \"number\") {\n    return /* () */0;\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n  }\n}\n\nvar Scan_failure = Caml_exceptions.create(\"Scanf.Scan_failure\");\n\nfunction bad_input_escape(c) {\n  var s = Curry._1(Printf.sprintf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"illegal escape character \",\n                /* Caml_char */Block.__(1, [/* End_of_format */0])\n              ]),\n            \"illegal escape character %C\"\n          ]), c);\n  throw [\n        Scan_failure,\n        s\n      ];\n}\n\nfunction bad_token_length(message) {\n  var s = Curry._1(Printf.sprintf(/* Format */[\n            /* String_literal */Block.__(11, [\n                \"scanning of \",\n                /* String */Block.__(2, [\n                    /* No_padding */0,\n                    /* String_literal */Block.__(11, [\n                        \" failed: the specified length was too short for token\",\n                        /* End_of_format */0\n                      ])\n                  ])\n              ]),\n            \"scanning of %s failed: the specified length was too short for token\"\n          ]), message);\n  throw [\n        Scan_failure,\n        s\n      ];\n}\n\nfunction character_mismatch_err(c, ci) {\n  return Curry._2(Printf.sprintf(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \"looking for \",\n                      /* Caml_char */Block.__(1, [/* String_literal */Block.__(11, [\n                              \", found \",\n                              /* Caml_char */Block.__(1, [/* End_of_format */0])\n                            ])])\n                    ]),\n                  \"looking for %C, found %C\"\n                ]), c, ci);\n}\n\nfunction check_char(ib, _c) {\n  while(true) {\n    var c = _c;\n    if (c === /* \" \" */32) {\n      var ib$1 = ib;\n      while(true) {\n        var c$1 = peek_char(ib$1);\n        if (ib$1[/* eof */0]) {\n          return 0;\n        } else {\n          var switcher = c$1 - 9 | 0;\n          if (switcher > 4 || switcher < 0) {\n            if (switcher !== 23) {\n              return /* () */0;\n            } else {\n              ib$1[/* current_char_is_valid */2] = false;\n              continue ;\n            }\n          } else if (switcher === 3 || switcher === 2) {\n            return /* () */0;\n          } else {\n            ib$1[/* current_char_is_valid */2] = false;\n            continue ;\n          }\n        }\n      };\n    } else {\n      var ci = checked_peek_char(ib);\n      if (ci === c) {\n        ib[/* current_char_is_valid */2] = false;\n        return /* () */0;\n      } else if (ci !== 13) {\n        var s = character_mismatch_err(c, ci);\n        throw [\n              Scan_failure,\n              s\n            ];\n      } else if (c === /* \"\\n\" */10) {\n        ib[/* current_char_is_valid */2] = false;\n        _c = /* \"\\n\" */10;\n        continue ;\n      } else {\n        var s$1 = character_mismatch_err(c, ci);\n        throw [\n              Scan_failure,\n              s$1\n            ];\n      }\n    }\n  };\n}\n\nfunction token_char(ib) {\n  return Caml_string.get(token(ib), 0);\n}\n\nfunction token_bool(ib) {\n  var s = token(ib);\n  switch (s) {\n    case \"false\" : \n        return false;\n    case \"true\" : \n        return true;\n    default:\n      var s$1 = Curry._1(Printf.sprintf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"invalid boolean \",\n                    /* Caml_string */Block.__(3, [\n                        /* No_padding */0,\n                        /* End_of_format */0\n                      ])\n                  ]),\n                \"invalid boolean %S\"\n              ]), s);\n      throw [\n            Scan_failure,\n            s$1\n          ];\n  }\n}\n\nfunction token_int_literal(conv, ib) {\n  var tok;\n  var exit = 0;\n  switch (conv) {\n    case 98 : \n        tok = \"0b\" + token(ib);\n        break;\n    case 111 : \n        tok = \"0o\" + token(ib);\n        break;\n    case 100 : \n    case 105 : \n    case 117 : \n        tok = token(ib);\n        break;\n    case 89 : \n    case 90 : \n    case 91 : \n    case 92 : \n    case 93 : \n    case 94 : \n    case 95 : \n    case 96 : \n    case 97 : \n    case 99 : \n    case 101 : \n    case 102 : \n    case 103 : \n    case 104 : \n    case 106 : \n    case 107 : \n    case 108 : \n    case 109 : \n    case 110 : \n    case 112 : \n    case 113 : \n    case 114 : \n    case 115 : \n    case 116 : \n    case 118 : \n    case 119 : \n        exit = 1;\n        break;\n    case 88 : \n    case 120 : \n        tok = \"0x\" + token(ib);\n        break;\n    default:\n      exit = 1;\n  }\n  if (exit === 1) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          /* tuple */[\n            \"scanf.ml\",\n            507,\n            11\n          ]\n        ];\n  }\n  var l = tok.length;\n  if (l === 0 || Caml_string.get(tok, 0) !== /* \"+\" */43) {\n    return tok;\n  } else {\n    return $$String.sub(tok, 1, l - 1 | 0);\n  }\n}\n\nfunction token_float(ib) {\n  return Caml_format.caml_float_of_string(token(ib));\n}\n\nfunction scan_decimal_digits(_width, ib) {\n  while(true) {\n    var width = _width;\n    if (width === 0) {\n      return width;\n    } else {\n      var c = peek_char(ib);\n      if (ib[/* eof */0]) {\n        return width;\n      } else if (c >= 58) {\n        if (c !== 95) {\n          return width;\n        } else {\n          var width$1 = ignore_char(width, ib);\n          _width = width$1;\n          continue ;\n        }\n      } else if (c >= 48) {\n        var width$2 = store_char(width, ib, c);\n        _width = width$2;\n        continue ;\n      } else {\n        return width;\n      }\n    }\n  };\n}\n\nfunction scan_decimal_digits_plus(width, ib) {\n  if (width === 0) {\n    return bad_token_length(\"decimal digits\");\n  } else {\n    var c = checked_peek_char(ib);\n    if (c > 57 || c < 48) {\n      var s = Curry._1(Printf.sprintf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"character \",\n                    /* Caml_char */Block.__(1, [/* String_literal */Block.__(11, [\n                            \" is not a decimal digit\",\n                            /* End_of_format */0\n                          ])])\n                  ]),\n                \"character %C is not a decimal digit\"\n              ]), c);\n      throw [\n            Scan_failure,\n            s\n          ];\n    } else {\n      var width$1 = store_char(width, ib, c);\n      return scan_decimal_digits(width$1, ib);\n    }\n  }\n}\n\nfunction scan_digits_plus(basis, digitp, width, ib) {\n  if (width === 0) {\n    return bad_token_length(\"digits\");\n  } else {\n    var c = checked_peek_char(ib);\n    if (Curry._1(digitp, c)) {\n      var _width = store_char(width, ib, c);\n      while(true) {\n        var width$1 = _width;\n        if (width$1 === 0) {\n          return width$1;\n        } else {\n          var c$1 = peek_char(ib);\n          if (ib[/* eof */0]) {\n            return width$1;\n          } else if (Curry._1(digitp, c$1)) {\n            _width = store_char(width$1, ib, c$1);\n            continue ;\n          } else if (c$1 !== 95) {\n            return width$1;\n          } else {\n            _width = ignore_char(width$1, ib);\n            continue ;\n          }\n        }\n      };\n    } else {\n      var s = Curry._2(Printf.sprintf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"character \",\n                    /* Caml_char */Block.__(1, [/* String_literal */Block.__(11, [\n                            \" is not a valid \",\n                            /* String */Block.__(2, [\n                                /* No_padding */0,\n                                /* String_literal */Block.__(11, [\n                                    \" digit\",\n                                    /* End_of_format */0\n                                  ])\n                              ])\n                          ])])\n                  ]),\n                \"character %C is not a valid %s digit\"\n              ]), c, basis);\n      throw [\n            Scan_failure,\n            s\n          ];\n    }\n  }\n}\n\nfunction is_binary_digit(param) {\n  return param === 49 || param === 48;\n}\n\nfunction scan_binary_int(param, param$1) {\n  return scan_digits_plus(\"binary\", is_binary_digit, param, param$1);\n}\n\nfunction is_octal_digit(param) {\n  return !(param > 55 || param < 48);\n}\n\nfunction scan_octal_int(param, param$1) {\n  return scan_digits_plus(\"octal\", is_octal_digit, param, param$1);\n}\n\nfunction is_hexa_digit(param) {\n  var switcher = param - 48 | 0;\n  if (switcher > 22 || switcher < 0) {\n    return !(switcher > 54 || switcher < 49);\n  } else {\n    return switcher > 16 || switcher < 10;\n  }\n}\n\nfunction scan_hexadecimal_int(param, param$1) {\n  return scan_digits_plus(\"hexadecimal\", is_hexa_digit, param, param$1);\n}\n\nfunction scan_sign(width, ib) {\n  var c = checked_peek_char(ib);\n  if (c !== 43 && c !== 45) {\n    return width;\n  } else {\n    return store_char(width, ib, c);\n  }\n}\n\nfunction scan_optionally_signed_decimal_int(width, ib) {\n  var width$1 = scan_sign(width, ib);\n  return scan_decimal_digits_plus(width$1, ib);\n}\n\nfunction scan_int_conv(conv, width, ib) {\n  var exit = 0;\n  switch (conv) {\n    case 98 : \n        return scan_binary_int(width, ib);\n    case 100 : \n        return scan_optionally_signed_decimal_int(width, ib);\n    case 105 : \n        var width$1 = width;\n        var ib$1 = ib;\n        var width$2 = scan_sign(width$1, ib$1);\n        var width$3 = width$2;\n        var ib$2 = ib$1;\n        var c = checked_peek_char(ib$2);\n        if (c !== 48) {\n          return scan_decimal_digits_plus(width$3, ib$2);\n        } else {\n          var width$4 = store_char(width$3, ib$2, c);\n          if (width$4 === 0) {\n            return width$4;\n          } else {\n            var c$1 = peek_char(ib$2);\n            if (ib$2[/* eof */0]) {\n              return width$4;\n            } else if (c$1 >= 99) {\n              if (c$1 !== 111) {\n                if (c$1 !== 120) {\n                  return scan_decimal_digits(width$4, ib$2);\n                } else {\n                  return scan_hexadecimal_int(store_char(width$4, ib$2, c$1), ib$2);\n                }\n              } else {\n                return scan_octal_int(store_char(width$4, ib$2, c$1), ib$2);\n              }\n            } else if (c$1 !== 88) {\n              if (c$1 >= 98) {\n                return scan_binary_int(store_char(width$4, ib$2, c$1), ib$2);\n              } else {\n                return scan_decimal_digits(width$4, ib$2);\n              }\n            } else {\n              return scan_hexadecimal_int(store_char(width$4, ib$2, c$1), ib$2);\n            }\n          }\n        }\n    case 111 : \n        return scan_octal_int(width, ib);\n    case 117 : \n        return scan_decimal_digits_plus(width, ib);\n    case 89 : \n    case 90 : \n    case 91 : \n    case 92 : \n    case 93 : \n    case 94 : \n    case 95 : \n    case 96 : \n    case 97 : \n    case 99 : \n    case 101 : \n    case 102 : \n    case 103 : \n    case 104 : \n    case 106 : \n    case 107 : \n    case 108 : \n    case 109 : \n    case 110 : \n    case 112 : \n    case 113 : \n    case 114 : \n    case 115 : \n    case 116 : \n    case 118 : \n    case 119 : \n        exit = 1;\n        break;\n    case 88 : \n    case 120 : \n        return scan_hexadecimal_int(width, ib);\n    default:\n      exit = 1;\n  }\n  if (exit === 1) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          /* tuple */[\n            \"scanf.ml\",\n            674,\n            9\n          ]\n        ];\n  }\n  \n}\n\nfunction scan_frac_part(width, ib) {\n  if (width === 0) {\n    return width;\n  } else {\n    var c = peek_char(ib);\n    if (ib[/* eof */0] || c > 57 || c < 48) {\n      return width;\n    } else {\n      return scan_decimal_digits(store_char(width, ib, c), ib);\n    }\n  }\n}\n\nfunction scan_exp_part(width, ib) {\n  if (width === 0) {\n    return width;\n  } else {\n    var c = peek_char(ib);\n    if (ib[/* eof */0] || c !== 69 && c !== 101) {\n      return width;\n    } else {\n      return scan_optionally_signed_decimal_int(store_char(width, ib, c), ib);\n    }\n  }\n}\n\nfunction scan_int_part(width, ib) {\n  var width$1 = scan_sign(width, ib);\n  return scan_decimal_digits(width$1, ib);\n}\n\nfunction scan_float(width, precision, ib) {\n  var width$1 = scan_int_part(width, ib);\n  if (width$1 === 0) {\n    return /* tuple */[\n            width$1,\n            precision\n          ];\n  } else {\n    var c = peek_char(ib);\n    if (ib[/* eof */0]) {\n      return /* tuple */[\n              width$1,\n              precision\n            ];\n    } else if (c !== 46) {\n      return /* tuple */[\n              scan_exp_part(width$1, ib),\n              precision\n            ];\n    } else {\n      var width$2 = store_char(width$1, ib, c);\n      var precision$1 = width$2 < precision ? width$2 : precision;\n      var width$3 = width$2 - (precision$1 - scan_frac_part(precision$1, ib) | 0) | 0;\n      return /* tuple */[\n              scan_exp_part(width$3, ib),\n              precision$1\n            ];\n    }\n  }\n}\n\nfunction scan_caml_float(width, precision, ib) {\n  var width$1 = scan_optionally_signed_decimal_int(width, ib);\n  if (width$1 === 0) {\n    throw [\n          Scan_failure,\n          \"no dot or exponent part found in float token\"\n        ];\n  } else {\n    var c = peek_char(ib);\n    if (ib[/* eof */0]) {\n      throw [\n            Scan_failure,\n            \"no dot or exponent part found in float token\"\n          ];\n    } else {\n      var switcher = c - 69 | 0;\n      if (switcher > 32 || switcher < 0) {\n        if (switcher !== -23) {\n          throw [\n                Scan_failure,\n                \"no dot or exponent part found in float token\"\n              ];\n        } else {\n          var width$2 = store_char(width$1, ib, c);\n          var precision$1 = width$2 < precision ? width$2 : precision;\n          var width$3 = width$2 - (precision$1 - scan_frac_part(precision$1, ib) | 0) | 0;\n          return scan_exp_part(width$3, ib);\n        }\n      } else if (switcher > 31 || switcher < 1) {\n        return scan_exp_part(width$1, ib);\n      } else {\n        throw [\n              Scan_failure,\n              \"no dot or exponent part found in float token\"\n            ];\n      }\n    }\n  }\n}\n\nfunction scan_string(stp, width, ib) {\n  var _width = width;\n  while(true) {\n    var width$1 = _width;\n    if (width$1 === 0) {\n      return width$1;\n    } else {\n      var c = peek_char(ib);\n      if (ib[/* eof */0]) {\n        return width$1;\n      } else if (stp !== undefined) {\n        if (c === stp) {\n          ib[/* current_char_is_valid */2] = false;\n          return width$1;\n        } else {\n          _width = store_char(width$1, ib, c);\n          continue ;\n        }\n      } else {\n        var switcher = c - 9 | 0;\n        if (switcher > 4 || switcher < 0) {\n          if (switcher !== 23) {\n            _width = store_char(width$1, ib, c);\n            continue ;\n          } else {\n            return width$1;\n          }\n        } else if (switcher === 3 || switcher === 2) {\n          _width = store_char(width$1, ib, c);\n          continue ;\n        } else {\n          return width$1;\n        }\n      }\n    }\n  };\n}\n\nfunction scan_char(width, ib) {\n  return store_char(width, ib, checked_peek_char(ib));\n}\n\nfunction char_for_backslash(c) {\n  if (c >= 110) {\n    if (c >= 117) {\n      return c;\n    } else {\n      switch (c - 110 | 0) {\n        case 0 : \n            return /* \"\\n\" */10;\n        case 4 : \n            return /* \"\\r\" */13;\n        case 1 : \n        case 2 : \n        case 3 : \n        case 5 : \n            return c;\n        case 6 : \n            return /* \"\\t\" */9;\n        \n      }\n    }\n  } else if (c !== 98) {\n    return c;\n  } else {\n    return /* \"\\b\" */8;\n  }\n}\n\nfunction char_for_decimal_code(c0, c1, c2) {\n  var c = (Caml_int32.imul(100, c0 - /* \"0\" */48 | 0) + Caml_int32.imul(10, c1 - /* \"0\" */48 | 0) | 0) + (c2 - /* \"0\" */48 | 0) | 0;\n  if (c < 0 || c > 255) {\n    var s = Curry._3(Printf.sprintf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"bad character decimal encoding \\\\\",\n                  /* Char */Block.__(0, [/* Char */Block.__(0, [/* Char */Block.__(0, [/* End_of_format */0])])])\n                ]),\n              \"bad character decimal encoding \\\\%c%c%c\"\n            ]), c0, c1, c2);\n    throw [\n          Scan_failure,\n          s\n        ];\n  } else {\n    return Pervasives.char_of_int(c);\n  }\n}\n\nfunction hexadecimal_value_of_char(c) {\n  if (c >= /* \"a\" */97) {\n    return c - 87 | 0;\n  } else if (c >= /* \"A\" */65) {\n    return c - 55 | 0;\n  } else {\n    return c - /* \"0\" */48 | 0;\n  }\n}\n\nfunction char_for_hexadecimal_code(c1, c2) {\n  var c = (hexadecimal_value_of_char(c1) << 4) + hexadecimal_value_of_char(c2) | 0;\n  if (c < 0 || c > 255) {\n    var s = Curry._2(Printf.sprintf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"bad character hexadecimal encoding \\\\\",\n                  /* Char */Block.__(0, [/* Char */Block.__(0, [/* End_of_format */0])])\n                ]),\n              \"bad character hexadecimal encoding \\\\%c%c\"\n            ]), c1, c2);\n    throw [\n          Scan_failure,\n          s\n        ];\n  } else {\n    return Pervasives.char_of_int(c);\n  }\n}\n\nfunction check_next_char(message, width, ib) {\n  if (width === 0) {\n    return bad_token_length(message);\n  } else {\n    var c = peek_char(ib);\n    if (ib[/* eof */0]) {\n      var message$1 = message;\n      var s = Curry._1(Printf.sprintf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"scanning of \",\n                    /* String */Block.__(2, [\n                        /* No_padding */0,\n                        /* String_literal */Block.__(11, [\n                            \" failed: premature end of file occurred before end of token\",\n                            /* End_of_format */0\n                          ])\n                      ])\n                  ]),\n                \"scanning of %s failed: premature end of file occurred before end of token\"\n              ]), message$1);\n      throw [\n            Scan_failure,\n            s\n          ];\n    } else {\n      return c;\n    }\n  }\n}\n\nfunction scan_backslash_char(width, ib) {\n  var c = check_next_char(\"a Char\", width, ib);\n  var exit = 0;\n  if (c >= 40) {\n    if (c >= 58) {\n      switch (c) {\n        case 92 : \n        case 98 : \n        case 110 : \n        case 114 : \n        case 116 : \n            exit = 1;\n            break;\n        case 93 : \n        case 94 : \n        case 95 : \n        case 96 : \n        case 97 : \n        case 99 : \n        case 100 : \n        case 101 : \n        case 102 : \n        case 103 : \n        case 104 : \n        case 105 : \n        case 106 : \n        case 107 : \n        case 108 : \n        case 109 : \n        case 111 : \n        case 112 : \n        case 113 : \n        case 115 : \n        case 117 : \n        case 118 : \n        case 119 : \n            return bad_input_escape(c);\n        case 120 : \n            var get_digit = function (param) {\n              var c = next_char(ib);\n              var switcher = c - 48 | 0;\n              if (switcher > 22 || switcher < 0) {\n                if (switcher > 54 || switcher < 49) {\n                  return bad_input_escape(c);\n                } else {\n                  return c;\n                }\n              } else if (switcher > 16 || switcher < 10) {\n                return c;\n              } else {\n                return bad_input_escape(c);\n              }\n            };\n            var c1 = get_digit(/* () */0);\n            var c2 = get_digit(/* () */0);\n            return store_char(width - 2 | 0, ib, char_for_hexadecimal_code(c1, c2));\n        default:\n          return bad_input_escape(c);\n      }\n    } else if (c >= 48) {\n      var get_digit$1 = function (param) {\n        var c = next_char(ib);\n        if (c > 57 || c < 48) {\n          return bad_input_escape(c);\n        } else {\n          return c;\n        }\n      };\n      var c1$1 = get_digit$1(/* () */0);\n      var c2$1 = get_digit$1(/* () */0);\n      return store_char(width - 2 | 0, ib, char_for_decimal_code(c, c1$1, c2$1));\n    } else {\n      return bad_input_escape(c);\n    }\n  } else if (c !== 34 && c < 39) {\n    return bad_input_escape(c);\n  } else {\n    exit = 1;\n  }\n  if (exit === 1) {\n    return store_char(width, ib, char_for_backslash(c));\n  }\n  \n}\n\nfunction scan_caml_char(width, ib) {\n  var find_stop = function (width) {\n    var c = check_next_char(\"a Char\", width, ib);\n    if (c !== 39) {\n      var s = character_mismatch_err(/* \"'\" */39, c);\n      throw [\n            Scan_failure,\n            s\n          ];\n    } else {\n      return ignore_char(width, ib);\n    }\n  };\n  var width$1 = width;\n  var c = checked_peek_char(ib);\n  if (c !== 39) {\n    var s = character_mismatch_err(/* \"'\" */39, c);\n    throw [\n          Scan_failure,\n          s\n        ];\n  } else {\n    var width$2 = ignore_char(width$1, ib);\n    var c$1 = check_next_char(\"a Char\", width$2, ib);\n    if (c$1 !== 92) {\n      return find_stop(store_char(width$2, ib, c$1));\n    } else {\n      return find_stop(scan_backslash_char(ignore_char(width$2, ib), ib));\n    }\n  }\n}\n\nfunction scan_caml_string(width, ib) {\n  var find_stop = function (_width) {\n    while(true) {\n      var width = _width;\n      var c = check_next_char(\"a String\", width, ib);\n      if (c !== 34) {\n        if (c !== 92) {\n          _width = store_char(width, ib, c);\n          continue ;\n        } else {\n          var width$1 = ignore_char(width, ib);\n          var match = check_next_char(\"a String\", width$1, ib);\n          if (match !== 10) {\n            if (match !== 13) {\n              return find_stop(scan_backslash_char(width$1, ib));\n            } else {\n              var width$2 = ignore_char(width$1, ib);\n              var match$1 = check_next_char(\"a String\", width$2, ib);\n              if (match$1 !== 10) {\n                return find_stop(store_char(width$2, ib, /* \"\\r\" */13));\n              } else {\n                return skip_spaces(ignore_char(width$2, ib));\n              }\n            }\n          } else {\n            return skip_spaces(ignore_char(width$1, ib));\n          }\n        }\n      } else {\n        return ignore_char(width, ib);\n      }\n    };\n  };\n  var skip_spaces = function (_width) {\n    while(true) {\n      var width = _width;\n      var match = check_next_char(\"a String\", width, ib);\n      if (match !== 32) {\n        return find_stop(width);\n      } else {\n        _width = ignore_char(width, ib);\n        continue ;\n      }\n    };\n  };\n  var width$1 = width;\n  var c = checked_peek_char(ib);\n  if (c !== 34) {\n    var s = character_mismatch_err(/* \"\\\"\" */34, c);\n    throw [\n          Scan_failure,\n          s\n        ];\n  } else {\n    return find_stop(ignore_char(width$1, ib));\n  }\n}\n\nfunction scan_bool(ib) {\n  var c = checked_peek_char(ib);\n  var m;\n  if (c !== 102) {\n    if (c !== 116) {\n      var s = Curry._1(Printf.sprintf(/* Format */[\n                /* String_literal */Block.__(11, [\n                    \"the character \",\n                    /* Caml_char */Block.__(1, [/* String_literal */Block.__(11, [\n                            \" cannot start a boolean\",\n                            /* End_of_format */0\n                          ])])\n                  ]),\n                \"the character %C cannot start a boolean\"\n              ]), c);\n      throw [\n            Scan_failure,\n            s\n          ];\n    } else {\n      m = 4;\n    }\n  } else {\n    m = 5;\n  }\n  return scan_string(undefined, m, ib);\n}\n\nfunction scan_chars_in_char_set(char_set, scan_indic, width, ib) {\n  var scan_chars = function (_i, stp) {\n    while(true) {\n      var i = _i;\n      var c = peek_char(ib);\n      if (i > 0 && !ib[/* eof */0] && CamlinternalFormat.is_in_char_set(char_set, c) && c !== stp) {\n        store_char(Pervasives.max_int, ib, c);\n        _i = i - 1 | 0;\n        continue ;\n      } else {\n        return 0;\n      }\n    };\n  };\n  if (scan_indic !== undefined) {\n    var c = scan_indic;\n    scan_chars(width, c);\n    if (ib[/* eof */0]) {\n      return 0;\n    } else {\n      var ci = peek_char(ib);\n      if (c === ci) {\n        ib[/* current_char_is_valid */2] = false;\n        return /* () */0;\n      } else {\n        var s = character_mismatch_err(c, ci);\n        throw [\n              Scan_failure,\n              s\n            ];\n      }\n    }\n  } else {\n    return scan_chars(width, -1);\n  }\n}\n\nfunction scanf_bad_input(ib, x) {\n  var exit = 0;\n  var s;\n  if (x[0] === Scan_failure || x[0] === Caml_builtin_exceptions.failure) {\n    s = x[1];\n    exit = 1;\n  } else {\n    throw x;\n  }\n  if (exit === 1) {\n    var i = char_count(ib);\n    var s$1 = Curry._2(Printf.sprintf(/* Format */[\n              /* String_literal */Block.__(11, [\n                  \"scanf: bad input at char number \",\n                  /* Int */Block.__(4, [\n                      /* Int_i */3,\n                      /* No_padding */0,\n                      /* No_precision */0,\n                      /* String_literal */Block.__(11, [\n                          \": \",\n                          /* Caml_string */Block.__(3, [\n                              /* No_padding */0,\n                              /* End_of_format */0\n                            ])\n                        ])\n                    ])\n                ]),\n              \"scanf: bad input at char number %i: %S\"\n            ]), i, s);\n    throw [\n          Scan_failure,\n          s$1\n        ];\n  }\n  \n}\n\nfunction get_counter(ib, counter) {\n  switch (counter) {\n    case 0 : \n        return ib[/* line_count */4];\n    case 1 : \n        return char_count(ib);\n    case 2 : \n        return ib[/* token_count */5];\n    \n  }\n}\n\nfunction width_of_pad_opt(pad_opt) {\n  if (pad_opt !== undefined) {\n    return pad_opt;\n  } else {\n    return Pervasives.max_int;\n  }\n}\n\nfunction stopper_of_formatting_lit(fmting) {\n  if (fmting === /* Escaped_percent */6) {\n    return /* tuple */[\n            /* \"%\" */37,\n            \"\"\n          ];\n  } else {\n    var str = CamlinternalFormat.string_of_formatting_lit(fmting);\n    var stp = Caml_string.get(str, 1);\n    var sub_str = $$String.sub(str, 2, str.length - 2 | 0);\n    return /* tuple */[\n            stp,\n            sub_str\n          ];\n  }\n}\n\nfunction take_format_readers(k, _fmt) {\n  while(true) {\n    var fmt = _fmt;\n    if (typeof fmt === \"number\") {\n      return Curry._1(k, /* Nil */0);\n    } else {\n      switch (fmt.tag | 0) {\n        case 4 : \n        case 5 : \n        case 6 : \n        case 7 : \n        case 8 : \n            _fmt = fmt[3];\n            continue ;\n        case 14 : \n            return take_fmtty_format_readers(k, CamlinternalFormatBasics.erase_rel(CamlinternalFormat.symm(fmt[1])), fmt[2]);\n        case 18 : \n            _fmt = CamlinternalFormatBasics.concat_fmt(fmt[0][0][0], fmt[1]);\n            continue ;\n        case 19 : \n            var fmt_rest = fmt[0];\n            return (function(fmt_rest){\n            return function (reader) {\n              var new_k = function (readers_rest) {\n                return Curry._1(k, /* Cons */[\n                            reader,\n                            readers_rest\n                          ]);\n              };\n              return take_format_readers(new_k, fmt_rest);\n            }\n            }(fmt_rest));\n        case 2 : \n        case 3 : \n        case 11 : \n        case 12 : \n        case 17 : \n        case 21 : \n            _fmt = fmt[1];\n            continue ;\n        case 23 : \n            var k$1 = k;\n            var ign = fmt[0];\n            var fmt$1 = fmt[1];\n            if (typeof ign === \"number\") {\n              if (ign === 3) {\n                return (function(k$1,fmt$1){\n                return function (reader) {\n                  var new_k = function (readers_rest) {\n                    return Curry._1(k$1, /* Cons */[\n                                reader,\n                                readers_rest\n                              ]);\n                  };\n                  return take_format_readers(new_k, fmt$1);\n                }\n                }(k$1,fmt$1));\n              } else {\n                return take_format_readers(k$1, fmt$1);\n              }\n            } else if (ign.tag === 8) {\n              return take_fmtty_format_readers(k$1, ign[1], fmt$1);\n            } else {\n              return take_format_readers(k$1, fmt$1);\n            }\n        case 13 : \n        case 20 : \n        case 24 : \n            _fmt = fmt[2];\n            continue ;\n        default:\n          _fmt = fmt[0];\n          continue ;\n      }\n    }\n  };\n}\n\nfunction take_fmtty_format_readers(k, _fmtty, fmt) {\n  while(true) {\n    var fmtty = _fmtty;\n    if (typeof fmtty === \"number\") {\n      return take_format_readers(k, fmt);\n    } else {\n      switch (fmtty.tag | 0) {\n        case 8 : \n            _fmtty = fmtty[1];\n            continue ;\n        case 9 : \n            var ty = CamlinternalFormat.trans(CamlinternalFormat.symm(fmtty[0]), fmtty[1]);\n            _fmtty = CamlinternalFormatBasics.concat_fmtty(ty, fmtty[2]);\n            continue ;\n        case 13 : \n            var fmt_rest = fmtty[0];\n            return (function(fmt_rest){\n            return function (reader) {\n              var new_k = function (readers_rest) {\n                return Curry._1(k, /* Cons */[\n                            reader,\n                            readers_rest\n                          ]);\n              };\n              return take_fmtty_format_readers(new_k, fmt_rest, fmt);\n            }\n            }(fmt_rest));\n        case 14 : \n            var fmt_rest$1 = fmtty[0];\n            return (function(fmt_rest$1){\n            return function (reader) {\n              var new_k = function (readers_rest) {\n                return Curry._1(k, /* Cons */[\n                            reader,\n                            readers_rest\n                          ]);\n              };\n              return take_fmtty_format_readers(new_k, fmt_rest$1, fmt);\n            }\n            }(fmt_rest$1));\n        default:\n          _fmtty = fmtty[0];\n          continue ;\n      }\n    }\n  };\n}\n\nfunction make_scanf(ib, _fmt, readers) {\n  while(true) {\n    var fmt = _fmt;\n    if (typeof fmt === \"number\") {\n      return /* Nil */0;\n    } else {\n      switch (fmt.tag | 0) {\n        case 0 : \n            scan_char(0, ib);\n            var c = token_char(ib);\n            return /* Cons */[\n                    c,\n                    make_scanf(ib, fmt[0], readers)\n                  ];\n        case 1 : \n            scan_caml_char(0, ib);\n            var c$1 = token_char(ib);\n            return /* Cons */[\n                    c$1,\n                    make_scanf(ib, fmt[0], readers)\n                  ];\n        case 2 : \n            var rest = fmt[1];\n            var pad = fmt[0];\n            var exit = 0;\n            if (typeof rest === \"number\") {\n              exit = 1;\n            } else {\n              switch (rest.tag | 0) {\n                case 17 : \n                    var match = stopper_of_formatting_lit(rest[0]);\n                    var stp = match[0];\n                    var scan = (function(stp){\n                    return function scan(width, param, ib) {\n                      return scan_string(stp, width, ib);\n                    }\n                    }(stp));\n                    var str_rest_000 = match[1];\n                    var str_rest_001 = rest[1];\n                    var str_rest = /* String_literal */Block.__(11, [\n                        str_rest_000,\n                        str_rest_001\n                      ]);\n                    return pad_prec_scanf(ib, str_rest, readers, pad, /* No_precision */0, scan, token);\n                case 18 : \n                    var match$1 = rest[0];\n                    if (match$1.tag) {\n                      var scan$1 = function (width, param, ib) {\n                        return scan_string(/* \"[\" */91, width, ib);\n                      };\n                      return pad_prec_scanf(ib, CamlinternalFormatBasics.concat_fmt(match$1[0][0], rest[1]), readers, pad, /* No_precision */0, scan$1, token);\n                    } else {\n                      var scan$2 = function (width, param, ib) {\n                        return scan_string(/* \"{\" */123, width, ib);\n                      };\n                      return pad_prec_scanf(ib, CamlinternalFormatBasics.concat_fmt(match$1[0][0], rest[1]), readers, pad, /* No_precision */0, scan$2, token);\n                    }\n                default:\n                  exit = 1;\n              }\n            }\n            if (exit === 1) {\n              var scan$3 = function (width, param, ib) {\n                return scan_string(undefined, width, ib);\n              };\n              return pad_prec_scanf(ib, rest, readers, pad, /* No_precision */0, scan$3, token);\n            }\n            break;\n        case 3 : \n            var scan$4 = function (width, param, ib) {\n              return scan_caml_string(width, ib);\n            };\n            return pad_prec_scanf(ib, fmt[1], readers, fmt[0], /* No_precision */0, scan$4, token);\n        case 4 : \n            var c$2 = CamlinternalFormat.char_of_iconv(fmt[0]);\n            var scan$5 = (function(c$2){\n            return function scan$5(width, param, ib) {\n              return scan_int_conv(c$2, width, ib);\n            }\n            }(c$2));\n            return pad_prec_scanf(ib, fmt[3], readers, fmt[1], fmt[2], scan$5, (function(c$2){\n                      return function (param) {\n                        return Caml_format.caml_int_of_string(token_int_literal(c$2, param));\n                      }\n                      }(c$2)));\n        case 5 : \n            var c$3 = CamlinternalFormat.char_of_iconv(fmt[0]);\n            var scan$6 = (function(c$3){\n            return function scan$6(width, param, ib) {\n              return scan_int_conv(c$3, width, ib);\n            }\n            }(c$3));\n            return pad_prec_scanf(ib, fmt[3], readers, fmt[1], fmt[2], scan$6, (function(c$3){\n                      return function (param) {\n                        return Caml_format.caml_int32_of_string(token_int_literal(c$3, param));\n                      }\n                      }(c$3)));\n        case 6 : \n            var c$4 = CamlinternalFormat.char_of_iconv(fmt[0]);\n            var scan$7 = (function(c$4){\n            return function scan$7(width, param, ib) {\n              return scan_int_conv(c$4, width, ib);\n            }\n            }(c$4));\n            return pad_prec_scanf(ib, fmt[3], readers, fmt[1], fmt[2], scan$7, (function(c$4){\n                      return function (param) {\n                        return Caml_format.caml_nativeint_of_string(token_int_literal(c$4, param));\n                      }\n                      }(c$4)));\n        case 7 : \n            var c$5 = CamlinternalFormat.char_of_iconv(fmt[0]);\n            var scan$8 = (function(c$5){\n            return function scan$8(width, param, ib) {\n              return scan_int_conv(c$5, width, ib);\n            }\n            }(c$5));\n            return pad_prec_scanf(ib, fmt[3], readers, fmt[1], fmt[2], scan$8, (function(c$5){\n                      return function (param) {\n                        return Caml_format.caml_int64_of_string(token_int_literal(c$5, param));\n                      }\n                      }(c$5)));\n        case 8 : \n            if (fmt[0] >= 15) {\n              return pad_prec_scanf(ib, fmt[3], readers, fmt[1], fmt[2], scan_caml_float, token_float);\n            } else {\n              return pad_prec_scanf(ib, fmt[3], readers, fmt[1], fmt[2], scan_float, token_float);\n            }\n        case 9 : \n            scan_bool(ib);\n            var b = token_bool(ib);\n            return /* Cons */[\n                    b,\n                    make_scanf(ib, fmt[0], readers)\n                  ];\n        case 10 : \n            if (end_of_input(ib)) {\n              _fmt = fmt[0];\n              continue ;\n            } else {\n              throw [\n                    Scan_failure,\n                    \"end of input not found\"\n                  ];\n            }\n        case 11 : \n            var f = function (param) {\n              return check_char(ib, param);\n            };\n            Bytes.iter(f, Caml_string.bytes_of_string(fmt[0]));\n            _fmt = fmt[1];\n            continue ;\n        case 12 : \n            check_char(ib, fmt[0]);\n            _fmt = fmt[1];\n            continue ;\n        case 13 : \n            scan_caml_string(width_of_pad_opt(fmt[0]), ib);\n            var s = token(ib);\n            var fmt$1;\n            try {\n              fmt$1 = CamlinternalFormat.format_of_string_fmtty(s, fmt[1]);\n            }\n            catch (raw_exn){\n              var exn = Js_exn.internalToOCamlException(raw_exn);\n              if (exn[0] === Caml_builtin_exceptions.failure) {\n                throw [\n                      Scan_failure,\n                      exn[1]\n                    ];\n              } else {\n                throw exn;\n              }\n            }\n            return /* Cons */[\n                    fmt$1,\n                    make_scanf(ib, fmt[2], readers)\n                  ];\n        case 14 : \n            var fmtty = fmt[1];\n            scan_caml_string(width_of_pad_opt(fmt[0]), ib);\n            var s$1 = token(ib);\n            var match$2;\n            try {\n              var match$3 = CamlinternalFormat.fmt_ebb_of_string(undefined, s$1);\n              var match$4 = CamlinternalFormat.fmt_ebb_of_string(undefined, s$1);\n              match$2 = /* tuple */[\n                CamlinternalFormat.type_format(match$3[0], CamlinternalFormatBasics.erase_rel(fmtty)),\n                CamlinternalFormat.type_format(match$4[0], CamlinternalFormatBasics.erase_rel(CamlinternalFormat.symm(fmtty)))\n              ];\n            }\n            catch (raw_exn$1){\n              var exn$1 = Js_exn.internalToOCamlException(raw_exn$1);\n              if (exn$1[0] === Caml_builtin_exceptions.failure) {\n                throw [\n                      Scan_failure,\n                      exn$1[1]\n                    ];\n              } else {\n                throw exn$1;\n              }\n            }\n            return /* Cons */[\n                    /* Format */[\n                      match$2[0],\n                      s$1\n                    ],\n                    make_scanf(ib, CamlinternalFormatBasics.concat_fmt(match$2[1], fmt[2]), readers)\n                  ];\n        case 15 : \n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"scanf: bad conversion \\\"%a\\\"\"\n                ];\n        case 16 : \n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"scanf: bad conversion \\\"%t\\\"\"\n                ];\n        case 17 : \n            var s$2 = CamlinternalFormat.string_of_formatting_lit(fmt[0]);\n            var f$1 = function (param) {\n              return check_char(ib, param);\n            };\n            Bytes.iter(f$1, Caml_string.bytes_of_string(s$2));\n            _fmt = fmt[1];\n            continue ;\n        case 18 : \n            var match$5 = fmt[0];\n            check_char(ib, /* \"@\" */64);\n            if (match$5.tag) {\n              check_char(ib, /* \"[\" */91);\n              _fmt = CamlinternalFormatBasics.concat_fmt(match$5[0][0], fmt[1]);\n              continue ;\n            } else {\n              check_char(ib, /* \"{\" */123);\n              _fmt = CamlinternalFormatBasics.concat_fmt(match$5[0][0], fmt[1]);\n              continue ;\n            }\n        case 19 : \n            var x = Curry._1(readers[0], ib);\n            return /* Cons */[\n                    x,\n                    make_scanf(ib, fmt[0], readers[1])\n                  ];\n        case 20 : \n            var rest$1 = fmt[2];\n            var char_set = fmt[1];\n            var width_opt = fmt[0];\n            var exit$1 = 0;\n            if (typeof rest$1 === \"number\" || rest$1.tag !== 17) {\n              exit$1 = 1;\n            } else {\n              var match$6 = stopper_of_formatting_lit(rest$1[0]);\n              var width = width_of_pad_opt(width_opt);\n              scan_chars_in_char_set(char_set, match$6[0], width, ib);\n              var s$3 = token(ib);\n              var str_rest_000$1 = match$6[1];\n              var str_rest_001$1 = rest$1[1];\n              var str_rest$1 = /* String_literal */Block.__(11, [\n                  str_rest_000$1,\n                  str_rest_001$1\n                ]);\n              return /* Cons */[\n                      s$3,\n                      make_scanf(ib, str_rest$1, readers)\n                    ];\n            }\n            if (exit$1 === 1) {\n              var width$1 = width_of_pad_opt(width_opt);\n              scan_chars_in_char_set(char_set, undefined, width$1, ib);\n              var s$4 = token(ib);\n              return /* Cons */[\n                      s$4,\n                      make_scanf(ib, rest$1, readers)\n                    ];\n            }\n            break;\n        case 21 : \n            var count = get_counter(ib, fmt[0]);\n            return /* Cons */[\n                    count,\n                    make_scanf(ib, fmt[1], readers)\n                  ];\n        case 22 : \n            var c$6 = checked_peek_char(ib);\n            return /* Cons */[\n                    c$6,\n                    make_scanf(ib, fmt[0], readers)\n                  ];\n        case 23 : \n            var match$7 = CamlinternalFormat.param_format_of_ignored_format(fmt[0], fmt[1]);\n            var match$8 = make_scanf(ib, match$7[0], readers);\n            if (match$8) {\n              return match$8[1];\n            } else {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    /* tuple */[\n                      \"scanf.ml\",\n                      1258,\n                      13\n                    ]\n                  ];\n            }\n        case 24 : \n            throw [\n                  Caml_builtin_exceptions.invalid_argument,\n                  \"scanf: bad conversion \\\"%?\\\" (custom converter)\"\n                ];\n        \n      }\n    }\n  };\n}\n\nfunction pad_prec_scanf(ib, fmt, readers, pad, prec, scan, token) {\n  if (typeof pad === \"number\") {\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"scanf: bad conversion \\\"%*\\\"\"\n            ];\n      } else {\n        Curry._3(scan, Pervasives.max_int, Pervasives.max_int, ib);\n        var x = Curry._1(token, ib);\n        return /* Cons */[\n                x,\n                make_scanf(ib, fmt, readers)\n              ];\n      }\n    } else {\n      Curry._3(scan, Pervasives.max_int, prec[0], ib);\n      var x$1 = Curry._1(token, ib);\n      return /* Cons */[\n              x$1,\n              make_scanf(ib, fmt, readers)\n            ];\n    }\n  } else if (pad.tag) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"scanf: bad conversion \\\"%*\\\"\"\n        ];\n  } else if (pad[0] !== 0) {\n    var w = pad[1];\n    if (typeof prec === \"number\") {\n      if (prec !== 0) {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"scanf: bad conversion \\\"%*\\\"\"\n            ];\n      } else {\n        Curry._3(scan, w, Pervasives.max_int, ib);\n        var x$2 = Curry._1(token, ib);\n        return /* Cons */[\n                x$2,\n                make_scanf(ib, fmt, readers)\n              ];\n      }\n    } else {\n      Curry._3(scan, w, prec[0], ib);\n      var x$3 = Curry._1(token, ib);\n      return /* Cons */[\n              x$3,\n              make_scanf(ib, fmt, readers)\n            ];\n    }\n  } else {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"scanf: bad conversion \\\"%-\\\"\"\n        ];\n  }\n}\n\nfunction kscanf(ib, ef, param) {\n  var str = param[1];\n  var fmt = param[0];\n  var k = function (readers, f) {\n    $$Buffer.reset(ib[/* tokbuf */7]);\n    var match;\n    try {\n      match = /* Args */Block.__(0, [make_scanf(ib, fmt, readers)]);\n    }\n    catch (raw_exc){\n      var exc = Js_exn.internalToOCamlException(raw_exc);\n      if (exc[0] === Scan_failure || exc[0] === Caml_builtin_exceptions.failure || exc === Caml_builtin_exceptions.end_of_file) {\n        match = /* Exc */Block.__(1, [exc]);\n      } else if (exc[0] === Caml_builtin_exceptions.invalid_argument) {\n        var s = exc[1] + (\" in format \\\"\" + ($$String.escaped(str) + \"\\\"\"));\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              s\n            ];\n      } else {\n        throw exc;\n      }\n    }\n    if (match.tag) {\n      return Curry._2(ef, ib, match[0]);\n    } else {\n      var _f = f;\n      var _args = match[0];\n      while(true) {\n        var args = _args;\n        var f$1 = _f;\n        if (args) {\n          _args = args[1];\n          _f = Curry._1(f$1, args[0]);\n          continue ;\n        } else {\n          return f$1;\n        }\n      };\n    }\n  };\n  return take_format_readers(k, fmt);\n}\n\nfunction ksscanf(s, ef, fmt) {\n  return kscanf(from_string(s), ef, fmt);\n}\n\nfunction kfscanf(ic, ef, fmt) {\n  return kscanf(memo_from_ic(scan_raise_at_end, ic), ef, fmt);\n}\n\nfunction bscanf(ib, fmt) {\n  return kscanf(ib, scanf_bad_input, fmt);\n}\n\nfunction fscanf(ic, fmt) {\n  return kscanf(memo_from_ic(scan_raise_at_end, ic), scanf_bad_input, fmt);\n}\n\nfunction sscanf(s, fmt) {\n  return kscanf(from_string(s), scanf_bad_input, fmt);\n}\n\nfunction scanf(fmt) {\n  return kscanf(stdin, scanf_bad_input, fmt);\n}\n\nfunction bscanf_format(ib, format, f) {\n  scan_caml_string(Pervasives.max_int, ib);\n  var str = token(ib);\n  var tmp;\n  try {\n    tmp = CamlinternalFormat.format_of_string_format(str, format);\n  }\n  catch (raw_exn){\n    var exn = Js_exn.internalToOCamlException(raw_exn);\n    if (exn[0] === Caml_builtin_exceptions.failure) {\n      throw [\n            Scan_failure,\n            exn[1]\n          ];\n    } else {\n      throw exn;\n    }\n  }\n  return Curry._1(f, tmp);\n}\n\nfunction sscanf_format(s, format, f) {\n  return bscanf_format(from_string(s), format, f);\n}\n\nfunction string_to_String(s) {\n  var l = s.length;\n  var b = $$Buffer.create(l + 2 | 0);\n  $$Buffer.add_char(b, /* \"\\\"\" */34);\n  for(var i = 0 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n    var c = Caml_string.get(s, i);\n    if (c === /* \"\\\"\" */34) {\n      $$Buffer.add_char(b, /* \"\\\\\" */92);\n    }\n    $$Buffer.add_char(b, c);\n  }\n  $$Buffer.add_char(b, /* \"\\\"\" */34);\n  return $$Buffer.contents(b);\n}\n\nfunction format_from_string(s, fmt) {\n  return sscanf_format(string_to_String(s), fmt, (function (x) {\n                return x;\n              }));\n}\n\nfunction unescaped(s) {\n  return Curry._1(sscanf(\"\\\"\" + (s + \"\\\"\"), /* Format */[\n                  /* Caml_string */Block.__(3, [\n                      /* No_padding */0,\n                      /* Flush */Block.__(10, [/* End_of_format */0])\n                    ]),\n                  \"%S%!\"\n                ]), (function (x) {\n                return x;\n              }));\n}\n\nvar Scanning = [\n  stdin,\n  open_in,\n  open_in_bin,\n  close_in,\n  open_in,\n  open_in_bin,\n  from_string,\n  from_function,\n  from_channel,\n  end_of_input,\n  beginning_of_input,\n  name_of_input,\n  stdin\n];\n\nexports.Scanning = Scanning;\nexports.Scan_failure = Scan_failure;\nexports.bscanf = bscanf;\nexports.fscanf = fscanf;\nexports.sscanf = sscanf;\nexports.scanf = scanf;\nexports.kscanf = kscanf;\nexports.ksscanf = ksscanf;\nexports.kfscanf = kfscanf;\nexports.bscanf_format = bscanf_format;\nexports.sscanf_format = sscanf_format;\nexports.format_from_string = format_from_string;\nexports.unescaped = unescaped;\n/* stdin Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/scanf.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/scanf.js");
},
d: {"./list.js":"NM$$bsb$$_$$native$lib$js$list","./block.js":"NM$$bsb$$_$$native$lib$js$block","./bytes.js":"NM$$bsb$$_$$native$lib$js$bytes","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./buffer.js":"NM$$bsb$$_$$native$lib$js$buffer","./js_exn.js":"NM$$bsb$$_$$native$lib$js$js_exn","./printf.js":"NM$$bsb$$_$$native$lib$js$printf","./string.js":"NM$$bsb$$_$$native$lib$js$string","./caml_bytes.js":"NM$$bsb$$_$$native$lib$js$caml_bytes","./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","./caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions","./camlinternalFormat.js":"NM$$bsb$$_$$native$lib$js$camlinternalFormat","./caml_missing_polyfill.js":"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions","./camlinternalFormatBasics.js":"NM$$bsb$$_$$native$lib$js$camlinternalFormatBasics"}
},
"NM$$bsb$$_$$native$lib$js$js_primitive":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nvar undefinedHeader = /* array */[];\n\nfunction some(x) {\n  if (x === undefined) {\n    var block = /* tuple */[\n      undefinedHeader,\n      0\n    ];\n    block.tag = 256;\n    return block;\n  } else if (x !== null && x[0] === undefinedHeader) {\n    var nid = x[1] + 1 | 0;\n    var block$1 = /* tuple */[\n      undefinedHeader,\n      nid\n    ];\n    block$1.tag = 256;\n    return block$1;\n  } else {\n    return x;\n  }\n}\n\nfunction nullable_to_opt(x) {\n  if (x === null || x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction undefined_to_opt(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction null_to_opt(x) {\n  if (x === null) {\n    return undefined;\n  } else {\n    return some(x);\n  }\n}\n\nfunction valFromOption(x) {\n  if (x !== null && x[0] === undefinedHeader) {\n    var depth = x[1];\n    if (depth === 0) {\n      return undefined;\n    } else {\n      return /* tuple */[\n              undefinedHeader,\n              depth - 1 | 0\n            ];\n    }\n  } else {\n    return x;\n  }\n}\n\nfunction option_get(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x);\n  }\n}\n\nfunction option_get_unwrap(x) {\n  if (x === undefined) {\n    return undefined;\n  } else {\n    return valFromOption(x)[1];\n  }\n}\n\nexports.nullable_to_opt = nullable_to_opt;\nexports.undefined_to_opt = undefined_to_opt;\nexports.null_to_opt = null_to_opt;\nexports.valFromOption = valFromOption;\nexports.some = some;\nexports.option_get = option_get;\nexports.option_get_unwrap = option_get_unwrap;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/js_primitive.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/js_primitive.js");
},
d: {}
},
"NM$$rex$$_$$json$lib$js$src$Json":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Block = __fastpack_require__(\"bsb-native/lib/js/block.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Scanf = __fastpack_require__(\"bsb-native/lib/js/scanf.js\");\nvar $$Buffer = __fastpack_require__(\"bsb-native/lib/js/buffer.js\");\nvar Printf = __fastpack_require__(\"bsb-native/lib/js/printf.js\");\nvar $$String = __fastpack_require__(\"bsb-native/lib/js/string.js\");\nvar Pervasives = __fastpack_require__(\"bsb-native/lib/js/pervasives.js\");\nvar Caml_format = __fastpack_require__(\"bsb-native/lib/js/caml_format.js\");\nvar Caml_string = __fastpack_require__(\"bsb-native/lib/js/caml_string.js\");\nvar Js_primitive = __fastpack_require__(\"bsb-native/lib/js/js_primitive.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nfunction string_of_number(f) {\n  var s = Pervasives.string_of_float(f);\n  if (Caml_string.get(s, s.length - 1 | 0) === /* \".\" */46) {\n    return $$String.sub(s, 0, s.length - 1 | 0);\n  } else {\n    return s;\n  }\n}\n\nfunction $pipe$bang(o, d) {\n  if (o !== undefined) {\n    return Js_primitive.valFromOption(o);\n  } else {\n    return Pervasives.failwith(d);\n  }\n}\n\nfunction $pipe$unknown(o, d) {\n  if (o !== undefined) {\n    return Js_primitive.valFromOption(o);\n  } else {\n    return d;\n  }\n}\n\nfunction $pipe$unknown$great(o, fn) {\n  if (o !== undefined) {\n    return Curry._1(fn, Js_primitive.valFromOption(o));\n  }\n  \n}\n\nfunction $pipe$unknown$great$great(o, fn) {\n  if (o !== undefined) {\n    return Js_primitive.some(Curry._1(fn, Js_primitive.valFromOption(o)));\n  }\n  \n}\n\nfunction fold(o, d, f) {\n  if (o !== undefined) {\n    return Curry._1(f, Js_primitive.valFromOption(o));\n  } else {\n    return d;\n  }\n}\n\nvar Infix = /* module */[\n  /* |! */$pipe$bang,\n  /* |? */$pipe$unknown,\n  /* |?> */$pipe$unknown$great,\n  /* |?>> */$pipe$unknown$great$great,\n  /* fold */fold\n];\n\nfunction $$escape(text) {\n  var ln = text.length;\n  var buf = $$Buffer.create(ln);\n  var loop = function (_i) {\n    while(true) {\n      var i = _i;\n      if (i < ln) {\n        var c = Caml_string.get(text, i);\n        if (c !== 34) {\n          if (c !== 92) {\n            if (c >= 14) {\n              $$Buffer.add_char(buf, c);\n            } else {\n              switch (c) {\n                case 8 : \n                    $$Buffer.add_string(buf, \"\\\\b\");\n                    break;\n                case 9 : \n                    $$Buffer.add_string(buf, \"\\\\t\");\n                    break;\n                case 10 : \n                    $$Buffer.add_string(buf, \"\\\\n\");\n                    break;\n                case 0 : \n                case 1 : \n                case 2 : \n                case 3 : \n                case 4 : \n                case 5 : \n                case 6 : \n                case 7 : \n                case 11 : \n                    $$Buffer.add_char(buf, c);\n                    break;\n                case 12 : \n                    $$Buffer.add_string(buf, \"\\\\f\");\n                    break;\n                case 13 : \n                    $$Buffer.add_string(buf, \"\\\\r\");\n                    break;\n                \n              }\n            }\n          } else {\n            $$Buffer.add_string(buf, \"\\\\\\\\\");\n          }\n        } else {\n          $$Buffer.add_string(buf, \"\\\\\\\"\");\n        }\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return 0;\n      }\n    };\n  };\n  loop(0);\n  return $$Buffer.contents(buf);\n}\n\nfunction stringify(t) {\n  if (typeof t === \"number\") {\n    switch (t) {\n      case 0 : \n          return \"true\";\n      case 1 : \n          return \"false\";\n      case 2 : \n          return \"null\";\n      \n    }\n  } else {\n    switch (t.tag | 0) {\n      case 0 : \n          return \"\\\"\" + ($$escape(t[0]) + \"\\\"\");\n      case 1 : \n          return string_of_number(t[0]);\n      case 2 : \n          return \"[\" + ($$String.concat(\", \", List.map(stringify, t[0])) + \"]\");\n      case 3 : \n          return \"{\" + ($$String.concat(\", \", List.map((function (param) {\n                              return \"\\\"\" + ($$String.escaped(param[0]) + (\"\\\": \" + stringify(param[1])));\n                            }), t[0])) + \"}\");\n      \n    }\n  }\n}\n\nfunction unwrap(message, t) {\n  if (t !== undefined) {\n    return Js_primitive.valFromOption(t);\n  } else {\n    return Pervasives.failwith(message);\n  }\n}\n\nfunction split_by($staropt$star, is_delim, str) {\n  var keep_empty = $staropt$star !== undefined ? $staropt$star : false;\n  var len = str.length;\n  var _acc = /* [] */0;\n  var _last_pos = len;\n  var _pos = len - 1 | 0;\n  while(true) {\n    var pos = _pos;\n    var last_pos = _last_pos;\n    var acc = _acc;\n    if (pos === -1) {\n      if (last_pos === 0 && !keep_empty) {\n        return acc;\n      } else {\n        return /* :: */[\n                $$String.sub(str, 0, last_pos),\n                acc\n              ];\n      }\n    } else if (Curry._1(is_delim, Caml_string.get(str, pos))) {\n      var new_len = (last_pos - pos | 0) - 1 | 0;\n      if (new_len !== 0 || keep_empty) {\n        var v = $$String.sub(str, pos + 1 | 0, new_len);\n        _pos = pos - 1 | 0;\n        _last_pos = pos;\n        _acc = /* :: */[\n          v,\n          acc\n        ];\n        continue ;\n      } else {\n        _pos = pos - 1 | 0;\n        _last_pos = pos;\n        continue ;\n      }\n    } else {\n      _pos = pos - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction fail(text, pos, message) {\n  var pre = $$String.sub(text, 0, pos);\n  var lines = split_by(undefined, (function (c) {\n          return c === /* \"\\n\" */10;\n        }), pre);\n  var count = List.length(lines);\n  var match = count > 0;\n  var last = match ? List.nth(lines, count - 1 | 0) : \"\";\n  var col = last.length + 1 | 0;\n  var line = List.length(lines);\n  return Pervasives.failwith(Curry._4(Printf.sprintf(/* Format */[\n                      /* String_literal */Block.__(11, [\n                          \"Error \\\"\",\n                          /* String */Block.__(2, [\n                              /* No_padding */0,\n                              /* String_literal */Block.__(11, [\n                                  \"\\\" at \",\n                                  /* Int */Block.__(4, [\n                                      /* Int_d */0,\n                                      /* No_padding */0,\n                                      /* No_precision */0,\n                                      /* Char_literal */Block.__(12, [\n                                          /* \":\" */58,\n                                          /* Int */Block.__(4, [\n                                              /* Int_d */0,\n                                              /* No_padding */0,\n                                              /* No_precision */0,\n                                              /* String_literal */Block.__(11, [\n                                                  \" -> \",\n                                                  /* String */Block.__(2, [\n                                                      /* No_padding */0,\n                                                      /* Char_literal */Block.__(12, [\n                                                          /* \"\\n\" */10,\n                                                          /* End_of_format */0\n                                                        ])\n                                                    ])\n                                                ])\n                                            ])\n                                        ])\n                                    ])\n                                ])\n                            ])\n                        ]),\n                      \"Error \\\"%s\\\" at %d:%d -> %s\\n\"\n                    ]), message, line, col, last));\n}\n\nfunction skipToNewline(text, _pos) {\n  while(true) {\n    var pos = _pos;\n    if (pos >= text.length) {\n      return pos;\n    } else if (Caml_string.get(text, pos) === /* \"\\n\" */10) {\n      return pos + 1 | 0;\n    } else {\n      _pos = pos + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction stringTail(text) {\n  var len = text.length;\n  if (len > 1) {\n    return $$String.sub(text, 1, len - 1 | 0);\n  } else {\n    return \"\";\n  }\n}\n\nfunction skipToCloseMultilineComment(text, _pos) {\n  while(true) {\n    var pos = _pos;\n    if ((pos + 1 | 0) >= text.length) {\n      return Pervasives.failwith(\"Unterminated comment\");\n    } else if (Caml_string.get(text, pos) === /* \"*\" */42 && Caml_string.get(text, pos + 1 | 0) === /* \"/\" */47) {\n      return pos + 2 | 0;\n    } else {\n      _pos = pos + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction skipWhite(text, _pos) {\n  while(true) {\n    var pos = _pos;\n    if (pos < text.length && (Caml_string.get(text, pos) === /* \" \" */32 || Caml_string.get(text, pos) === /* \"\\t\" */9 || Caml_string.get(text, pos) === /* \"\\n\" */10 || Caml_string.get(text, pos) === /* \"\\r\" */13)) {\n      _pos = pos + 1 | 0;\n      continue ;\n    } else {\n      return pos;\n    }\n  };\n}\n\nfunction parseString(text, pos) {\n  var buffer = $$Buffer.create(text.length);\n  var ln = text.length;\n  var loop = function (_i) {\n    while(true) {\n      var i = _i;\n      var match = i >= ln;\n      if (match) {\n        return fail(text, i, \"Unterminated string\");\n      } else {\n        var c = Caml_string.get(text, i);\n        if (c !== 34) {\n          if (c !== 92) {\n            $$Buffer.add_char(buffer, c);\n            _i = i + 1 | 0;\n            continue ;\n          } else {\n            var match$1 = (i + 1 | 0) >= ln;\n            if (match$1) {\n              return fail(text, i, \"Unterminated string\");\n            } else {\n              var match$2 = Caml_string.get(text, i + 1 | 0);\n              if (match$2 !== 47) {\n                if (match$2 !== 102) {\n                  $$Buffer.add_string(buffer, Scanf.unescaped($$String.sub(text, i, 2)));\n                  _i = i + 2 | 0;\n                  continue ;\n                } else {\n                  $$Buffer.add_char(buffer, /* \"\\012\" */12);\n                  _i = i + 2 | 0;\n                  continue ;\n                }\n              } else {\n                $$Buffer.add_char(buffer, /* \"/\" */47);\n                _i = i + 2 | 0;\n                continue ;\n              }\n            }\n          }\n        } else {\n          return i + 1 | 0;\n        }\n      }\n    };\n  };\n  var $$final = loop(pos);\n  return /* tuple */[\n          $$Buffer.contents(buffer),\n          $$final\n        ];\n}\n\nfunction parseDigits(text, pos) {\n  var len = text.length;\n  var _i = pos + 1 | 0;\n  while(true) {\n    var i = _i;\n    if (i >= len) {\n      return i;\n    } else {\n      var match = Caml_string.get(text, i);\n      if (match > 57 || match < 48) {\n        return i;\n      } else {\n        _i = i + 1 | 0;\n        continue ;\n      }\n    }\n  };\n}\n\nfunction parseWithDecimal(text, pos) {\n  var pos$1 = parseDigits(text, pos);\n  if (pos$1 < text.length && Caml_string.get(text, pos$1) === /* \".\" */46) {\n    return parseDigits(text, pos$1 + 1 | 0);\n  } else {\n    return pos$1;\n  }\n}\n\nfunction parseNumber(text, pos) {\n  var pos$1 = parseWithDecimal(text, pos);\n  var ln = text.length;\n  if (pos$1 < (ln - 1 | 0) && (Caml_string.get(text, pos$1) === /* \"E\" */69 || Caml_string.get(text, pos$1) === /* \"e\" */101)) {\n    var match = Caml_string.get(text, pos$1 + 1 | 0);\n    var pos$2 = match !== 43 && match !== 45 ? pos$1 + 1 | 0 : pos$1 + 2 | 0;\n    return parseDigits(text, pos$2);\n  } else {\n    return pos$1;\n  }\n}\n\nfunction parseNegativeNumber(text, pos) {\n  var $$final = Caml_string.get(text, pos) === /* \"-\" */45 ? parseNumber(text, pos + 1 | 0) : parseNumber(text, pos);\n  return /* tuple */[\n          /* Number */Block.__(1, [Caml_format.caml_float_of_string($$String.sub(text, pos, $$final - pos | 0))]),\n          $$final\n        ];\n}\n\nfunction expect($$char, text, pos, message) {\n  if (Caml_string.get(text, pos) !== $$char) {\n    return fail(text, pos, \"Expected: \" + message);\n  } else {\n    return pos + 1 | 0;\n  }\n}\n\nfunction parseComment(text, pos, next) {\n  if (Caml_string.get(text, pos) !== /* \"/\" */47) {\n    if (Caml_string.get(text, pos) === /* \"*\" */42) {\n      return Curry._2(next, text, skipToCloseMultilineComment(text, pos + 1 | 0));\n    } else {\n      return Pervasives.failwith(\"Invalid syntax\");\n    }\n  } else {\n    return Curry._2(next, text, skipToNewline(text, pos + 1 | 0));\n  }\n}\n\nfunction maybeSkipComment(text, pos) {\n  if (pos < text.length && Caml_string.get(text, pos) === /* \"/\" */47) {\n    if ((pos + 1 | 0) < text.length && Caml_string.get(text, pos + 1 | 0) === /* \"/\" */47) {\n      return skipToNewline(text, pos + 1 | 0);\n    } else if ((pos + 1 | 0) < text.length && Caml_string.get(text, pos + 1 | 0) === /* \"*\" */42) {\n      return skipToCloseMultilineComment(text, pos + 1 | 0);\n    } else {\n      return fail(text, pos, \"Invalid synatx\");\n    }\n  } else {\n    return pos;\n  }\n}\n\nfunction skip(text, _pos) {\n  while(true) {\n    var pos = _pos;\n    if (pos === text.length) {\n      return pos;\n    } else {\n      var n = maybeSkipComment(text, skipWhite(text, pos));\n      if (n > pos) {\n        _pos = n;\n        continue ;\n      } else {\n        return n;\n      }\n    }\n  };\n}\n\nfunction parse(text, _pos) {\n  while(true) {\n    var pos = _pos;\n    if (pos >= text.length) {\n      return fail(text, pos, \"Reached end of file without being done parsing\");\n    } else {\n      var match = Caml_string.get(text, pos);\n      var exit = 0;\n      if (match < 92) {\n        if (match >= 14) {\n          var switcher = match - 32 | 0;\n          if (switcher > 25 || switcher < 0) {\n            if (switcher >= 59) {\n              return parseArray(text, pos + 1 | 0);\n            } else {\n              return fail(text, pos, \"unexpected character\");\n            }\n          } else if (switcher >= 16) {\n            return parseNegativeNumber(text, pos);\n          } else {\n            switch (switcher) {\n              case 0 : \n                  exit = 1;\n                  break;\n              case 2 : \n                  var match$1 = parseString(text, pos + 1 | 0);\n                  return /* tuple */[\n                          /* String */Block.__(0, [match$1[0]]),\n                          match$1[1]\n                        ];\n              case 13 : \n                  return parseNegativeNumber(text, pos);\n              case 1 : \n              case 3 : \n              case 4 : \n              case 5 : \n              case 6 : \n              case 7 : \n              case 8 : \n              case 9 : \n              case 10 : \n              case 11 : \n              case 12 : \n              case 14 : \n                  return fail(text, pos, \"unexpected character\");\n              case 15 : \n                  return parseComment(text, pos + 1 | 0, parse);\n              \n            }\n          }\n        } else if (match >= 11) {\n          if (match >= 13) {\n            exit = 1;\n          } else {\n            return fail(text, pos, \"unexpected character\");\n          }\n        } else if (match >= 9) {\n          exit = 1;\n        } else {\n          return fail(text, pos, \"unexpected character\");\n        }\n      } else if (match >= 111) {\n        if (match !== 116) {\n          if (match !== 123) {\n            return fail(text, pos, \"unexpected character\");\n          } else {\n            return parseObject(text, pos + 1 | 0);\n          }\n        } else if ($$String.sub(text, pos, 4) === \"true\") {\n          return /* tuple */[\n                  /* True */0,\n                  pos + 4 | 0\n                ];\n        } else {\n          return fail(text, pos, \"unexpected character\");\n        }\n      } else if (match !== 102) {\n        if (match >= 110 && $$String.sub(text, pos, 4) === \"null\") {\n          return /* tuple */[\n                  /* Null */2,\n                  pos + 4 | 0\n                ];\n        } else {\n          return fail(text, pos, \"unexpected character\");\n        }\n      } else if ($$String.sub(text, pos, 5) === \"false\") {\n        return /* tuple */[\n                /* False */1,\n                pos + 5 | 0\n              ];\n      } else {\n        return fail(text, pos, \"unexpected character\");\n      }\n      if (exit === 1) {\n        _pos = skipWhite(text, pos);\n        continue ;\n      }\n      \n    }\n  };\n}\n\nfunction parseArrayValue(text, pos) {\n  var pos$1 = skip(text, pos);\n  var match = parse(text, pos$1);\n  var value = match[0];\n  var pos$2 = skip(text, match[1]);\n  var match$1 = Caml_string.get(text, pos$2);\n  if (match$1 !== 44) {\n    if (match$1 !== 93) {\n      return fail(text, pos$2, \"unexpected character\");\n    } else {\n      return /* tuple */[\n              /* :: */[\n                value,\n                /* [] */0\n              ],\n              pos$2 + 1 | 0\n            ];\n    }\n  } else {\n    var pos$3 = skip(text, pos$2 + 1 | 0);\n    if (Caml_string.get(text, pos$3) === /* \"]\" */93) {\n      return /* tuple */[\n              /* :: */[\n                value,\n                /* [] */0\n              ],\n              pos$3 + 1 | 0\n            ];\n    } else {\n      var match$2 = parseArrayValue(text, pos$3);\n      return /* tuple */[\n              /* :: */[\n                value,\n                match$2[0]\n              ],\n              match$2[1]\n            ];\n    }\n  }\n}\n\nfunction parseArray(text, pos) {\n  var pos$1 = skip(text, pos);\n  var match = Caml_string.get(text, pos$1);\n  if (match !== 93) {\n    var match$1 = parseArrayValue(text, pos$1);\n    return /* tuple */[\n            /* Array */Block.__(2, [match$1[0]]),\n            match$1[1]\n          ];\n  } else {\n    return /* tuple */[\n            /* Array */Block.__(2, [/* [] */0]),\n            pos$1 + 1 | 0\n          ];\n  }\n}\n\nfunction parseObjectValue(text, pos) {\n  var pos$1 = skip(text, pos);\n  if (Caml_string.get(text, pos$1) !== /* \"\\\"\" */34) {\n    return fail(text, pos$1, \"Expected string\");\n  } else {\n    var match = parseString(text, pos$1 + 1 | 0);\n    var key = match[0];\n    var pos$2 = skip(text, match[1]);\n    var pos$3 = expect(/* \":\" */58, text, pos$2, \"Colon\");\n    var match$1 = parse(text, pos$3);\n    var value = match$1[0];\n    var pos$4 = skip(text, match$1[1]);\n    var match$2 = Caml_string.get(text, pos$4);\n    if (match$2 !== 44) {\n      if (match$2 !== 125) {\n        var match$3 = parseObjectValue(text, pos$4);\n        return /* tuple */[\n                /* :: */[\n                  /* tuple */[\n                    key,\n                    value\n                  ],\n                  match$3[0]\n                ],\n                match$3[1]\n              ];\n      } else {\n        return /* tuple */[\n                /* :: */[\n                  /* tuple */[\n                    key,\n                    value\n                  ],\n                  /* [] */0\n                ],\n                pos$4 + 1 | 0\n              ];\n      }\n    } else {\n      var pos$5 = skip(text, pos$4 + 1 | 0);\n      if (Caml_string.get(text, pos$5) === /* \"}\" */125) {\n        return /* tuple */[\n                /* :: */[\n                  /* tuple */[\n                    key,\n                    value\n                  ],\n                  /* [] */0\n                ],\n                pos$5 + 1 | 0\n              ];\n      } else {\n        var match$4 = parseObjectValue(text, pos$5);\n        return /* tuple */[\n                /* :: */[\n                  /* tuple */[\n                    key,\n                    value\n                  ],\n                  match$4[0]\n                ],\n                match$4[1]\n              ];\n      }\n    }\n  }\n}\n\nfunction parseObject(text, pos) {\n  var pos$1 = skip(text, pos);\n  if (Caml_string.get(text, pos$1) === /* \"}\" */125) {\n    return /* tuple */[\n            /* Object */Block.__(3, [/* [] */0]),\n            pos$1 + 1 | 0\n          ];\n  } else {\n    var match = parseObjectValue(text, pos$1);\n    return /* tuple */[\n            /* Object */Block.__(3, [match[0]]),\n            match[1]\n          ];\n  }\n}\n\nvar Parser = /* module */[\n  /* split_by */split_by,\n  /* fail */fail,\n  /* skipToNewline */skipToNewline,\n  /* stringTail */stringTail,\n  /* skipToCloseMultilineComment */skipToCloseMultilineComment,\n  /* skipWhite */skipWhite,\n  /* parseString */parseString,\n  /* parseDigits */parseDigits,\n  /* parseWithDecimal */parseWithDecimal,\n  /* parseNumber */parseNumber,\n  /* parseNegativeNumber */parseNegativeNumber,\n  /* expect */expect,\n  /* parseComment */parseComment,\n  /* maybeSkipComment */maybeSkipComment,\n  /* skip */skip,\n  /* parse */parse,\n  /* parseArrayValue */parseArrayValue,\n  /* parseArray */parseArray,\n  /* parseObjectValue */parseObjectValue,\n  /* parseObject */parseObject\n];\n\nfunction parse$1(text) {\n  var match = parse(text, 0);\n  var pos = skip(text, match[1]);\n  if (pos < text.length) {\n    return Pervasives.failwith(\"Extra data after parse finished: \" + $$String.sub(text, pos, text.length - pos | 0));\n  } else {\n    return match[0];\n  }\n}\n\nfunction bind(v, fn) {\n  if (v !== undefined) {\n    return Curry._1(fn, Js_primitive.valFromOption(v));\n  }\n  \n}\n\nfunction get(key, t) {\n  if (typeof t === \"number\" || t.tag !== 3) {\n    return undefined;\n  } else {\n    try {\n      return List.assoc(key, t[0]);\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        return undefined;\n      } else {\n        throw exn;\n      }\n    }\n  }\n}\n\nfunction nth(n, t) {\n  if (typeof t === \"number\" || t.tag !== 2) {\n    return undefined;\n  } else {\n    var items = t[0];\n    if (n < List.length(items)) {\n      return List.nth(items, n);\n    } else {\n      return undefined;\n    }\n  }\n}\n\nfunction string(t) {\n  if (typeof t === \"number\" || t.tag) {\n    return undefined;\n  } else {\n    return t[0];\n  }\n}\n\nfunction number(t) {\n  if (typeof t === \"number\" || t.tag !== 1) {\n    return undefined;\n  } else {\n    return t[0];\n  }\n}\n\nfunction array(t) {\n  if (typeof t === \"number\" || t.tag !== 2) {\n    return undefined;\n  } else {\n    return t[0];\n  }\n}\n\nfunction obj(t) {\n  if (typeof t === \"number\" || t.tag !== 3) {\n    return undefined;\n  } else {\n    return t[0];\n  }\n}\n\nfunction bool(t) {\n  if (typeof t === \"number\") {\n    switch (t) {\n      case 0 : \n          return true;\n      case 1 : \n          return false;\n      case 2 : \n          return undefined;\n      \n    }\n  }\n  \n}\n\nfunction $$null(t) {\n  if (typeof t === \"number\" && t >= 2) {\n    return /* () */0;\n  }\n  \n}\n\nfunction parsePath(_keyList, _t) {\n  while(true) {\n    var t = _t;\n    var keyList = _keyList;\n    if (keyList) {\n      var match = get(keyList[0], t);\n      if (match !== undefined) {\n        _t = match;\n        _keyList = keyList[1];\n        continue ;\n      } else {\n        return undefined;\n      }\n    } else {\n      return t;\n    }\n  };\n}\n\nfunction getPath(path, t) {\n  var keys = split_by(undefined, (function (c) {\n          return c === /* \".\" */46;\n        }), path);\n  return parsePath(keys, t);\n}\n\nexports.string_of_number = string_of_number;\nexports.Infix = Infix;\nexports.$$escape = $$escape;\nexports.stringify = stringify;\nexports.unwrap = unwrap;\nexports.Parser = Parser;\nexports.parse = parse$1;\nexports.bind = bind;\nexports.get = get;\nexports.nth = nth;\nexports.string = string;\nexports.number = number;\nexports.array = array;\nexports.obj = obj;\nexports.bool = bool;\nexports.$$null = $$null;\nexports.parsePath = parsePath;\nexports.getPath = getPath;\n/* Scanf Not a pure module */\n\n//# sourceURL=fpack:///node_modules/rex-json/lib/js/src/Json.js\n//# sourceURL=fpack:///node_modules/rex-json/lib/js/src/Json.js");
},
d: {"bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/block.js":"NM$$bsb$$_$$native$lib$js$block","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","bsb-native/lib/js/scanf.js":"NM$$bsb$$_$$native$lib$js$scanf","bsb-native/lib/js/buffer.js":"NM$$bsb$$_$$native$lib$js$buffer","bsb-native/lib/js/printf.js":"NM$$bsb$$_$$native$lib$js$printf","bsb-native/lib/js/string.js":"NM$$bsb$$_$$native$lib$js$string","bsb-native/lib/js/pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","bsb-native/lib/js/caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","bsb-native/lib/js/caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","bsb-native/lib/js/js_primitive.js":"NM$$bsb$$_$$native$lib$js$js_primitive","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$map":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Js_primitive = __fastpack_require__(\"./js_primitive.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction Make(funarg) {\n  var height = function (param) {\n    if (param) {\n      return param[4];\n    } else {\n      return 0;\n    }\n  };\n  var create = function (l, x, d, r) {\n    var hl = height(l);\n    var hr = height(r);\n    return /* Node */[\n            l,\n            x,\n            d,\n            r,\n            hl >= hr ? hl + 1 | 0 : hr + 1 | 0\n          ];\n  };\n  var singleton = function (x, d) {\n    return /* Node */[\n            /* Empty */0,\n            x,\n            d,\n            /* Empty */0,\n            1\n          ];\n  };\n  var bal = function (l, x, d, r) {\n    var hl = l ? l[4] : 0;\n    var hr = r ? r[4] : 0;\n    if (hl > (hr + 2 | 0)) {\n      if (l) {\n        var lr = l[3];\n        var ld = l[2];\n        var lv = l[1];\n        var ll = l[0];\n        if (height(ll) >= height(lr)) {\n          return create(ll, lv, ld, create(lr, x, d, r));\n        } else if (lr) {\n          return create(create(ll, lv, ld, lr[0]), lr[1], lr[2], create(lr[3], x, d, r));\n        } else {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"Map.bal\"\n              ];\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"Map.bal\"\n            ];\n      }\n    } else if (hr > (hl + 2 | 0)) {\n      if (r) {\n        var rr = r[3];\n        var rd = r[2];\n        var rv = r[1];\n        var rl = r[0];\n        if (height(rr) >= height(rl)) {\n          return create(create(l, x, d, rl), rv, rd, rr);\n        } else if (rl) {\n          return create(create(l, x, d, rl[0]), rl[1], rl[2], create(rl[3], rv, rd, rr));\n        } else {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"Map.bal\"\n              ];\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"Map.bal\"\n            ];\n      }\n    } else {\n      return /* Node */[\n              l,\n              x,\n              d,\n              r,\n              hl >= hr ? hl + 1 | 0 : hr + 1 | 0\n            ];\n    }\n  };\n  var is_empty = function (param) {\n    if (param) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var add = function (x, data, param) {\n    if (param) {\n      var r = param[3];\n      var d = param[2];\n      var v = param[1];\n      var l = param[0];\n      var c = Curry._2(funarg[/* compare */0], x, v);\n      if (c === 0) {\n        return /* Node */[\n                l,\n                x,\n                data,\n                r,\n                param[4]\n              ];\n      } else if (c < 0) {\n        return bal(add(x, data, l), v, d, r);\n      } else {\n        return bal(l, v, d, add(x, data, r));\n      }\n    } else {\n      return /* Node */[\n              /* Empty */0,\n              x,\n              data,\n              /* Empty */0,\n              1\n            ];\n    }\n  };\n  var find = function (x, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var c = Curry._2(funarg[/* compare */0], x, param[1]);\n        if (c === 0) {\n          return param[2];\n        } else {\n          _param = c < 0 ? param[0] : param[3];\n          continue ;\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n  };\n  var mem = function (x, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var c = Curry._2(funarg[/* compare */0], x, param[1]);\n        if (c === 0) {\n          return true;\n        } else {\n          _param = c < 0 ? param[0] : param[3];\n          continue ;\n        }\n      } else {\n        return false;\n      }\n    };\n  };\n  var min_binding = function (_param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var l = param[0];\n        if (l) {\n          _param = l;\n          continue ;\n        } else {\n          return /* tuple */[\n                  param[1],\n                  param[2]\n                ];\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n  };\n  var max_binding = function (_param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var r = param[3];\n        if (r) {\n          _param = r;\n          continue ;\n        } else {\n          return /* tuple */[\n                  param[1],\n                  param[2]\n                ];\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n  };\n  var remove_min_binding = function (param) {\n    if (param) {\n      var l = param[0];\n      if (l) {\n        return bal(remove_min_binding(l), param[1], param[2], param[3]);\n      } else {\n        return param[3];\n      }\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Map.remove_min_elt\"\n          ];\n    }\n  };\n  var remove = function (x, param) {\n    if (param) {\n      var r = param[3];\n      var d = param[2];\n      var v = param[1];\n      var l = param[0];\n      var c = Curry._2(funarg[/* compare */0], x, v);\n      if (c === 0) {\n        var t1 = l;\n        var t2 = r;\n        if (t1) {\n          if (t2) {\n            var match = min_binding(t2);\n            return bal(t1, match[0], match[1], remove_min_binding(t2));\n          } else {\n            return t1;\n          }\n        } else {\n          return t2;\n        }\n      } else if (c < 0) {\n        return bal(remove(x, l), v, d, r);\n      } else {\n        return bal(l, v, d, remove(x, r));\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var iter = function (f, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        iter(f, param[0]);\n        Curry._2(f, param[1], param[2]);\n        _param = param[3];\n        continue ;\n      } else {\n        return /* () */0;\n      }\n    };\n  };\n  var map = function (f, param) {\n    if (param) {\n      var l$prime = map(f, param[0]);\n      var d$prime = Curry._1(f, param[2]);\n      var r$prime = map(f, param[3]);\n      return /* Node */[\n              l$prime,\n              param[1],\n              d$prime,\n              r$prime,\n              param[4]\n            ];\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var mapi = function (f, param) {\n    if (param) {\n      var v = param[1];\n      var l$prime = mapi(f, param[0]);\n      var d$prime = Curry._2(f, v, param[2]);\n      var r$prime = mapi(f, param[3]);\n      return /* Node */[\n              l$prime,\n              v,\n              d$prime,\n              r$prime,\n              param[4]\n            ];\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var fold = function (f, _m, _accu) {\n    while(true) {\n      var accu = _accu;\n      var m = _m;\n      if (m) {\n        _accu = Curry._3(f, m[1], m[2], fold(f, m[0], accu));\n        _m = m[3];\n        continue ;\n      } else {\n        return accu;\n      }\n    };\n  };\n  var for_all = function (p, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        if (Curry._2(p, param[1], param[2]) && for_all(p, param[0])) {\n          _param = param[3];\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n  };\n  var exists = function (p, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        if (Curry._2(p, param[1], param[2]) || exists(p, param[0])) {\n          return true;\n        } else {\n          _param = param[3];\n          continue ;\n        }\n      } else {\n        return false;\n      }\n    };\n  };\n  var add_min_binding = function (k, v, param) {\n    if (param) {\n      return bal(add_min_binding(k, v, param[0]), param[1], param[2], param[3]);\n    } else {\n      return singleton(k, v);\n    }\n  };\n  var add_max_binding = function (k, v, param) {\n    if (param) {\n      return bal(param[0], param[1], param[2], add_max_binding(k, v, param[3]));\n    } else {\n      return singleton(k, v);\n    }\n  };\n  var join = function (l, v, d, r) {\n    if (l) {\n      if (r) {\n        var rh = r[4];\n        var lh = l[4];\n        if (lh > (rh + 2 | 0)) {\n          return bal(l[0], l[1], l[2], join(l[3], v, d, r));\n        } else if (rh > (lh + 2 | 0)) {\n          return bal(join(l, v, d, r[0]), r[1], r[2], r[3]);\n        } else {\n          return create(l, v, d, r);\n        }\n      } else {\n        return add_max_binding(v, d, l);\n      }\n    } else {\n      return add_min_binding(v, d, r);\n    }\n  };\n  var concat = function (t1, t2) {\n    if (t1) {\n      if (t2) {\n        var match = min_binding(t2);\n        return join(t1, match[0], match[1], remove_min_binding(t2));\n      } else {\n        return t1;\n      }\n    } else {\n      return t2;\n    }\n  };\n  var concat_or_join = function (t1, v, d, t2) {\n    if (d !== undefined) {\n      return join(t1, v, Js_primitive.valFromOption(d), t2);\n    } else {\n      return concat(t1, t2);\n    }\n  };\n  var split = function (x, param) {\n    if (param) {\n      var r = param[3];\n      var d = param[2];\n      var v = param[1];\n      var l = param[0];\n      var c = Curry._2(funarg[/* compare */0], x, v);\n      if (c === 0) {\n        return /* tuple */[\n                l,\n                Js_primitive.some(d),\n                r\n              ];\n      } else if (c < 0) {\n        var match = split(x, l);\n        return /* tuple */[\n                match[0],\n                match[1],\n                join(match[2], v, d, r)\n              ];\n      } else {\n        var match$1 = split(x, r);\n        return /* tuple */[\n                join(l, v, d, match$1[0]),\n                match$1[1],\n                match$1[2]\n              ];\n      }\n    } else {\n      return /* tuple */[\n              /* Empty */0,\n              undefined,\n              /* Empty */0\n            ];\n    }\n  };\n  var merge = function (f, s1, s2) {\n    var exit = 0;\n    if (s1) {\n      var v1 = s1[1];\n      if (s1[4] >= height(s2)) {\n        var match = split(v1, s2);\n        return concat_or_join(merge(f, s1[0], match[0]), v1, Curry._3(f, v1, Js_primitive.some(s1[2]), match[1]), merge(f, s1[3], match[2]));\n      } else {\n        exit = 1;\n      }\n    } else if (s2) {\n      exit = 1;\n    } else {\n      return /* Empty */0;\n    }\n    if (exit === 1) {\n      if (s2) {\n        var v2 = s2[1];\n        var match$1 = split(v2, s1);\n        return concat_or_join(merge(f, match$1[0], s2[0]), v2, Curry._3(f, v2, match$1[1], Js_primitive.some(s2[2])), merge(f, match$1[2], s2[3]));\n      } else {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"map.ml\",\n                270,\n                10\n              ]\n            ];\n      }\n    }\n    \n  };\n  var filter = function (p, param) {\n    if (param) {\n      var d = param[2];\n      var v = param[1];\n      var l$prime = filter(p, param[0]);\n      var pvd = Curry._2(p, v, d);\n      var r$prime = filter(p, param[3]);\n      if (pvd) {\n        return join(l$prime, v, d, r$prime);\n      } else {\n        return concat(l$prime, r$prime);\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var partition = function (p, param) {\n    if (param) {\n      var d = param[2];\n      var v = param[1];\n      var match = partition(p, param[0]);\n      var lf = match[1];\n      var lt = match[0];\n      var pvd = Curry._2(p, v, d);\n      var match$1 = partition(p, param[3]);\n      var rf = match$1[1];\n      var rt = match$1[0];\n      if (pvd) {\n        return /* tuple */[\n                join(lt, v, d, rt),\n                concat(lf, rf)\n              ];\n      } else {\n        return /* tuple */[\n                concat(lt, rt),\n                join(lf, v, d, rf)\n              ];\n      }\n    } else {\n      return /* tuple */[\n              /* Empty */0,\n              /* Empty */0\n            ];\n    }\n  };\n  var cons_enum = function (_m, _e) {\n    while(true) {\n      var e = _e;\n      var m = _m;\n      if (m) {\n        _e = /* More */[\n          m[1],\n          m[2],\n          m[3],\n          e\n        ];\n        _m = m[0];\n        continue ;\n      } else {\n        return e;\n      }\n    };\n  };\n  var compare = function (cmp, m1, m2) {\n    var _e1 = cons_enum(m1, /* End */0);\n    var _e2 = cons_enum(m2, /* End */0);\n    while(true) {\n      var e2 = _e2;\n      var e1 = _e1;\n      if (e1) {\n        if (e2) {\n          var c = Curry._2(funarg[/* compare */0], e1[0], e2[0]);\n          if (c !== 0) {\n            return c;\n          } else {\n            var c$1 = Curry._2(cmp, e1[1], e2[1]);\n            if (c$1 !== 0) {\n              return c$1;\n            } else {\n              _e2 = cons_enum(e2[2], e2[3]);\n              _e1 = cons_enum(e1[2], e1[3]);\n              continue ;\n            }\n          }\n        } else {\n          return 1;\n        }\n      } else if (e2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    };\n  };\n  var equal = function (cmp, m1, m2) {\n    var _e1 = cons_enum(m1, /* End */0);\n    var _e2 = cons_enum(m2, /* End */0);\n    while(true) {\n      var e2 = _e2;\n      var e1 = _e1;\n      if (e1) {\n        if (e2 && Curry._2(funarg[/* compare */0], e1[0], e2[0]) === 0 && Curry._2(cmp, e1[1], e2[1])) {\n          _e2 = cons_enum(e2[2], e2[3]);\n          _e1 = cons_enum(e1[2], e1[3]);\n          continue ;\n        } else {\n          return false;\n        }\n      } else if (e2) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n  };\n  var cardinal = function (param) {\n    if (param) {\n      return (cardinal(param[0]) + 1 | 0) + cardinal(param[3]) | 0;\n    } else {\n      return 0;\n    }\n  };\n  var bindings_aux = function (_accu, _param) {\n    while(true) {\n      var param = _param;\n      var accu = _accu;\n      if (param) {\n        _param = param[0];\n        _accu = /* :: */[\n          /* tuple */[\n            param[1],\n            param[2]\n          ],\n          bindings_aux(accu, param[3])\n        ];\n        continue ;\n      } else {\n        return accu;\n      }\n    };\n  };\n  var bindings = function (s) {\n    return bindings_aux(/* [] */0, s);\n  };\n  return [\n          /* Empty */0,\n          is_empty,\n          mem,\n          add,\n          singleton,\n          remove,\n          merge,\n          compare,\n          equal,\n          iter,\n          fold,\n          for_all,\n          exists,\n          filter,\n          partition,\n          cardinal,\n          bindings,\n          min_binding,\n          max_binding,\n          min_binding,\n          split,\n          find,\n          map,\n          mapi\n        ];\n}\n\nexports.Make = Make;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/map.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/map.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./js_primitive.js":"NM$$bsb$$_$$native$lib$js$js_primitive","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$array":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Js_exn = __fastpack_require__(\"./js_exn.js\");\nvar Caml_array = __fastpack_require__(\"./caml_array.js\");\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction init(l, f) {\n  if (l === 0) {\n    return /* array */[];\n  } else if (l < 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.init\"\n        ];\n  } else {\n    var res = Caml_array.caml_make_vect(l, Curry._1(f, 0));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      res[i] = Curry._1(f, i);\n    }\n    return res;\n  }\n}\n\nfunction make_matrix(sx, sy, init) {\n  var res = Caml_array.caml_make_vect(sx, /* array */[]);\n  for(var x = 0 ,x_finish = sx - 1 | 0; x <= x_finish; ++x){\n    res[x] = Caml_array.caml_make_vect(sy, init);\n  }\n  return res;\n}\n\nfunction copy(a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    return Caml_array.caml_array_sub(a, 0, l);\n  }\n}\n\nfunction append(a1, a2) {\n  var l1 = a1.length;\n  if (l1 === 0) {\n    return copy(a2);\n  } else if (a2.length === 0) {\n    return Caml_array.caml_array_sub(a1, 0, l1);\n  } else {\n    return a1.concat(a2);\n  }\n}\n\nfunction sub(a, ofs, len) {\n  if (len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.sub\"\n        ];\n  } else {\n    return Caml_array.caml_array_sub(a, ofs, len);\n  }\n}\n\nfunction fill(a, ofs, len, v) {\n  if (ofs < 0 || len < 0 || ofs > (a.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.fill\"\n        ];\n  } else {\n    for(var i = ofs ,i_finish = (ofs + len | 0) - 1 | 0; i <= i_finish; ++i){\n      a[i] = v;\n    }\n    return /* () */0;\n  }\n}\n\nfunction blit(a1, ofs1, a2, ofs2, len) {\n  if (len < 0 || ofs1 < 0 || ofs1 > (a1.length - len | 0) || ofs2 < 0 || ofs2 > (a2.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Array.blit\"\n        ];\n  } else {\n    return Caml_array.caml_array_blit(a1, ofs1, a2, ofs2, len);\n  }\n}\n\nfunction iter(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._1(f, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction map(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._1(f, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._1(f, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction iteri(f, a) {\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    Curry._2(f, i, a[i]);\n  }\n  return /* () */0;\n}\n\nfunction mapi(f, a) {\n  var l = a.length;\n  if (l === 0) {\n    return /* array */[];\n  } else {\n    var r = Caml_array.caml_make_vect(l, Curry._2(f, 0, a[0]));\n    for(var i = 1 ,i_finish = l - 1 | 0; i <= i_finish; ++i){\n      r[i] = Curry._2(f, i, a[i]);\n    }\n    return r;\n  }\n}\n\nfunction to_list(a) {\n  var _i = a.length - 1 | 0;\n  var _res = /* [] */0;\n  while(true) {\n    var res = _res;\n    var i = _i;\n    if (i < 0) {\n      return res;\n    } else {\n      _res = /* :: */[\n        a[i],\n        res\n      ];\n      _i = i - 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction list_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[1];\n      _accu = accu + 1 | 0;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction of_list(l) {\n  if (l) {\n    var a = Caml_array.caml_make_vect(list_length(0, l), l[0]);\n    var _i = 1;\n    var _param = l[1];\n    while(true) {\n      var param = _param;\n      var i = _i;\n      if (param) {\n        a[i] = param[0];\n        _param = param[1];\n        _i = i + 1 | 0;\n        continue ;\n      } else {\n        return a;\n      }\n    };\n  } else {\n    return /* array */[];\n  }\n}\n\nfunction fold_left(f, x, a) {\n  var r = x;\n  for(var i = 0 ,i_finish = a.length - 1 | 0; i <= i_finish; ++i){\n    r = Curry._2(f, r, a[i]);\n  }\n  return r;\n}\n\nfunction fold_right(f, a, x) {\n  var r = x;\n  for(var i = a.length - 1 | 0; i >= 0; --i){\n    r = Curry._2(f, a[i], r);\n  }\n  return r;\n}\n\nvar Bottom = Caml_exceptions.create(\"Array.Bottom\");\n\nfunction sort(cmp, a) {\n  var maxson = function (l, i) {\n    var i31 = ((i + i | 0) + i | 0) + 1 | 0;\n    var x = i31;\n    if ((i31 + 2 | 0) < l) {\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n        x = i31 + 1 | 0;\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, x), Caml_array.caml_array_get(a, i31 + 2 | 0)) < 0) {\n        x = i31 + 2 | 0;\n      }\n      return x;\n    } else if ((i31 + 1 | 0) < l && Curry._2(cmp, Caml_array.caml_array_get(a, i31), Caml_array.caml_array_get(a, i31 + 1 | 0)) < 0) {\n      return i31 + 1 | 0;\n    } else if (i31 < l) {\n      return i31;\n    } else {\n      throw [\n            Bottom,\n            i\n          ];\n    }\n  };\n  var trickle = function (l, i, e) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      var e$1 = e;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        if (Curry._2(cmp, Caml_array.caml_array_get(a, j), e$1) > 0) {\n          Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n          _i = j;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, i$1, e$1);\n        }\n      };\n    }\n    catch (raw_exn){\n      var exn = Js_exn.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return Caml_array.caml_array_set(a, exn[1], e);\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var bubble = function (l, i) {\n    try {\n      var l$1 = l;\n      var _i = i;\n      while(true) {\n        var i$1 = _i;\n        var j = maxson(l$1, i$1);\n        Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, j));\n        _i = j;\n        continue ;\n      };\n    }\n    catch (raw_exn){\n      var exn = Js_exn.internalToOCamlException(raw_exn);\n      if (exn[0] === Bottom) {\n        return exn[1];\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var trickleup = function (_i, e) {\n    while(true) {\n      var i = _i;\n      var father = (i - 1 | 0) / 3 | 0;\n      if (i === father) {\n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"array.ml\",\n                173,\n                4\n              ]\n            ];\n      }\n      if (Curry._2(cmp, Caml_array.caml_array_get(a, father), e) < 0) {\n        Caml_array.caml_array_set(a, i, Caml_array.caml_array_get(a, father));\n        if (father > 0) {\n          _i = father;\n          continue ;\n        } else {\n          return Caml_array.caml_array_set(a, 0, e);\n        }\n      } else {\n        return Caml_array.caml_array_set(a, i, e);\n      }\n    };\n  };\n  var l = a.length;\n  for(var i = ((l + 1 | 0) / 3 | 0) - 1 | 0; i >= 0; --i){\n    trickle(l, i, Caml_array.caml_array_get(a, i));\n  }\n  for(var i$1 = l - 1 | 0; i$1 >= 2; --i$1){\n    var e = Caml_array.caml_array_get(a, i$1);\n    Caml_array.caml_array_set(a, i$1, Caml_array.caml_array_get(a, 0));\n    trickleup(bubble(i$1, 0), e);\n  }\n  if (l > 1) {\n    var e$1 = Caml_array.caml_array_get(a, 1);\n    Caml_array.caml_array_set(a, 1, Caml_array.caml_array_get(a, 0));\n    return Caml_array.caml_array_set(a, 0, e$1);\n  } else {\n    return 0;\n  }\n}\n\nfunction stable_sort(cmp, a) {\n  var merge = function (src1ofs, src1len, src2, src2ofs, src2len, dst, dstofs) {\n    var src1r = src1ofs + src1len | 0;\n    var src2r = src2ofs + src2len | 0;\n    var _i1 = src1ofs;\n    var _s1 = Caml_array.caml_array_get(a, src1ofs);\n    var _i2 = src2ofs;\n    var _s2 = Caml_array.caml_array_get(src2, src2ofs);\n    var _d = dstofs;\n    while(true) {\n      var d = _d;\n      var s2 = _s2;\n      var i2 = _i2;\n      var s1 = _s1;\n      var i1 = _i1;\n      if (Curry._2(cmp, s1, s2) <= 0) {\n        Caml_array.caml_array_set(dst, d, s1);\n        var i1$1 = i1 + 1 | 0;\n        if (i1$1 < src1r) {\n          _d = d + 1 | 0;\n          _s1 = Caml_array.caml_array_get(a, i1$1);\n          _i1 = i1$1;\n          continue ;\n        } else {\n          return blit(src2, i2, dst, d + 1 | 0, src2r - i2 | 0);\n        }\n      } else {\n        Caml_array.caml_array_set(dst, d, s2);\n        var i2$1 = i2 + 1 | 0;\n        if (i2$1 < src2r) {\n          _d = d + 1 | 0;\n          _s2 = Caml_array.caml_array_get(src2, i2$1);\n          _i2 = i2$1;\n          continue ;\n        } else {\n          return blit(a, i1, dst, d + 1 | 0, src1r - i1 | 0);\n        }\n      }\n    };\n  };\n  var isortto = function (srcofs, dst, dstofs, len) {\n    for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n      var e = Caml_array.caml_array_get(a, srcofs + i | 0);\n      var j = (dstofs + i | 0) - 1 | 0;\n      while(j >= dstofs && Curry._2(cmp, Caml_array.caml_array_get(dst, j), e) > 0) {\n        Caml_array.caml_array_set(dst, j + 1 | 0, Caml_array.caml_array_get(dst, j));\n        j = j - 1 | 0;\n      };\n      Caml_array.caml_array_set(dst, j + 1 | 0, e);\n    }\n    return /* () */0;\n  };\n  var sortto = function (srcofs, dst, dstofs, len) {\n    if (len <= 5) {\n      return isortto(srcofs, dst, dstofs, len);\n    } else {\n      var l1 = len / 2 | 0;\n      var l2 = len - l1 | 0;\n      sortto(srcofs + l1 | 0, dst, dstofs + l1 | 0, l2);\n      sortto(srcofs, a, srcofs + l2 | 0, l1);\n      return merge(srcofs + l2 | 0, l1, dst, dstofs + l1 | 0, l2, dst, dstofs);\n    }\n  };\n  var l = a.length;\n  if (l <= 5) {\n    return isortto(0, a, 0, l);\n  } else {\n    var l1 = l / 2 | 0;\n    var l2 = l - l1 | 0;\n    var t = Caml_array.caml_make_vect(l2, Caml_array.caml_array_get(a, 0));\n    sortto(l1, t, 0, l2);\n    sortto(0, a, l2, l1);\n    return merge(l2, l1, t, 0, l2, a, 0);\n  }\n}\n\nvar create_matrix = make_matrix;\n\nvar concat = Caml_array.caml_array_concat;\n\nvar fast_sort = stable_sort;\n\nexports.init = init;\nexports.make_matrix = make_matrix;\nexports.create_matrix = create_matrix;\nexports.append = append;\nexports.concat = concat;\nexports.sub = sub;\nexports.copy = copy;\nexports.fill = fill;\nexports.blit = blit;\nexports.to_list = to_list;\nexports.of_list = of_list;\nexports.iter = iter;\nexports.map = map;\nexports.iteri = iteri;\nexports.mapi = mapi;\nexports.fold_left = fold_left;\nexports.fold_right = fold_right;\nexports.sort = sort;\nexports.stable_sort = stable_sort;\nexports.fast_sort = fast_sort;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/array.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/array.js");
},
d: {"./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./js_exn.js":"NM$$bsb$$_$$native$lib$js$js_exn","./caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array","./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$int32":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_format = __fastpack_require__(\"./caml_format.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\n\nfunction succ(n) {\n  return n + 1 | 0;\n}\n\nfunction pred(n) {\n  return n - 1 | 0;\n}\n\nfunction abs(n) {\n  if (n >= 0) {\n    return n;\n  } else {\n    return -n | 0;\n  }\n}\n\nfunction lognot(n) {\n  return n ^ -1;\n}\n\nfunction to_string(n) {\n  return Caml_format.caml_int32_format(\"%d\", n);\n}\n\nvar compare = Caml_primitive.caml_int32_compare;\n\nvar zero = 0;\n\nvar one = 1;\n\nvar minus_one = -1;\n\nvar max_int = 2147483647;\n\nvar min_int = -2147483648;\n\nexports.zero = zero;\nexports.one = one;\nexports.minus_one = minus_one;\nexports.succ = succ;\nexports.pred = pred;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lognot = lognot;\nexports.to_string = to_string;\nexports.compare = compare;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/int32.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/int32.js");
},
d: {"./caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive"}
},
"NM$$bsb$$_$$native$lib$js$int64":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_int64 = __fastpack_require__(\"./caml_int64.js\");\nvar Caml_format = __fastpack_require__(\"./caml_format.js\");\n\nfunction succ(n) {\n  return Caml_int64.add(n, /* int64 */[\n              /* hi */0,\n              /* lo */1\n            ]);\n}\n\nfunction pred(n) {\n  return Caml_int64.sub(n, /* int64 */[\n              /* hi */0,\n              /* lo */1\n            ]);\n}\n\nfunction abs(n) {\n  if (Caml_int64.ge(n, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ])) {\n    return n;\n  } else {\n    return Caml_int64.neg(n);\n  }\n}\n\nfunction lognot(n) {\n  return Caml_int64.xor(n, /* int64 */[\n              /* hi */-1,\n              /* lo */4294967295\n            ]);\n}\n\nfunction to_string(n) {\n  return Caml_format.caml_int64_format(\"%d\", n);\n}\n\nvar compare = Caml_int64.compare;\n\nvar zero = /* int64 */[\n  /* hi */0,\n  /* lo */0\n];\n\nvar one = /* int64 */[\n  /* hi */0,\n  /* lo */1\n];\n\nvar minus_one = /* int64 */[\n  /* hi */-1,\n  /* lo */4294967295\n];\n\nvar max_int = /* int64 */[\n  /* hi */2147483647,\n  /* lo */4294967295\n];\n\nvar min_int = /* int64 */[\n  /* hi */-2147483648,\n  /* lo */0\n];\n\nexports.zero = zero;\nexports.one = one;\nexports.minus_one = minus_one;\nexports.succ = succ;\nexports.pred = pred;\nexports.abs = abs;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lognot = lognot;\nexports.to_string = to_string;\nexports.compare = compare;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/int64.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/int64.js");
},
d: {"./caml_int64.js":"NM$$bsb$$_$$native$lib$js$caml_int64","./caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format"}
},
"NM$$bsb$$_$$native$lib$js$caml_md5":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nfunction cmn(q, a, b, x, s, t) {\n  var a$1 = ((a + q | 0) + x | 0) + t | 0;\n  return ((a$1 << s) | (a$1 >>> (32 - s | 0)) | 0) + b | 0;\n}\n\nfunction f(a, b, c, d, x, s, t) {\n  return cmn(b & c | (b ^ -1) & d, a, b, x, s, t);\n}\n\nfunction g(a, b, c, d, x, s, t) {\n  return cmn(b & d | c & (d ^ -1), a, b, x, s, t);\n}\n\nfunction h(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction i(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | d ^ -1), a, b, x, s, t);\n}\n\nfunction cycle(x, k) {\n  var a = x[0];\n  var b = x[1];\n  var c = x[2];\n  var d = x[3];\n  a = f(a, b, c, d, k[0], 7, -680876936);\n  d = f(d, a, b, c, k[1], 12, -389564586);\n  c = f(c, d, a, b, k[2], 17, 606105819);\n  b = f(b, c, d, a, k[3], 22, -1044525330);\n  a = f(a, b, c, d, k[4], 7, -176418897);\n  d = f(d, a, b, c, k[5], 12, 1200080426);\n  c = f(c, d, a, b, k[6], 17, -1473231341);\n  b = f(b, c, d, a, k[7], 22, -45705983);\n  a = f(a, b, c, d, k[8], 7, 1770035416);\n  d = f(d, a, b, c, k[9], 12, -1958414417);\n  c = f(c, d, a, b, k[10], 17, -42063);\n  b = f(b, c, d, a, k[11], 22, -1990404162);\n  a = f(a, b, c, d, k[12], 7, 1804603682);\n  d = f(d, a, b, c, k[13], 12, -40341101);\n  c = f(c, d, a, b, k[14], 17, -1502002290);\n  b = f(b, c, d, a, k[15], 22, 1236535329);\n  a = g(a, b, c, d, k[1], 5, -165796510);\n  d = g(d, a, b, c, k[6], 9, -1069501632);\n  c = g(c, d, a, b, k[11], 14, 643717713);\n  b = g(b, c, d, a, k[0], 20, -373897302);\n  a = g(a, b, c, d, k[5], 5, -701558691);\n  d = g(d, a, b, c, k[10], 9, 38016083);\n  c = g(c, d, a, b, k[15], 14, -660478335);\n  b = g(b, c, d, a, k[4], 20, -405537848);\n  a = g(a, b, c, d, k[9], 5, 568446438);\n  d = g(d, a, b, c, k[14], 9, -1019803690);\n  c = g(c, d, a, b, k[3], 14, -187363961);\n  b = g(b, c, d, a, k[8], 20, 1163531501);\n  a = g(a, b, c, d, k[13], 5, -1444681467);\n  d = g(d, a, b, c, k[2], 9, -51403784);\n  c = g(c, d, a, b, k[7], 14, 1735328473);\n  b = g(b, c, d, a, k[12], 20, -1926607734);\n  a = h(a, b, c, d, k[5], 4, -378558);\n  d = h(d, a, b, c, k[8], 11, -2022574463);\n  c = h(c, d, a, b, k[11], 16, 1839030562);\n  b = h(b, c, d, a, k[14], 23, -35309556);\n  a = h(a, b, c, d, k[1], 4, -1530992060);\n  d = h(d, a, b, c, k[4], 11, 1272893353);\n  c = h(c, d, a, b, k[7], 16, -155497632);\n  b = h(b, c, d, a, k[10], 23, -1094730640);\n  a = h(a, b, c, d, k[13], 4, 681279174);\n  d = h(d, a, b, c, k[0], 11, -358537222);\n  c = h(c, d, a, b, k[3], 16, -722521979);\n  b = h(b, c, d, a, k[6], 23, 76029189);\n  a = h(a, b, c, d, k[9], 4, -640364487);\n  d = h(d, a, b, c, k[12], 11, -421815835);\n  c = h(c, d, a, b, k[15], 16, 530742520);\n  b = h(b, c, d, a, k[2], 23, -995338651);\n  a = i(a, b, c, d, k[0], 6, -198630844);\n  d = i(d, a, b, c, k[7], 10, 1126891415);\n  c = i(c, d, a, b, k[14], 15, -1416354905);\n  b = i(b, c, d, a, k[5], 21, -57434055);\n  a = i(a, b, c, d, k[12], 6, 1700485571);\n  d = i(d, a, b, c, k[3], 10, -1894986606);\n  c = i(c, d, a, b, k[10], 15, -1051523);\n  b = i(b, c, d, a, k[1], 21, -2054922799);\n  a = i(a, b, c, d, k[8], 6, 1873313359);\n  d = i(d, a, b, c, k[15], 10, -30611744);\n  c = i(c, d, a, b, k[6], 15, -1560198380);\n  b = i(b, c, d, a, k[13], 21, 1309151649);\n  a = i(a, b, c, d, k[4], 6, -145523070);\n  d = i(d, a, b, c, k[11], 10, -1120210379);\n  c = i(c, d, a, b, k[2], 15, 718787259);\n  b = i(b, c, d, a, k[9], 21, -343485551);\n  x[0] = a + x[0] | 0;\n  x[1] = b + x[1] | 0;\n  x[2] = c + x[2] | 0;\n  x[3] = d + x[3] | 0;\n  return /* () */0;\n}\n\nvar state = /* array */[\n  1732584193,\n  -271733879,\n  -1732584194,\n  271733878\n];\n\nvar md5blk = /* array */[\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n];\n\nfunction caml_md5_string(s, start, len) {\n  var s$1 = s.slice(start, len);\n  var n = s$1.length;\n  state[0] = 1732584193;\n  state[1] = -271733879;\n  state[2] = -1732584194;\n  state[3] = 271733878;\n  for(var i = 0; i <= 15; ++i){\n    md5blk[i] = 0;\n  }\n  var i_end = n / 64 | 0;\n  for(var i$1 = 1; i$1 <= i_end; ++i$1){\n    for(var j = 0; j <= 15; ++j){\n      var k = ((i$1 << 6) - 64 | 0) + (j << 2) | 0;\n      md5blk[j] = ((s$1.charCodeAt(k) + (s$1.charCodeAt(k + 1 | 0) << 8) | 0) + (s$1.charCodeAt(k + 2 | 0) << 16) | 0) + (s$1.charCodeAt(k + 3 | 0) << 24) | 0;\n    }\n    cycle(state, md5blk);\n  }\n  var s_tail = s$1.slice((i_end << 6));\n  for(var kk = 0; kk <= 15; ++kk){\n    md5blk[kk] = 0;\n  }\n  var i_end$1 = s_tail.length - 1 | 0;\n  for(var i$2 = 0; i$2 <= i_end$1; ++i$2){\n    md5blk[i$2 / 4 | 0] = md5blk[i$2 / 4 | 0] | (s_tail.charCodeAt(i$2) << (i$2 % 4 << 3));\n  }\n  var i$3 = i_end$1 + 1 | 0;\n  md5blk[i$3 / 4 | 0] = md5blk[i$3 / 4 | 0] | (128 << (i$3 % 4 << 3));\n  if (i$3 > 55) {\n    cycle(state, md5blk);\n    for(var i$4 = 0; i$4 <= 15; ++i$4){\n      md5blk[i$4] = 0;\n    }\n  }\n  md5blk[14] = (n << 3);\n  cycle(state, md5blk);\n  return String.fromCharCode(state[0] & 255, (state[0] >> 8) & 255, (state[0] >> 16) & 255, (state[0] >> 24) & 255, state[1] & 255, (state[1] >> 8) & 255, (state[1] >> 16) & 255, (state[1] >> 24) & 255, state[2] & 255, (state[2] >> 8) & 255, (state[2] >> 16) & 255, (state[2] >> 24) & 255, state[3] & 255, (state[3] >> 8) & 255, (state[3] >> 16) & 255, (state[3] >> 24) & 255);\n}\n\nexports.caml_md5_string = caml_md5_string;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_md5.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_md5.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$digest":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Char = __fastpack_require__(\"./char.js\");\nvar $$String = __fastpack_require__(\"./string.js\");\nvar Caml_md5 = __fastpack_require__(\"./caml_md5.js\");\nvar Pervasives = __fastpack_require__(\"./pervasives.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_missing_polyfill = __fastpack_require__(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction string(str) {\n  return Caml_md5.caml_md5_string(str, 0, str.length);\n}\n\nfunction bytes(b) {\n  return string(Caml_string.bytes_to_string(b));\n}\n\nfunction substring(str, ofs, len) {\n  if (ofs < 0 || len < 0 || ofs > (str.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Digest.substring\"\n        ];\n  } else {\n    return Caml_md5.caml_md5_string(str, ofs, len);\n  }\n}\n\nfunction subbytes(b, ofs, len) {\n  return substring(Caml_string.bytes_to_string(b), ofs, len);\n}\n\nfunction file(filename) {\n  Pervasives.open_in_bin(filename);\n  var exit = 0;\n  var d;\n  try {\n    d = Caml_missing_polyfill.not_implemented(\"caml_md5_chan\");\n    exit = 1;\n  }\n  catch (e){\n    Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n    throw e;\n  }\n  if (exit === 1) {\n    Caml_missing_polyfill.not_implemented(\"caml_ml_close_channel\");\n    return d;\n  }\n  \n}\n\nvar output = Pervasives.output_string;\n\nfunction input(chan) {\n  return Pervasives.really_input_string(chan, 16);\n}\n\nfunction char_hex(n) {\n  return n + (\n          n < 10 ? /* \"0\" */48 : 87\n        ) | 0;\n}\n\nfunction to_hex(d) {\n  var result = Caml_string.caml_create_bytes(32);\n  for(var i = 0; i <= 15; ++i){\n    var x = Caml_string.get(d, i);\n    result[(i << 1)] = char_hex((x >>> 4));\n    result[(i << 1) + 1 | 0] = char_hex(x & 15);\n  }\n  return Caml_string.bytes_to_string(result);\n}\n\nfunction from_hex(s) {\n  if (s.length !== 32) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Digest.from_hex\"\n        ];\n  }\n  var digit = function (c) {\n    if (c >= 65) {\n      if (c >= 97) {\n        if (c >= 103) {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"Digest.from_hex\"\n              ];\n        } else {\n          return (c - /* \"a\" */97 | 0) + 10 | 0;\n        }\n      } else if (c >= 71) {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"Digest.from_hex\"\n            ];\n      } else {\n        return (c - /* \"A\" */65 | 0) + 10 | 0;\n      }\n    } else if (c > 57 || c < 48) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Digest.from_hex\"\n          ];\n    } else {\n      return c - /* \"0\" */48 | 0;\n    }\n  };\n  var $$byte = function (i) {\n    return (digit(Caml_string.get(s, i)) << 4) + digit(Caml_string.get(s, i + 1 | 0)) | 0;\n  };\n  var result = Caml_string.caml_create_bytes(16);\n  for(var i = 0; i <= 15; ++i){\n    result[i] = Char.chr($$byte((i << 1)));\n  }\n  return Caml_string.bytes_to_string(result);\n}\n\nvar compare = $$String.compare;\n\nexports.compare = compare;\nexports.string = string;\nexports.bytes = bytes;\nexports.substring = substring;\nexports.subbytes = subbytes;\nexports.file = file;\nexports.output = output;\nexports.input = input;\nexports.to_hex = to_hex;\nexports.from_hex = from_hex;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/digest.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/digest.js");
},
d: {"./char.js":"NM$$bsb$$_$$native$lib$js$char","./string.js":"NM$$bsb$$_$$native$lib$js$string","./caml_md5.js":"NM$$bsb$$_$$native$lib$js$caml_md5","./pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_missing_polyfill.js":"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$nativeint":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_format = __fastpack_require__(\"./caml_format.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\n\nfunction succ(n) {\n  return n + 1;\n}\n\nfunction pred(n) {\n  return n - 1;\n}\n\nfunction abs(n) {\n  if (n >= 0) {\n    return n;\n  } else {\n    return -n;\n  }\n}\n\nvar min_int = (-9007199254740991);\n\nvar max_int = (9007199254740991);\n\nfunction lognot(n) {\n  return n ^ -1;\n}\n\nfunction to_string(n) {\n  return Caml_format.caml_nativeint_format(\"%d\", n);\n}\n\nvar compare = Caml_primitive.caml_nativeint_compare;\n\nvar zero = 0;\n\nvar one = 1;\n\nvar minus_one = -1;\n\nvar size = 54;\n\nexports.zero = zero;\nexports.one = one;\nexports.minus_one = minus_one;\nexports.succ = succ;\nexports.pred = pred;\nexports.abs = abs;\nexports.size = size;\nexports.max_int = max_int;\nexports.min_int = min_int;\nexports.lognot = lognot;\nexports.to_string = to_string;\nexports.compare = compare;\n/* min_int Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/nativeint.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/nativeint.js");
},
d: {"./caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive"}
},
"NM$$bsb$$_$$native$lib$js$random":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar $$Array = __fastpack_require__(\"./array.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Int32 = __fastpack_require__(\"./int32.js\");\nvar Int64 = __fastpack_require__(\"./int64.js\");\nvar Digest = __fastpack_require__(\"./digest.js\");\nvar Caml_sys = __fastpack_require__(\"./caml_sys.js\");\nvar Nativeint = __fastpack_require__(\"./nativeint.js\");\nvar Caml_array = __fastpack_require__(\"./caml_array.js\");\nvar Caml_int64 = __fastpack_require__(\"./caml_int64.js\");\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction assign(st1, st2) {\n  $$Array.blit(st2[/* st */0], 0, st1[/* st */0], 0, 55);\n  st1[/* idx */1] = st2[/* idx */1];\n  return /* () */0;\n}\n\nfunction full_init(s, seed) {\n  var combine = function (accu, x) {\n    return Digest.string(accu + String(x));\n  };\n  var extract = function (d) {\n    return ((Caml_string.get(d, 0) + (Caml_string.get(d, 1) << 8) | 0) + (Caml_string.get(d, 2) << 16) | 0) + (Caml_string.get(d, 3) << 24) | 0;\n  };\n  var seed$1 = seed.length === 0 ? /* array */[0] : seed;\n  var l = seed$1.length;\n  for(var i = 0; i <= 54; ++i){\n    Caml_array.caml_array_set(s[/* st */0], i, i);\n  }\n  var accu = \"x\";\n  for(var i$1 = 0 ,i_finish = 54 + (\n      55 > l ? 55 : l\n    ) | 0; i$1 <= i_finish; ++i$1){\n    var j = i$1 % 55;\n    var k = i$1 % l;\n    accu = combine(accu, Caml_array.caml_array_get(seed$1, k));\n    Caml_array.caml_array_set(s[/* st */0], j, (Caml_array.caml_array_get(s[/* st */0], j) ^ extract(accu)) & 1073741823);\n  }\n  s[/* idx */1] = 0;\n  return /* () */0;\n}\n\nfunction make(seed) {\n  var result = /* record */[\n    /* st */Caml_array.caml_make_vect(55, 0),\n    /* idx */0\n  ];\n  full_init(result, seed);\n  return result;\n}\n\nfunction make_self_init(param) {\n  return make(Caml_sys.caml_sys_random_seed(/* () */0));\n}\n\nfunction copy(s) {\n  var result = /* record */[\n    /* st */Caml_array.caml_make_vect(55, 0),\n    /* idx */0\n  ];\n  assign(result, s);\n  return result;\n}\n\nfunction bits(s) {\n  s[/* idx */1] = (s[/* idx */1] + 1 | 0) % 55;\n  var curval = Caml_array.caml_array_get(s[/* st */0], s[/* idx */1]);\n  var newval = Caml_array.caml_array_get(s[/* st */0], (s[/* idx */1] + 24 | 0) % 55) + (curval ^ (curval >>> 25) & 31) | 0;\n  var newval30 = newval & 1073741823;\n  Caml_array.caml_array_set(s[/* st */0], s[/* idx */1], newval30);\n  return newval30;\n}\n\nfunction $$int(s, bound) {\n  if (bound > 1073741823 || bound <= 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Random.int\"\n        ];\n  } else {\n    var s$1 = s;\n    var n = bound;\n    while(true) {\n      var r = bits(s$1);\n      var v = r % n;\n      if ((r - v | 0) > ((1073741823 - n | 0) + 1 | 0)) {\n        continue ;\n      } else {\n        return v;\n      }\n    };\n  }\n}\n\nfunction int32(s, bound) {\n  if (bound <= 0) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Random.int32\"\n        ];\n  } else {\n    var s$1 = s;\n    var n = bound;\n    while(true) {\n      var b1 = bits(s$1);\n      var b2 = ((bits(s$1) & 1) << 30);\n      var r = b1 | b2;\n      var v = r % n;\n      if ((r - v | 0) > ((Int32.max_int - n | 0) + 1 | 0)) {\n        continue ;\n      } else {\n        return v;\n      }\n    };\n  }\n}\n\nfunction int64(s, bound) {\n  if (Caml_int64.le(bound, /* int64 */[\n          /* hi */0,\n          /* lo */0\n        ])) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Random.int64\"\n        ];\n  } else {\n    var s$1 = s;\n    var n = bound;\n    while(true) {\n      var b1 = Caml_int64.of_int32(bits(s$1));\n      var b2 = Caml_int64.lsl_(Caml_int64.of_int32(bits(s$1)), 30);\n      var b3 = Caml_int64.lsl_(Caml_int64.of_int32(bits(s$1) & 7), 60);\n      var r = Caml_int64.or_(b1, /* int64 */[\n            /* hi */b2[0] | b3[0],\n            /* lo */((b2[1] | b3[1]) >>> 0)\n          ]);\n      var v = Caml_int64.mod_(r, n);\n      if (Caml_int64.gt(Caml_int64.sub(r, v), Caml_int64.add(Caml_int64.sub(Int64.max_int, n), /* int64 */[\n                  /* hi */0,\n                  /* lo */1\n                ]))) {\n        continue ;\n      } else {\n        return v;\n      }\n    };\n  }\n}\n\nvar nativeint = Nativeint.size === 32 ? int32 : (function (s, bound) {\n      return int64(s, Caml_int64.of_int32(bound))[1] | 0;\n    });\n\nfunction rawfloat(s) {\n  var r1 = bits(s);\n  var r2 = bits(s);\n  return (r1 / 1073741824.0 + r2) / 1073741824.0;\n}\n\nfunction $$float(s, bound) {\n  return rawfloat(s) * bound;\n}\n\nfunction bool(s) {\n  return (bits(s) & 1) === 0;\n}\n\nvar $$default = /* record */[\n  /* st : array */[\n    987910699,\n    495797812,\n    364182224,\n    414272206,\n    318284740,\n    990407751,\n    383018966,\n    270373319,\n    840823159,\n    24560019,\n    536292337,\n    512266505,\n    189156120,\n    730249596,\n    143776328,\n    51606627,\n    140166561,\n    366354223,\n    1003410265,\n    700563762,\n    981890670,\n    913149062,\n    526082594,\n    1021425055,\n    784300257,\n    667753350,\n    630144451,\n    949649812,\n    48546892,\n    415514493,\n    258888527,\n    511570777,\n    89983870,\n    283659902,\n    308386020,\n    242688715,\n    482270760,\n    865188196,\n    1027664170,\n    207196989,\n    193777847,\n    619708188,\n    671350186,\n    149669678,\n    257044018,\n    87658204,\n    558145612,\n    183450813,\n    28133145,\n    901332182,\n    710253903,\n    510646120,\n    652377910,\n    409934019,\n    801085050\n  ],\n  /* idx */0\n];\n\nfunction bits$1(param) {\n  return bits($$default);\n}\n\nfunction $$int$1(bound) {\n  return $$int($$default, bound);\n}\n\nfunction int32$1(bound) {\n  return int32($$default, bound);\n}\n\nfunction nativeint$1(bound) {\n  return Curry._2(nativeint, $$default, bound);\n}\n\nfunction int64$1(bound) {\n  return int64($$default, bound);\n}\n\nfunction $$float$1(scale) {\n  return rawfloat($$default) * scale;\n}\n\nfunction bool$1(param) {\n  return bool($$default);\n}\n\nfunction full_init$1(seed) {\n  return full_init($$default, seed);\n}\n\nfunction init(seed) {\n  return full_init($$default, /* array */[seed]);\n}\n\nfunction self_init(param) {\n  return full_init$1(Caml_sys.caml_sys_random_seed(/* () */0));\n}\n\nfunction get_state(param) {\n  return copy($$default);\n}\n\nfunction set_state(s) {\n  return assign($$default, s);\n}\n\nvar State = [\n  make,\n  make_self_init,\n  copy,\n  bits,\n  $$int,\n  int32,\n  nativeint,\n  int64,\n  $$float,\n  bool\n];\n\nexports.init = init;\nexports.full_init = full_init$1;\nexports.self_init = self_init;\nexports.bits = bits$1;\nexports.$$int = $$int$1;\nexports.int32 = int32$1;\nexports.nativeint = nativeint$1;\nexports.int64 = int64$1;\nexports.$$float = $$float$1;\nexports.bool = bool$1;\nexports.State = State;\nexports.get_state = get_state;\nexports.set_state = set_state;\n/* Nativeint Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/random.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/random.js");
},
d: {"./array.js":"NM$$bsb$$_$$native$lib$js$array","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./int32.js":"NM$$bsb$$_$$native$lib$js$int32","./int64.js":"NM$$bsb$$_$$native$lib$js$int64","./digest.js":"NM$$bsb$$_$$native$lib$js$digest","./caml_sys.js":"NM$$bsb$$_$$native$lib$js$caml_sys","./nativeint.js":"NM$$bsb$$_$$native$lib$js$nativeint","./caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array","./caml_int64.js":"NM$$bsb$$_$$native$lib$js$caml_int64","./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$set":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar List = __fastpack_require__(\"./list.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction Make(funarg) {\n  var height = function (param) {\n    if (param) {\n      return param[3];\n    } else {\n      return 0;\n    }\n  };\n  var create = function (l, v, r) {\n    var hl = l ? l[3] : 0;\n    var hr = r ? r[3] : 0;\n    return /* Node */[\n            l,\n            v,\n            r,\n            hl >= hr ? hl + 1 | 0 : hr + 1 | 0\n          ];\n  };\n  var bal = function (l, v, r) {\n    var hl = l ? l[3] : 0;\n    var hr = r ? r[3] : 0;\n    if (hl > (hr + 2 | 0)) {\n      if (l) {\n        var lr = l[2];\n        var lv = l[1];\n        var ll = l[0];\n        if (height(ll) >= height(lr)) {\n          return create(ll, lv, create(lr, v, r));\n        } else if (lr) {\n          return create(create(ll, lv, lr[0]), lr[1], create(lr[2], v, r));\n        } else {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"Set.bal\"\n              ];\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"Set.bal\"\n            ];\n      }\n    } else if (hr > (hl + 2 | 0)) {\n      if (r) {\n        var rr = r[2];\n        var rv = r[1];\n        var rl = r[0];\n        if (height(rr) >= height(rl)) {\n          return create(create(l, v, rl), rv, rr);\n        } else if (rl) {\n          return create(create(l, v, rl[0]), rl[1], create(rl[2], rv, rr));\n        } else {\n          throw [\n                Caml_builtin_exceptions.invalid_argument,\n                \"Set.bal\"\n              ];\n        }\n      } else {\n        throw [\n              Caml_builtin_exceptions.invalid_argument,\n              \"Set.bal\"\n            ];\n      }\n    } else {\n      return /* Node */[\n              l,\n              v,\n              r,\n              hl >= hr ? hl + 1 | 0 : hr + 1 | 0\n            ];\n    }\n  };\n  var add = function (x, t) {\n    if (t) {\n      var r = t[2];\n      var v = t[1];\n      var l = t[0];\n      var c = Curry._2(funarg[/* compare */0], x, v);\n      if (c === 0) {\n        return t;\n      } else if (c < 0) {\n        return bal(add(x, l), v, r);\n      } else {\n        return bal(l, v, add(x, r));\n      }\n    } else {\n      return /* Node */[\n              /* Empty */0,\n              x,\n              /* Empty */0,\n              1\n            ];\n    }\n  };\n  var singleton = function (x) {\n    return /* Node */[\n            /* Empty */0,\n            x,\n            /* Empty */0,\n            1\n          ];\n  };\n  var add_min_element = function (v, param) {\n    if (param) {\n      return bal(add_min_element(v, param[0]), param[1], param[2]);\n    } else {\n      return singleton(v);\n    }\n  };\n  var add_max_element = function (v, param) {\n    if (param) {\n      return bal(param[0], param[1], add_max_element(v, param[2]));\n    } else {\n      return singleton(v);\n    }\n  };\n  var join = function (l, v, r) {\n    if (l) {\n      if (r) {\n        var rh = r[3];\n        var lh = l[3];\n        if (lh > (rh + 2 | 0)) {\n          return bal(l[0], l[1], join(l[2], v, r));\n        } else if (rh > (lh + 2 | 0)) {\n          return bal(join(l, v, r[0]), r[1], r[2]);\n        } else {\n          return create(l, v, r);\n        }\n      } else {\n        return add_max_element(v, l);\n      }\n    } else {\n      return add_min_element(v, r);\n    }\n  };\n  var min_elt = function (_param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var l = param[0];\n        if (l) {\n          _param = l;\n          continue ;\n        } else {\n          return param[1];\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n  };\n  var max_elt = function (_param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var r = param[2];\n        if (r) {\n          _param = r;\n          continue ;\n        } else {\n          return param[1];\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n  };\n  var remove_min_elt = function (param) {\n    if (param) {\n      var l = param[0];\n      if (l) {\n        return bal(remove_min_elt(l), param[1], param[2]);\n      } else {\n        return param[2];\n      }\n    } else {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Set.remove_min_elt\"\n          ];\n    }\n  };\n  var concat = function (t1, t2) {\n    if (t1) {\n      if (t2) {\n        return join(t1, min_elt(t2), remove_min_elt(t2));\n      } else {\n        return t1;\n      }\n    } else {\n      return t2;\n    }\n  };\n  var split = function (x, param) {\n    if (param) {\n      var r = param[2];\n      var v = param[1];\n      var l = param[0];\n      var c = Curry._2(funarg[/* compare */0], x, v);\n      if (c === 0) {\n        return /* tuple */[\n                l,\n                true,\n                r\n              ];\n      } else if (c < 0) {\n        var match = split(x, l);\n        return /* tuple */[\n                match[0],\n                match[1],\n                join(match[2], v, r)\n              ];\n      } else {\n        var match$1 = split(x, r);\n        return /* tuple */[\n                join(l, v, match$1[0]),\n                match$1[1],\n                match$1[2]\n              ];\n      }\n    } else {\n      return /* tuple */[\n              /* Empty */0,\n              false,\n              /* Empty */0\n            ];\n    }\n  };\n  var is_empty = function (param) {\n    if (param) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  var mem = function (x, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var c = Curry._2(funarg[/* compare */0], x, param[1]);\n        if (c === 0) {\n          return true;\n        } else {\n          _param = c < 0 ? param[0] : param[2];\n          continue ;\n        }\n      } else {\n        return false;\n      }\n    };\n  };\n  var remove = function (x, param) {\n    if (param) {\n      var r = param[2];\n      var v = param[1];\n      var l = param[0];\n      var c = Curry._2(funarg[/* compare */0], x, v);\n      if (c === 0) {\n        var t1 = l;\n        var t2 = r;\n        if (t1) {\n          if (t2) {\n            return bal(t1, min_elt(t2), remove_min_elt(t2));\n          } else {\n            return t1;\n          }\n        } else {\n          return t2;\n        }\n      } else if (c < 0) {\n        return bal(remove(x, l), v, r);\n      } else {\n        return bal(l, v, remove(x, r));\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var union = function (s1, s2) {\n    if (s1) {\n      if (s2) {\n        var h2 = s2[3];\n        var v2 = s2[1];\n        var h1 = s1[3];\n        var v1 = s1[1];\n        if (h1 >= h2) {\n          if (h2 === 1) {\n            return add(v2, s1);\n          } else {\n            var match = split(v1, s2);\n            return join(union(s1[0], match[0]), v1, union(s1[2], match[2]));\n          }\n        } else if (h1 === 1) {\n          return add(v1, s2);\n        } else {\n          var match$1 = split(v2, s1);\n          return join(union(match$1[0], s2[0]), v2, union(match$1[2], s2[2]));\n        }\n      } else {\n        return s1;\n      }\n    } else {\n      return s2;\n    }\n  };\n  var inter = function (s1, s2) {\n    if (s1 && s2) {\n      var r1 = s1[2];\n      var v1 = s1[1];\n      var l1 = s1[0];\n      var match = split(v1, s2);\n      var l2 = match[0];\n      if (match[1]) {\n        return join(inter(l1, l2), v1, inter(r1, match[2]));\n      } else {\n        return concat(inter(l1, l2), inter(r1, match[2]));\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var diff = function (s1, s2) {\n    if (s1) {\n      if (s2) {\n        var r1 = s1[2];\n        var v1 = s1[1];\n        var l1 = s1[0];\n        var match = split(v1, s2);\n        var l2 = match[0];\n        if (match[1]) {\n          return concat(diff(l1, l2), diff(r1, match[2]));\n        } else {\n          return join(diff(l1, l2), v1, diff(r1, match[2]));\n        }\n      } else {\n        return s1;\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var cons_enum = function (_s, _e) {\n    while(true) {\n      var e = _e;\n      var s = _s;\n      if (s) {\n        _e = /* More */[\n          s[1],\n          s[2],\n          e\n        ];\n        _s = s[0];\n        continue ;\n      } else {\n        return e;\n      }\n    };\n  };\n  var compare = function (s1, s2) {\n    var _e1 = cons_enum(s1, /* End */0);\n    var _e2 = cons_enum(s2, /* End */0);\n    while(true) {\n      var e2 = _e2;\n      var e1 = _e1;\n      if (e1) {\n        if (e2) {\n          var c = Curry._2(funarg[/* compare */0], e1[0], e2[0]);\n          if (c !== 0) {\n            return c;\n          } else {\n            _e2 = cons_enum(e2[1], e2[2]);\n            _e1 = cons_enum(e1[1], e1[2]);\n            continue ;\n          }\n        } else {\n          return 1;\n        }\n      } else if (e2) {\n        return -1;\n      } else {\n        return 0;\n      }\n    };\n  };\n  var equal = function (s1, s2) {\n    return compare(s1, s2) === 0;\n  };\n  var subset = function (_s1, _s2) {\n    while(true) {\n      var s2 = _s2;\n      var s1 = _s1;\n      if (s1) {\n        if (s2) {\n          var r2 = s2[2];\n          var l2 = s2[0];\n          var r1 = s1[2];\n          var v1 = s1[1];\n          var l1 = s1[0];\n          var c = Curry._2(funarg[/* compare */0], v1, s2[1]);\n          if (c === 0) {\n            if (subset(l1, l2)) {\n              _s2 = r2;\n              _s1 = r1;\n              continue ;\n            } else {\n              return false;\n            }\n          } else if (c < 0) {\n            if (subset(/* Node */[\n                    l1,\n                    v1,\n                    /* Empty */0,\n                    0\n                  ], l2)) {\n              _s1 = r1;\n              continue ;\n            } else {\n              return false;\n            }\n          } else if (subset(/* Node */[\n                  /* Empty */0,\n                  v1,\n                  r1,\n                  0\n                ], r2)) {\n            _s1 = l1;\n            continue ;\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n  };\n  var iter = function (f, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        iter(f, param[0]);\n        Curry._1(f, param[1]);\n        _param = param[2];\n        continue ;\n      } else {\n        return /* () */0;\n      }\n    };\n  };\n  var fold = function (f, _s, _accu) {\n    while(true) {\n      var accu = _accu;\n      var s = _s;\n      if (s) {\n        _accu = Curry._2(f, s[1], fold(f, s[0], accu));\n        _s = s[2];\n        continue ;\n      } else {\n        return accu;\n      }\n    };\n  };\n  var for_all = function (p, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        if (Curry._1(p, param[1]) && for_all(p, param[0])) {\n          _param = param[2];\n          continue ;\n        } else {\n          return false;\n        }\n      } else {\n        return true;\n      }\n    };\n  };\n  var exists = function (p, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        if (Curry._1(p, param[1]) || exists(p, param[0])) {\n          return true;\n        } else {\n          _param = param[2];\n          continue ;\n        }\n      } else {\n        return false;\n      }\n    };\n  };\n  var filter = function (p, param) {\n    if (param) {\n      var v = param[1];\n      var l$prime = filter(p, param[0]);\n      var pv = Curry._1(p, v);\n      var r$prime = filter(p, param[2]);\n      if (pv) {\n        return join(l$prime, v, r$prime);\n      } else {\n        return concat(l$prime, r$prime);\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var partition = function (p, param) {\n    if (param) {\n      var v = param[1];\n      var match = partition(p, param[0]);\n      var lf = match[1];\n      var lt = match[0];\n      var pv = Curry._1(p, v);\n      var match$1 = partition(p, param[2]);\n      var rf = match$1[1];\n      var rt = match$1[0];\n      if (pv) {\n        return /* tuple */[\n                join(lt, v, rt),\n                concat(lf, rf)\n              ];\n      } else {\n        return /* tuple */[\n                concat(lt, rt),\n                join(lf, v, rf)\n              ];\n      }\n    } else {\n      return /* tuple */[\n              /* Empty */0,\n              /* Empty */0\n            ];\n    }\n  };\n  var cardinal = function (param) {\n    if (param) {\n      return (cardinal(param[0]) + 1 | 0) + cardinal(param[2]) | 0;\n    } else {\n      return 0;\n    }\n  };\n  var elements_aux = function (_accu, _param) {\n    while(true) {\n      var param = _param;\n      var accu = _accu;\n      if (param) {\n        _param = param[0];\n        _accu = /* :: */[\n          param[1],\n          elements_aux(accu, param[2])\n        ];\n        continue ;\n      } else {\n        return accu;\n      }\n    };\n  };\n  var elements = function (s) {\n    return elements_aux(/* [] */0, s);\n  };\n  var find = function (x, _param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var v = param[1];\n        var c = Curry._2(funarg[/* compare */0], x, v);\n        if (c === 0) {\n          return v;\n        } else {\n          _param = c < 0 ? param[0] : param[2];\n          continue ;\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n  };\n  var of_list = function (l) {\n    if (l) {\n      var match = l[1];\n      var x0 = l[0];\n      if (match) {\n        var match$1 = match[1];\n        var x1 = match[0];\n        if (match$1) {\n          var match$2 = match$1[1];\n          var x2 = match$1[0];\n          if (match$2) {\n            var match$3 = match$2[1];\n            var x3 = match$2[0];\n            if (match$3) {\n              if (match$3[1]) {\n                var l$1 = List.sort_uniq(funarg[/* compare */0], l);\n                var sub = function (n, l) {\n                  var exit = 0;\n                  switch (n) {\n                    case 0 : \n                        return /* tuple */[\n                                /* Empty */0,\n                                l\n                              ];\n                    case 1 : \n                        if (l) {\n                          return /* tuple */[\n                                  /* Node */[\n                                    /* Empty */0,\n                                    l[0],\n                                    /* Empty */0,\n                                    1\n                                  ],\n                                  l[1]\n                                ];\n                        } else {\n                          exit = 1;\n                        }\n                        break;\n                    case 2 : \n                        if (l) {\n                          var match = l[1];\n                          if (match) {\n                            return /* tuple */[\n                                    /* Node */[\n                                      /* Node */[\n                                        /* Empty */0,\n                                        l[0],\n                                        /* Empty */0,\n                                        1\n                                      ],\n                                      match[0],\n                                      /* Empty */0,\n                                      2\n                                    ],\n                                    match[1]\n                                  ];\n                          } else {\n                            exit = 1;\n                          }\n                        } else {\n                          exit = 1;\n                        }\n                        break;\n                    case 3 : \n                        if (l) {\n                          var match$1 = l[1];\n                          if (match$1) {\n                            var match$2 = match$1[1];\n                            if (match$2) {\n                              return /* tuple */[\n                                      /* Node */[\n                                        /* Node */[\n                                          /* Empty */0,\n                                          l[0],\n                                          /* Empty */0,\n                                          1\n                                        ],\n                                        match$1[0],\n                                        /* Node */[\n                                          /* Empty */0,\n                                          match$2[0],\n                                          /* Empty */0,\n                                          1\n                                        ],\n                                        2\n                                      ],\n                                      match$2[1]\n                                    ];\n                            } else {\n                              exit = 1;\n                            }\n                          } else {\n                            exit = 1;\n                          }\n                        } else {\n                          exit = 1;\n                        }\n                        break;\n                    default:\n                      exit = 1;\n                  }\n                  if (exit === 1) {\n                    var nl = n / 2 | 0;\n                    var match$3 = sub(nl, l);\n                    var l$1 = match$3[1];\n                    if (l$1) {\n                      var match$4 = sub((n - nl | 0) - 1 | 0, l$1[1]);\n                      return /* tuple */[\n                              create(match$3[0], l$1[0], match$4[0]),\n                              match$4[1]\n                            ];\n                    } else {\n                      throw [\n                            Caml_builtin_exceptions.assert_failure,\n                            /* tuple */[\n                              \"set.ml\",\n                              372,\n                              18\n                            ]\n                          ];\n                    }\n                  }\n                  \n                };\n                return sub(List.length(l$1), l$1)[0];\n              } else {\n                return add(match$3[0], add(x3, add(x2, add(x1, singleton(x0)))));\n              }\n            } else {\n              return add(x3, add(x2, add(x1, singleton(x0))));\n            }\n          } else {\n            return add(x2, add(x1, singleton(x0)));\n          }\n        } else {\n          return add(x1, singleton(x0));\n        }\n      } else {\n        return singleton(x0);\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  return [\n          /* Empty */0,\n          is_empty,\n          mem,\n          add,\n          singleton,\n          remove,\n          union,\n          inter,\n          diff,\n          compare,\n          equal,\n          subset,\n          iter,\n          fold,\n          for_all,\n          exists,\n          filter,\n          partition,\n          cardinal,\n          elements,\n          min_elt,\n          max_elt,\n          min_elt,\n          split,\n          find,\n          of_list\n        ];\n}\n\nexports.Make = Make;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/set.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/set.js");
},
d: {"./list.js":"NM$$bsb$$_$$native$lib$js$list","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Common":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Set = __fastpack_require__(\"bsb-native/lib/js/set.js\");\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar $$String = __fastpack_require__(\"bsb-native/lib/js/string.js\");\nvar Caml_obj = __fastpack_require__(\"bsb-native/lib/js/caml_obj.js\");\nvar Pervasives = __fastpack_require__(\"bsb-native/lib/js/pervasives.js\");\nvar Caml_string = __fastpack_require__(\"bsb-native/lib/js/caml_string.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nvar compare = Caml_obj.caml_compare;\n\nvar KeySet = $$Set.Make(/* module */[/* compare */compare]);\n\nfunction peekch(param) {\n  var i = param[1];\n  var str = param[0];\n  if (i < str.length) {\n    return Caml_string.get(str, i);\n  }\n  \n}\n\nfunction popch(param) {\n  return /* tuple */[\n          param[0],\n          param[1] + 1 | 0\n        ];\n}\n\nfunction peekn(param, len) {\n  var i = param[1];\n  var str = param[0];\n  if ((i + len | 0) < str.length) {\n    return $$String.sub(str, i, len);\n  }\n  \n}\n\nfunction skipWhite(param) {\n  var str = param[0];\n  var len = str.length;\n  var _n = param[1];\n  while(true) {\n    var n = _n;\n    if (n >= len || Caml_string.get(str, n) !== /* \" \" */32) {\n      return /* tuple */[\n              str,\n              n\n            ];\n    } else {\n      _n = n + 1 | 0;\n      continue ;\n    }\n  };\n}\n\nfunction popn(param, len) {\n  return /* tuple */[\n          param[0],\n          param[1] + len | 0\n        ];\n}\n\nfunction match_(stream, matchstr) {\n  var len = matchstr.length;\n  var match = peekn(stream, len);\n  if (match !== undefined) {\n    var peek = match;\n    if (peek === matchstr) {\n      return popn(stream, len);\n    } else {\n      return Pervasives.failwith(\"Could not match '\" + (matchstr + (\"', got '\" + (peek + \"' instead.\"))));\n    }\n  } else {\n    return Pervasives.failwith(\"Could not match \" + matchstr);\n  }\n}\n\nfunction charsRemaining(param) {\n  return param[0].length - param[1] | 0;\n}\n\nfunction create(str) {\n  return /* tuple */[\n          str,\n          0\n        ];\n}\n\nvar Stream = /* module */[\n  /* empty : [] */0,\n  /* peekch */peekch,\n  /* popch */popch,\n  /* peekn */peekn,\n  /* skipWhite */skipWhite,\n  /* popn */popn,\n  /* match_ */match_,\n  /* charsRemaining */charsRemaining,\n  /* create */create\n];\n\nfunction read(name) {\n  var ic = Pervasives.open_in(name);\n  var try_read = function (param) {\n    var exit = 0;\n    var x;\n    try {\n      x = Pervasives.input_line(ic);\n      exit = 1;\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.end_of_file) {\n        return undefined;\n      } else {\n        throw exn;\n      }\n    }\n    if (exit === 1) {\n      return x;\n    }\n    \n  };\n  var loop = function (_acc) {\n    while(true) {\n      var acc = _acc;\n      var match = try_read(/* () */0);\n      if (match !== undefined) {\n        _acc = /* :: */[\n          $$String.make(1, /* \"\\n\" */10),\n          /* :: */[\n            match,\n            acc\n          ]\n        ];\n        continue ;\n      } else {\n        Pervasives.close_in(ic);\n        return List.rev(acc);\n      }\n    };\n  };\n  return $$String.concat(\"\", loop(/* [] */0));\n}\n\nfunction append_char(s, c) {\n  return s + $$String.make(1, c);\n}\n\nfunction split(str, sep) {\n  var _stream = /* tuple */[\n    str,\n    0\n  ];\n  var sep$1 = sep;\n  var _accstr = \"\";\n  var _acc = /* [] */0;\n  while(true) {\n    var acc = _acc;\n    var accstr = _accstr;\n    var stream = _stream;\n    var match = peekch(stream);\n    if (match !== undefined) {\n      var c = match;\n      if (c === sep$1) {\n        _acc = /* :: */[\n          accstr,\n          acc\n        ];\n        _accstr = \"\";\n        _stream = popch(stream);\n        continue ;\n      } else {\n        _accstr = append_char(accstr, c);\n        _stream = popch(stream);\n        continue ;\n      }\n    } else {\n      return List.rev(/* :: */[\n                  accstr,\n                  acc\n                ]);\n    }\n  };\n}\n\nvar Constants = 0;\n\nvar circularBufferSize = 60000;\n\nvar vertexSize = 8;\n\nexports.Constants = Constants;\nexports.KeySet = KeySet;\nexports.circularBufferSize = circularBufferSize;\nexports.vertexSize = vertexSize;\nexports.Stream = Stream;\nexports.read = read;\nexports.append_char = append_char;\nexports.split = split;\n/* KeySet Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Common.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Common.js");
},
d: {"bsb-native/lib/js/set.js":"NM$$bsb$$_$$native$lib$js$set","bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/string.js":"NM$$bsb$$_$$native$lib$js$string","bsb-native/lib/js/caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","bsb-native/lib/js/pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","bsb-native/lib/js/caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Constants":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\n\nvar pi = 4.0 * Math.atan(1.0);\n\nvar two_pi = 2.0 * pi;\n\nvar half_pi = 0.5 * pi;\n\nvar quarter_pi = 0.25 * pi;\n\nvar white = /* record */[\n  /* r */1,\n  /* g */1,\n  /* b */1,\n  /* a */1\n];\n\nvar black = /* record */[\n  /* r */0,\n  /* g */0,\n  /* b */0,\n  /* a */1\n];\n\nvar red = /* record */[\n  /* r */1,\n  /* g */0,\n  /* b */0,\n  /* a */1\n];\n\nvar green = /* record */[\n  /* r */0,\n  /* g */1,\n  /* b */0,\n  /* a */1\n];\n\nvar blue = /* record */[\n  /* r */0,\n  /* g */0,\n  /* b */1,\n  /* a */1\n];\n\nvar tau = two_pi;\n\nexports.white = white;\nexports.black = black;\nexports.red = red;\nexports.green = green;\nexports.blue = blue;\nexports.pi = pi;\nexports.half_pi = half_pi;\nexports.quarter_pi = quarter_pi;\nexports.two_pi = two_pi;\nexports.tau = tau;\n/* pi Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Constants.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Constants.js");
},
d: {}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Utils":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Array = __fastpack_require__(\"bsb-native/lib/js/array.js\");\nvar Random = __fastpack_require__(\"bsb-native/lib/js/random.js\");\nvar Caml_obj = __fastpack_require__(\"bsb-native/lib/js/caml_obj.js\");\nvar Caml_array = __fastpack_require__(\"bsb-native/lib/js/caml_array.js\");\nvar Caml_int32 = __fastpack_require__(\"bsb-native/lib/js/caml_int32.js\");\nvar Reprocessing_Common = __fastpack_require__(\"./Reprocessing_Common.js\");\nvar Reprocessing_Constants = __fastpack_require__(\"./Reprocessing_Constants.js\");\n\nvar lookup_table = /* record */[/* contents : array */[]];\n\nfunction round(i) {\n  return Math.floor(i + 0.5);\n}\n\nfunction sq(x) {\n  return Caml_int32.imul(x, x);\n}\n\nfunction pow(base, exp) {\n  if (exp !== 0) {\n    if (exp !== 1) {\n      var b = pow(base, exp / 2 | 0);\n      return Caml_int32.imul(Caml_int32.imul(b, b), exp % 2 === 0 ? 1 : base);\n    } else {\n      return base;\n    }\n  } else {\n    return 1;\n  }\n}\n\nfunction constrain(amt, low, high) {\n  return Caml_obj.caml_max(Caml_obj.caml_min(amt, high), low);\n}\n\nfunction remapf(value, low1, high1, low2, high2) {\n  return low2 + (high2 - low2) * ((value - low1) / (high1 - low1));\n}\n\nfunction remap(value, low1, high1, low2, high2) {\n  return remapf(value, low1, high1, low2, high2) | 0;\n}\n\nfunction norm(value, low, high) {\n  return remapf(value, low, high, 0, 1);\n}\n\nfunction randomf(min, max) {\n  return Random.$$float(max - min) + min;\n}\n\nfunction random(min, max) {\n  return Random.$$int(max - min | 0) + min | 0;\n}\n\nvar randomSeed = Random.init;\n\nfunction randomGaussian(param) {\n  var u1 = 0.0;\n  var u2 = 0.0;\n  while(u1 <= Number.MIN_VALUE) {\n    u1 = Random.$$float(1.0);\n    u2 = Random.$$float(1.0);\n  };\n  return Math.sqrt(-2.0 * Math.log(u1)) * Math.cos(Reprocessing_Constants.two_pi * u2);\n}\n\nfunction lerpf(low, high) {\n  return (function (param) {\n      return remapf(param, 0, 1, low, high);\n    });\n}\n\nfunction lerp(low, high, value) {\n  return lerpf(low, high)(value) | 0;\n}\n\nfunction distf(param, param$1) {\n  var dx = param$1[0] - param[0];\n  var dy = param$1[1] - param[1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction dist(param, param$1) {\n  return distf(/* tuple */[\n              param[0],\n              param[1]\n            ], /* tuple */[\n              param$1[0],\n              param$1[1]\n            ]);\n}\n\nfunction magf(vec) {\n  return distf(/* tuple */[\n              0,\n              0\n            ], vec);\n}\n\nfunction mag(vec) {\n  return dist(/* tuple */[\n              0,\n              0\n            ], vec);\n}\n\nfunction lerpColor(low, high, value) {\n  return /* record */[\n          /* r */lerpf(low[/* r */0], high[/* r */0])(value),\n          /* g */lerpf(low[/* g */1], high[/* g */1])(value),\n          /* b */lerpf(low[/* b */2], high[/* b */2])(value),\n          /* a */lerpf(low[/* a */3], high[/* a */3])(value)\n        ];\n}\n\nfunction degrees(x) {\n  return 180.0 / Reprocessing_Constants.pi * x;\n}\n\nfunction radians(x) {\n  return Reprocessing_Constants.pi / 180.0 * x;\n}\n\nfunction noise(x, y, z) {\n  var p = lookup_table[0];\n  var fade = function (t) {\n    return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\n  };\n  var grad = function (hash, x, y, z) {\n    var match = hash & 15;\n    switch (match) {\n      case 0 : \n          return x + y;\n      case 1 : \n          return -x + y;\n      case 2 : \n          return x - y;\n      case 3 : \n          return -x - y;\n      case 4 : \n          return x + z;\n      case 5 : \n          return -x + z;\n      case 6 : \n          return x - z;\n      case 7 : \n          return -x - z;\n      case 8 : \n          return y + z;\n      case 10 : \n          return y - z;\n      case 12 : \n          return y + x;\n      case 9 : \n      case 13 : \n          return -y + z;\n      case 14 : \n          return y - x;\n      case 11 : \n      case 15 : \n          return -y - z;\n      default:\n        return 0.0;\n    }\n  };\n  var xi = x & 255;\n  var yi = y & 255;\n  var zi = z & 255;\n  var xf = x - Math.floor(x);\n  var yf = y - Math.floor(y);\n  var zf = z - Math.floor(z);\n  var u = fade(xf);\n  var v = fade(yf);\n  var w = fade(zf);\n  var aaa = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi) + yi | 0) + zi | 0);\n  var aba = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi) + (yi + 1 | 0) | 0) + zi | 0);\n  var aab = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi) + yi | 0) + (zi + 1 | 0) | 0);\n  var abb = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi) + (yi + 1 | 0) | 0) + (zi + 1 | 0) | 0);\n  var baa = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi + 1 | 0) + yi | 0) + zi | 0);\n  var bba = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi + 1 | 0) + (yi + 1 | 0) | 0) + zi | 0);\n  var bab = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi + 1 | 0) + yi | 0) + (zi + 1 | 0) | 0);\n  var bbb = Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, Caml_array.caml_array_get(p, xi + 1 | 0) + (yi + 1 | 0) | 0) + (zi + 1 | 0) | 0);\n  var x1 = lerpf(grad(aaa, xf, yf, zf), grad(baa, xf - 1.0, yf, zf))(u);\n  var x2 = lerpf(grad(aba, xf, yf - 1.0, zf), grad(bba, xf - 1.0, yf - 1.0, zf))(u);\n  var y1 = lerpf(x1, x2)(v);\n  var x1$1 = lerpf(grad(aab, xf, yf, zf - 1.0), grad(bab, xf - 1.0, yf, zf - 1.0))(u);\n  var x2$1 = lerpf(grad(abb, xf, yf - 1.0, zf - 1.0), grad(bbb, xf - 1.0, yf - 1.0, zf - 1.0))(u);\n  var y2 = lerpf(x1$1, x2$1)(v);\n  return (lerpf(y1, y2)(w) + 1.0) / 2.0;\n}\n\nfunction shuffle(array) {\n  var array$1 = $$Array.copy(array);\n  var length = array$1.length;\n  for(var i = 0; i <= 255; ++i){\n    var j = Random.$$int(length - i | 0);\n    var tmp = Caml_array.caml_array_get(array$1, i);\n    Caml_array.caml_array_set(array$1, i, Caml_array.caml_array_get(array$1, i + j | 0));\n    Caml_array.caml_array_set(array$1, i + j | 0, tmp);\n  }\n  return array$1;\n}\n\nfunction noiseSeed(seed) {\n  var state = Random.get_state(/* () */0);\n  Random.init(seed);\n  var array = Caml_array.caml_make_vect(256, 0);\n  var array$1 = $$Array.mapi((function (i, param) {\n          return i;\n        }), array);\n  var array$2 = shuffle(array$1);\n  var double_array = $$Array.append(array$2, array$2);\n  lookup_table[0] = double_array;\n  return Random.set_state(state);\n}\n\nfunction color(r, g, b, a) {\n  return /* record */[\n          /* r */r / 255,\n          /* g */g / 255,\n          /* b */b / 255,\n          /* a */a / 255\n        ];\n}\n\nfunction colorf(r, g, b, a) {\n  return /* record */[\n          /* r */r,\n          /* g */g,\n          /* b */b,\n          /* a */a\n        ];\n}\n\nfunction intersectRectCircle(param, rectW, rectH, param$1, circleRad) {\n  var halfW = rectW / 2;\n  var halfH = rectH / 2;\n  var cdistX = Math.abs(param$1[0] - (param[0] + halfW));\n  var cdistY = Math.abs(param$1[1] - (param[1] + halfH));\n  if (cdistX > halfW + circleRad || cdistY > halfH + circleRad) {\n    return false;\n  } else if (cdistX <= halfW || cdistY <= halfH) {\n    return true;\n  } else {\n    var cornerDistSq = Math.pow(cdistX - halfW, 2) + Math.pow(cdistY - halfH, 2);\n    return cornerDistSq <= Math.pow(circleRad, 2);\n  }\n}\n\nfunction intersectRectRect(param, rect1W, rect1H, param$1, rect2W, rect2H) {\n  var ry2 = param$1[1];\n  var rx2 = param$1[0];\n  var ry1 = param[1];\n  var rx1 = param[0];\n  return !(rx2 > rx1 + rect1W || rx2 + rect2W < rx1 || ry2 > ry1 + rect1H || ry2 + rect2H < ry1);\n}\n\nvar split = Reprocessing_Common.split;\n\nexports.color = color;\nexports.colorf = colorf;\nexports.round = round;\nexports.sq = sq;\nexports.pow = pow;\nexports.constrain = constrain;\nexports.remapf = remapf;\nexports.remap = remap;\nexports.norm = norm;\nexports.randomf = randomf;\nexports.random = random;\nexports.randomSeed = randomSeed;\nexports.randomGaussian = randomGaussian;\nexports.lerpf = lerpf;\nexports.lerp = lerp;\nexports.lerpColor = lerpColor;\nexports.distf = distf;\nexports.dist = dist;\nexports.magf = magf;\nexports.mag = mag;\nexports.degrees = degrees;\nexports.radians = radians;\nexports.noise = noise;\nexports.noiseSeed = noiseSeed;\nexports.split = split;\nexports.intersectRectCircle = intersectRectCircle;\nexports.intersectRectRect = intersectRectRect;\n/* Random Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js");
},
d: {"bsb-native/lib/js/array.js":"NM$$bsb$$_$$native$lib$js$array","bsb-native/lib/js/random.js":"NM$$bsb$$_$$native$lib$js$random","bsb-native/lib/js/caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","bsb-native/lib/js/caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array","bsb-native/lib/js/caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","./Reprocessing_Common.js":"NM$$reprocessing$lib$js$src$Reprocessing_Common","./Reprocessing_Constants.js":"NM$$reprocessing$lib$js$src$Reprocessing_Constants"}
},
"lib$js$src$Common":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Map = __fastpack_require__(\"bsb-native/lib/js/map.js\");\nvar Block = __fastpack_require__(\"bsb-native/lib/js/block.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Printf = __fastpack_require__(\"bsb-native/lib/js/printf.js\");\nvar $$String = __fastpack_require__(\"bsb-native/lib/js/string.js\");\nvar Reprocessing_Utils = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js\");\n\nvar StringMap = $$Map.Make([$$String.compare]);\n\nfunction create(x, y) {\n  return /* record */[\n          /* x */x,\n          /* y */y\n        ];\n}\n\nfunction toPair(param) {\n  return /* tuple */[\n          param[/* x */0],\n          param[/* y */1]\n        ];\n}\n\nfunction fromPair(param) {\n  return /* record */[\n          /* x */param[0],\n          /* y */param[1]\n        ];\n}\n\nfunction fromIntPair(param) {\n  return /* record */[\n          /* x */param[0],\n          /* y */param[1]\n        ];\n}\n\nfunction add(param, param$1) {\n  return /* record */[\n          /* x */param[/* x */0] + param$1[/* x */0],\n          /* y */param[/* y */1] + param$1[/* y */1]\n        ];\n}\n\nfunction sub(param, param$1) {\n  return /* record */[\n          /* x */param[/* x */0] - param$1[/* x */0],\n          /* y */param[/* y */1] - param$1[/* y */1]\n        ];\n}\n\nfunction moveTo(src, dest, speed) {\n  var dist = Reprocessing_Utils.distf(toPair(src), toPair(dest));\n  if (dist <= speed) {\n    return dest;\n  } else {\n    var mult = speed / dist;\n    var d_000 = /* x */(dest[/* x */0] - src[/* x */0]) * mult;\n    var d_001 = /* y */(dest[/* y */1] - src[/* y */1]) * mult;\n    var d = /* record */[\n      d_000,\n      d_001\n    ];\n    return add(src, d);\n  }\n}\n\nfunction print(t) {\n  return Curry._2(Printf.printf(/* Format */[\n                  /* String_literal */Block.__(11, [\n                      \"{x:\",\n                      /* Float */Block.__(8, [\n                          /* Float_f */0,\n                          /* No_padding */0,\n                          /* No_precision */0,\n                          /* String_literal */Block.__(11, [\n                              \",y:\",\n                              /* Float */Block.__(8, [\n                                  /* Float_f */0,\n                                  /* No_padding */0,\n                                  /* No_precision */0,\n                                  /* String_literal */Block.__(11, [\n                                      \"}\\n\",\n                                      /* Flush */Block.__(10, [/* End_of_format */0])\n                                    ])\n                                ])\n                            ])\n                        ])\n                    ]),\n                  \"{x:%f,y:%f}\\n%!\"\n                ]), t[/* x */0], t[/* y */1]);\n}\n\nvar Point_000 = /* zero : record */[\n  /* x */0,\n  /* y */0\n];\n\nvar Point = /* module */[\n  Point_000,\n  /* create */create,\n  /* toPair */toPair,\n  /* fromPair */fromPair,\n  /* fromIntPair */fromIntPair,\n  /* add */add,\n  /* sub */sub,\n  /* moveTo */moveTo,\n  /* print */print,\n  /* + */add,\n  /* - */sub\n];\n\nfunction create$1(sheet, map) {\n  return /* record */[\n          /* sheet */sheet,\n          /* map */map\n        ];\n}\n\nvar Sprite = /* module */[/* create */create$1];\n\nexports.StringMap = StringMap;\nexports.Point = Point;\nexports.Sprite = Sprite;\n/* StringMap Not a pure module */\n\n//# sourceURL=fpack:///lib/js/src/Common.js\n//# sourceURL=fpack:///lib/js/src/Common.js");
},
d: {"bsb-native/lib/js/map.js":"NM$$bsb$$_$$native$lib$js$map","bsb-native/lib/js/block.js":"NM$$bsb$$_$$native$lib$js$block","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","bsb-native/lib/js/printf.js":"NM$$bsb$$_$$native$lib$js$printf","bsb-native/lib/js/string.js":"NM$$bsb$$_$$native$lib$js$string","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js":"NM$$reprocessing$lib$js$src$Reprocessing_Utils"}
},
"NM$$Reasongl$lib$js$src$web$events_web":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\n\nfunction keycodeMap(i32) {\n  var match = i32;\n  switch (match) {\n    case 8 : \n        return /* Backspace */0;\n    case 9 : \n        return /* Tab */1;\n    case 13 : \n        return /* Enter */2;\n    case 16 : \n        return /* LeftShift */56;\n    case 17 : \n        return /* LeftCtrl */55;\n    case 18 : \n        return /* LeftAlt */57;\n    case 20 : \n        return /* CapsLock */63;\n    case 27 : \n        return /* Escape */3;\n    case 32 : \n        return /* Space */4;\n    case 37 : \n        return /* Left */52;\n    case 38 : \n        return /* Up */54;\n    case 39 : \n        return /* Right */51;\n    case 40 : \n        return /* Down */53;\n    case 48 : \n        return /* Num_0 */10;\n    case 49 : \n        return /* Num_1 */11;\n    case 50 : \n        return /* Num_2 */12;\n    case 51 : \n        return /* Num_3 */13;\n    case 52 : \n        return /* Num_4 */14;\n    case 53 : \n        return /* Num_5 */15;\n    case 54 : \n        return /* Num_6 */16;\n    case 55 : \n        return /* Num_7 */17;\n    case 56 : \n        return /* Num_8 */18;\n    case 57 : \n        return /* Num_9 */19;\n    case 65 : \n        return /* A */25;\n    case 66 : \n        return /* B */26;\n    case 67 : \n        return /* C */27;\n    case 68 : \n        return /* D */28;\n    case 69 : \n        return /* E */29;\n    case 70 : \n        return /* F */30;\n    case 71 : \n        return /* G */31;\n    case 72 : \n        return /* H */32;\n    case 73 : \n        return /* I */33;\n    case 74 : \n        return /* J */34;\n    case 75 : \n        return /* K */35;\n    case 76 : \n        return /* L */36;\n    case 77 : \n        return /* M */37;\n    case 78 : \n        return /* N */38;\n    case 79 : \n        return /* O */39;\n    case 80 : \n        return /* P */40;\n    case 81 : \n        return /* Q */41;\n    case 82 : \n        return /* R */42;\n    case 83 : \n        return /* S */43;\n    case 84 : \n        return /* T */44;\n    case 85 : \n        return /* U */45;\n    case 86 : \n        return /* V */46;\n    case 87 : \n        return /* W */47;\n    case 88 : \n        return /* X */48;\n    case 89 : \n        return /* Y */49;\n    case 90 : \n        return /* Z */50;\n    case 91 : \n        return /* LeftOsKey */58;\n    case 93 : \n        return /* RightOsKey */62;\n    case 186 : \n        return /* Semicolon */20;\n    case 187 : \n        return /* Equals */21;\n    case 188 : \n        return /* Comma */6;\n    case 189 : \n        return /* Minus */7;\n    case 190 : \n        return /* Period */8;\n    case 191 : \n        return /* Slash */9;\n    case 192 : \n        return /* Backtick */64;\n    case 10 : \n    case 11 : \n    case 12 : \n    case 14 : \n    case 15 : \n    case 19 : \n    case 21 : \n    case 22 : \n    case 23 : \n    case 24 : \n    case 25 : \n    case 26 : \n    case 28 : \n    case 29 : \n    case 30 : \n    case 31 : \n    case 33 : \n    case 34 : \n    case 35 : \n    case 36 : \n    case 41 : \n    case 42 : \n    case 43 : \n    case 44 : \n    case 45 : \n    case 46 : \n    case 47 : \n    case 58 : \n    case 59 : \n    case 60 : \n    case 61 : \n    case 62 : \n    case 63 : \n    case 64 : \n    case 92 : \n    case 94 : \n    case 95 : \n    case 96 : \n    case 97 : \n    case 98 : \n    case 99 : \n    case 100 : \n    case 101 : \n    case 102 : \n    case 103 : \n    case 104 : \n    case 105 : \n    case 106 : \n    case 107 : \n    case 108 : \n    case 109 : \n    case 110 : \n    case 111 : \n    case 112 : \n    case 113 : \n    case 114 : \n    case 115 : \n    case 116 : \n    case 117 : \n    case 118 : \n    case 119 : \n    case 120 : \n    case 121 : \n    case 122 : \n    case 123 : \n    case 124 : \n    case 125 : \n    case 126 : \n    case 127 : \n    case 128 : \n    case 129 : \n    case 130 : \n    case 131 : \n    case 132 : \n    case 133 : \n    case 134 : \n    case 135 : \n    case 136 : \n    case 137 : \n    case 138 : \n    case 139 : \n    case 140 : \n    case 141 : \n    case 142 : \n    case 143 : \n    case 144 : \n    case 145 : \n    case 146 : \n    case 147 : \n    case 148 : \n    case 149 : \n    case 150 : \n    case 151 : \n    case 152 : \n    case 153 : \n    case 154 : \n    case 155 : \n    case 156 : \n    case 157 : \n    case 158 : \n    case 159 : \n    case 160 : \n    case 161 : \n    case 162 : \n    case 163 : \n    case 164 : \n    case 165 : \n    case 166 : \n    case 167 : \n    case 168 : \n    case 169 : \n    case 170 : \n    case 171 : \n    case 172 : \n    case 173 : \n    case 174 : \n    case 175 : \n    case 176 : \n    case 177 : \n    case 178 : \n    case 179 : \n    case 180 : \n    case 181 : \n    case 182 : \n    case 183 : \n    case 184 : \n    case 185 : \n    case 193 : \n    case 194 : \n    case 195 : \n    case 196 : \n    case 197 : \n    case 198 : \n    case 199 : \n    case 200 : \n    case 201 : \n    case 202 : \n    case 203 : \n    case 204 : \n    case 205 : \n    case 206 : \n    case 207 : \n    case 208 : \n    case 209 : \n    case 210 : \n    case 211 : \n    case 212 : \n    case 213 : \n    case 214 : \n    case 215 : \n    case 216 : \n    case 217 : \n    case 218 : \n        return /* Nothing */65;\n    case 219 : \n        return /* OpenBracket */22;\n    case 220 : \n        return /* Backslash */23;\n    case 221 : \n        return /* CloseBracket */24;\n    case 222 : \n        return /* Quote */5;\n    default:\n      return /* Nothing */65;\n  }\n}\n\nexports.keycodeMap = keycodeMap;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/web/events_web.js\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/web/events_web.js");
},
d: {}
},
"NM$$Reasongl$lib$js$src$events":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Events_web = __fastpack_require__(\"./web/events_web.js\");\n\nvar keycodeMap = Events_web.keycodeMap;\n\nexports.keycodeMap = keycodeMap;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/events.js\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/events.js");
},
d: {"./web/events_web.js":"NM$$Reasongl$lib$js$src$web$events_web"}
},
"NM$$gl$$_$$matrix$esm$common":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;;Object.defineProperty(exports, \"EPSILON\", {enumerable: true, get: function() {return EPSILON;}});\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;;Object.defineProperty(exports, \"ARRAY_TYPE\", {enumerable: true, get: function() {return ARRAY_TYPE;}});\nvar RANDOM = Math.random;;Object.defineProperty(exports, \"RANDOM\", {enumerable: true, get: function() {return RANDOM;}});\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n};Object.defineProperty(exports, \"setMatrixArrayType\", {enumerable: true, get: function() {return setMatrixArrayType;}});\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n};Object.defineProperty(exports, \"toRadian\", {enumerable: true, get: function() {return toRadian;}});\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/common.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/common.js");
},
d: {}
},
"NM$$gl$$_$$matrix$esm$mat2":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n};Object.defineProperty(exports, \"identity\", {enumerable: true, get: function() {return identity;}});\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n};Object.defineProperty(exports, \"transpose\", {enumerable: true, get: function() {return transpose;}});\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n};Object.defineProperty(exports, \"invert\", {enumerable: true, get: function() {return invert;}});\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n};Object.defineProperty(exports, \"adjoint\", {enumerable: true, get: function() {return adjoint;}});\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n};Object.defineProperty(exports, \"determinant\", {enumerable: true, get: function() {return determinant;}});\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n};Object.defineProperty(exports, \"rotate\", {enumerable: true, get: function() {return rotate;}});\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n};Object.defineProperty(exports, \"fromRotation\", {enumerable: true, get: function() {return fromRotation;}});\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n};Object.defineProperty(exports, \"fromScaling\", {enumerable: true, get: function() {return fromScaling;}});\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n};Object.defineProperty(exports, \"frob\", {enumerable: true, get: function() {return frob;}});\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n};Object.defineProperty(exports, \"LDU\", {enumerable: true, get: function() {return LDU;}});\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalar\", {enumerable: true, get: function() {return multiplyScalar;}});\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalarAndAdd\", {enumerable: true, get: function() {return multiplyScalarAndAdd;}});\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat2.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat2.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$mat2d":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n};Object.defineProperty(exports, \"identity\", {enumerable: true, get: function() {return identity;}});\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n};Object.defineProperty(exports, \"invert\", {enumerable: true, get: function() {return invert;}});\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n};Object.defineProperty(exports, \"determinant\", {enumerable: true, get: function() {return determinant;}});\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n};Object.defineProperty(exports, \"rotate\", {enumerable: true, get: function() {return rotate;}});\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n};Object.defineProperty(exports, \"translate\", {enumerable: true, get: function() {return translate;}});\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n};Object.defineProperty(exports, \"fromRotation\", {enumerable: true, get: function() {return fromRotation;}});\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n};Object.defineProperty(exports, \"fromScaling\", {enumerable: true, get: function() {return fromScaling;}});\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n};Object.defineProperty(exports, \"fromTranslation\", {enumerable: true, get: function() {return fromTranslation;}});\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n};Object.defineProperty(exports, \"frob\", {enumerable: true, get: function() {return frob;}});\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalar\", {enumerable: true, get: function() {return multiplyScalar;}});\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalarAndAdd\", {enumerable: true, get: function() {return multiplyScalarAndAdd;}});\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat2d.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat2d.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$mat3":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n};Object.defineProperty(exports, \"fromMat4\", {enumerable: true, get: function() {return fromMat4;}});\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"identity\", {enumerable: true, get: function() {return identity;}});\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n};Object.defineProperty(exports, \"transpose\", {enumerable: true, get: function() {return transpose;}});\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n};Object.defineProperty(exports, \"invert\", {enumerable: true, get: function() {return invert;}});\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n};Object.defineProperty(exports, \"adjoint\", {enumerable: true, get: function() {return adjoint;}});\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n};Object.defineProperty(exports, \"determinant\", {enumerable: true, get: function() {return determinant;}});\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n};Object.defineProperty(exports, \"translate\", {enumerable: true, get: function() {return translate;}});\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};Object.defineProperty(exports, \"rotate\", {enumerable: true, get: function() {return rotate;}});\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromTranslation\", {enumerable: true, get: function() {return fromTranslation;}});\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromRotation\", {enumerable: true, get: function() {return fromRotation;}});\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromScaling\", {enumerable: true, get: function() {return fromScaling;}});\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromMat2d\", {enumerable: true, get: function() {return fromMat2d;}});\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n};Object.defineProperty(exports, \"fromQuat\", {enumerable: true, get: function() {return fromQuat;}});\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n};Object.defineProperty(exports, \"normalFromMat4\", {enumerable: true, get: function() {return normalFromMat4;}});\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n};Object.defineProperty(exports, \"projection\", {enumerable: true, get: function() {return projection;}});\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n};Object.defineProperty(exports, \"frob\", {enumerable: true, get: function() {return frob;}});\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalar\", {enumerable: true, get: function() {return multiplyScalar;}});\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalarAndAdd\", {enumerable: true, get: function() {return multiplyScalarAndAdd;}});\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat3.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat3.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$mat4":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"identity\", {enumerable: true, get: function() {return identity;}});\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n};Object.defineProperty(exports, \"transpose\", {enumerable: true, get: function() {return transpose;}});\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n};Object.defineProperty(exports, \"invert\", {enumerable: true, get: function() {return invert;}});\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n};Object.defineProperty(exports, \"adjoint\", {enumerable: true, get: function() {return adjoint;}});\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n};Object.defineProperty(exports, \"determinant\", {enumerable: true, get: function() {return determinant;}});\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n};Object.defineProperty(exports, \"translate\", {enumerable: true, get: function() {return translate;}});\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n};Object.defineProperty(exports, \"rotate\", {enumerable: true, get: function() {return rotate;}});\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n};Object.defineProperty(exports, \"rotateX\", {enumerable: true, get: function() {return rotateX;}});\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n};Object.defineProperty(exports, \"rotateY\", {enumerable: true, get: function() {return rotateY;}});\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n};Object.defineProperty(exports, \"rotateZ\", {enumerable: true, get: function() {return rotateZ;}});\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromTranslation\", {enumerable: true, get: function() {return fromTranslation;}});\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromScaling\", {enumerable: true, get: function() {return fromScaling;}});\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromRotation\", {enumerable: true, get: function() {return fromRotation;}});\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromXRotation\", {enumerable: true, get: function() {return fromXRotation;}});\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromYRotation\", {enumerable: true, get: function() {return fromYRotation;}});\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromZRotation\", {enumerable: true, get: function() {return fromZRotation;}});\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromRotationTranslation\", {enumerable: true, get: function() {return fromRotationTranslation;}});\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n};Object.defineProperty(exports, \"fromQuat2\", {enumerable: true, get: function() {return fromQuat2;}});\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n};Object.defineProperty(exports, \"getTranslation\", {enumerable: true, get: function() {return getTranslation;}});\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n  return out;\n};Object.defineProperty(exports, \"getScaling\", {enumerable: true, get: function() {return getScaling;}});\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"getRotation\", {enumerable: true, get: function() {return getRotation;}});\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromRotationTranslationScale\", {enumerable: true, get: function() {return fromRotationTranslationScale;}});\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromRotationTranslationScaleOrigin\", {enumerable: true, get: function() {return fromRotationTranslationScaleOrigin;}});\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"fromQuat\", {enumerable: true, get: function() {return fromQuat;}});\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n};Object.defineProperty(exports, \"frustum\", {enumerable: true, get: function() {return frustum;}});\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"perspective\", {enumerable: true, get: function() {return perspective;}});\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n};Object.defineProperty(exports, \"perspectiveFromFieldOfView\", {enumerable: true, get: function() {return perspectiveFromFieldOfView;}});\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"ortho\", {enumerable: true, get: function() {return ortho;}});\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"lookAt\", {enumerable: true, get: function() {return lookAt;}});\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};Object.defineProperty(exports, \"targetTo\", {enumerable: true, get: function() {return targetTo;}});\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n};Object.defineProperty(exports, \"frob\", {enumerable: true, get: function() {return frob;}});\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalar\", {enumerable: true, get: function() {return multiplyScalar;}});\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n};Object.defineProperty(exports, \"multiplyScalarAndAdd\", {enumerable: true, get: function() {return multiplyScalarAndAdd;}});\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat4.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/mat4.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$vec3":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n};Object.defineProperty(exports, \"length\", {enumerable: true, get: function() {return length;}});\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n};Object.defineProperty(exports, \"divide\", {enumerable: true, get: function() {return divide;}});\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n};Object.defineProperty(exports, \"ceil\", {enumerable: true, get: function() {return ceil;}});\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n};Object.defineProperty(exports, \"floor\", {enumerable: true, get: function() {return floor;}});\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n};Object.defineProperty(exports, \"min\", {enumerable: true, get: function() {return min;}});\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n};Object.defineProperty(exports, \"max\", {enumerable: true, get: function() {return max;}});\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n};Object.defineProperty(exports, \"round\", {enumerable: true, get: function() {return round;}});\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n};Object.defineProperty(exports, \"scaleAndAdd\", {enumerable: true, get: function() {return scaleAndAdd;}});\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n};Object.defineProperty(exports, \"distance\", {enumerable: true, get: function() {return distance;}});\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n};Object.defineProperty(exports, \"squaredDistance\", {enumerable: true, get: function() {return squaredDistance;}});\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n};Object.defineProperty(exports, \"squaredLength\", {enumerable: true, get: function() {return squaredLength;}});\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n};Object.defineProperty(exports, \"negate\", {enumerable: true, get: function() {return negate;}});\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n};Object.defineProperty(exports, \"inverse\", {enumerable: true, get: function() {return inverse;}});\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n};Object.defineProperty(exports, \"normalize\", {enumerable: true, get: function() {return normalize;}});\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n};Object.defineProperty(exports, \"dot\", {enumerable: true, get: function() {return dot;}});\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n};Object.defineProperty(exports, \"cross\", {enumerable: true, get: function() {return cross;}});\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n};Object.defineProperty(exports, \"lerp\", {enumerable: true, get: function() {return lerp;}});\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n};Object.defineProperty(exports, \"hermite\", {enumerable: true, get: function() {return hermite;}});\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n};Object.defineProperty(exports, \"bezier\", {enumerable: true, get: function() {return bezier;}});\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n};Object.defineProperty(exports, \"random\", {enumerable: true, get: function() {return random;}});\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n};Object.defineProperty(exports, \"transformMat4\", {enumerable: true, get: function() {return transformMat4;}});\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n};Object.defineProperty(exports, \"transformMat3\", {enumerable: true, get: function() {return transformMat3;}});\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n};Object.defineProperty(exports, \"transformQuat\", {enumerable: true, get: function() {return transformQuat;}});\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n};Object.defineProperty(exports, \"rotateX\", {enumerable: true, get: function() {return rotateX;}});\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n};Object.defineProperty(exports, \"rotateY\", {enumerable: true, get: function() {return rotateY;}});\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n};Object.defineProperty(exports, \"rotateZ\", {enumerable: true, get: function() {return rotateZ;}});\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n};Object.defineProperty(exports, \"angle\", {enumerable: true, get: function() {return angle;}});\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n};Object.defineProperty(exports, \"zero\", {enumerable: true, get: function() {return zero;}});\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nvar div = divide;;Object.defineProperty(exports, \"div\", {enumerable: true, get: function() {return div;}});\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nvar dist = distance;;Object.defineProperty(exports, \"dist\", {enumerable: true, get: function() {return dist;}});\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;;Object.defineProperty(exports, \"sqrDist\", {enumerable: true, get: function() {return sqrDist;}});\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nvar len = length;;Object.defineProperty(exports, \"len\", {enumerable: true, get: function() {return len;}});\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;;Object.defineProperty(exports, \"sqrLen\", {enumerable: true, get: function() {return sqrLen;}});\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();;Object.defineProperty(exports, \"forEach\", {enumerable: true, get: function() {return forEach;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/vec3.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/vec3.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$vec4":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n};Object.defineProperty(exports, \"divide\", {enumerable: true, get: function() {return divide;}});\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n};Object.defineProperty(exports, \"ceil\", {enumerable: true, get: function() {return ceil;}});\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n};Object.defineProperty(exports, \"floor\", {enumerable: true, get: function() {return floor;}});\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n};Object.defineProperty(exports, \"min\", {enumerable: true, get: function() {return min;}});\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n};Object.defineProperty(exports, \"max\", {enumerable: true, get: function() {return max;}});\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n};Object.defineProperty(exports, \"round\", {enumerable: true, get: function() {return round;}});\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n};Object.defineProperty(exports, \"scaleAndAdd\", {enumerable: true, get: function() {return scaleAndAdd;}});\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n};Object.defineProperty(exports, \"distance\", {enumerable: true, get: function() {return distance;}});\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n};Object.defineProperty(exports, \"squaredDistance\", {enumerable: true, get: function() {return squaredDistance;}});\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n};Object.defineProperty(exports, \"length\", {enumerable: true, get: function() {return length;}});\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n};Object.defineProperty(exports, \"squaredLength\", {enumerable: true, get: function() {return squaredLength;}});\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n};Object.defineProperty(exports, \"negate\", {enumerable: true, get: function() {return negate;}});\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n};Object.defineProperty(exports, \"inverse\", {enumerable: true, get: function() {return inverse;}});\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n};Object.defineProperty(exports, \"normalize\", {enumerable: true, get: function() {return normalize;}});\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n};Object.defineProperty(exports, \"dot\", {enumerable: true, get: function() {return dot;}});\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n};Object.defineProperty(exports, \"cross\", {enumerable: true, get: function() {return cross;}});\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n};Object.defineProperty(exports, \"lerp\", {enumerable: true, get: function() {return lerp;}});\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n};Object.defineProperty(exports, \"random\", {enumerable: true, get: function() {return random;}});\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n};Object.defineProperty(exports, \"transformMat4\", {enumerable: true, get: function() {return transformMat4;}});\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n};Object.defineProperty(exports, \"transformQuat\", {enumerable: true, get: function() {return transformQuat;}});\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n};Object.defineProperty(exports, \"zero\", {enumerable: true, get: function() {return zero;}});\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nvar div = divide;;Object.defineProperty(exports, \"div\", {enumerable: true, get: function() {return div;}});\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nvar dist = distance;;Object.defineProperty(exports, \"dist\", {enumerable: true, get: function() {return dist;}});\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;;Object.defineProperty(exports, \"sqrDist\", {enumerable: true, get: function() {return sqrDist;}});\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nvar len = length;;Object.defineProperty(exports, \"len\", {enumerable: true, get: function() {return len;}});\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;;Object.defineProperty(exports, \"sqrLen\", {enumerable: true, get: function() {return sqrLen;}});\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();;Object.defineProperty(exports, \"forEach\", {enumerable: true, get: function() {return forEach;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/vec4.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/vec4.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$quat":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\nconst mat3 = __fastpack_require__(\"./mat3.js\");\nconst vec3 = __fastpack_require__(\"./vec3.js\");\nconst vec4 = __fastpack_require__(\"./vec4.js\");\n\n\n\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n};Object.defineProperty(exports, \"identity\", {enumerable: true, get: function() {return identity;}});\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n};Object.defineProperty(exports, \"setAxisAngle\", {enumerable: true, get: function() {return setAxisAngle;}});\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n};Object.defineProperty(exports, \"getAxisAngle\", {enumerable: true, get: function() {return getAxisAngle;}});\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n};Object.defineProperty(exports, \"rotateX\", {enumerable: true, get: function() {return rotateX;}});\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n};Object.defineProperty(exports, \"rotateY\", {enumerable: true, get: function() {return rotateY;}});\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n};Object.defineProperty(exports, \"rotateZ\", {enumerable: true, get: function() {return rotateZ;}});\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n};Object.defineProperty(exports, \"calculateW\", {enumerable: true, get: function() {return calculateW;}});\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n};Object.defineProperty(exports, \"slerp\", {enumerable: true, get: function() {return slerp;}});\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n};Object.defineProperty(exports, \"random\", {enumerable: true, get: function() {return random;}});\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n};Object.defineProperty(exports, \"invert\", {enumerable: true, get: function() {return invert;}});\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n};Object.defineProperty(exports, \"conjugate\", {enumerable: true, get: function() {return conjugate;}});\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"fromMat3\", {enumerable: true, get: function() {return fromMat3;}});\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n};Object.defineProperty(exports, \"fromEuler\", {enumerable: true, get: function() {return fromEuler;}});\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar clone = vec4.clone;;Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar fromValues = vec4.fromValues;;Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar copy = vec4.copy;;Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar set = vec4.set;;Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar add = vec4.add;;Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar scale = vec4.scale;;Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = vec4.dot;;Object.defineProperty(exports, \"dot\", {enumerable: true, get: function() {return dot;}});\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar lerp = vec4.lerp;;Object.defineProperty(exports, \"lerp\", {enumerable: true, get: function() {return lerp;}});\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nvar length = vec4.length;;Object.defineProperty(exports, \"length\", {enumerable: true, get: function() {return length;}});\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nvar len = length;;Object.defineProperty(exports, \"len\", {enumerable: true, get: function() {return len;}});\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = vec4.squaredLength;;Object.defineProperty(exports, \"squaredLength\", {enumerable: true, get: function() {return squaredLength;}});\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;;Object.defineProperty(exports, \"sqrLen\", {enumerable: true, get: function() {return sqrLen;}});\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar normalize = vec4.normalize;;Object.defineProperty(exports, \"normalize\", {enumerable: true, get: function() {return normalize;}});\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar exactEquals = vec4.exactEquals;;Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar equals = vec4.equals;;Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();;Object.defineProperty(exports, \"rotationTo\", {enumerable: true, get: function() {return rotationTo;}});\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();;Object.defineProperty(exports, \"sqlerp\", {enumerable: true, get: function() {return sqlerp;}});\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nvar setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();;Object.defineProperty(exports, \"setAxes\", {enumerable: true, get: function() {return setAxes;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/quat.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/quat.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common","./mat3.js":"NM$$gl$$_$$matrix$esm$mat3","./vec3.js":"NM$$gl$$_$$matrix$esm$vec3","./vec4.js":"NM$$gl$$_$$matrix$esm$vec4"}
},
"NM$$gl$$_$$matrix$esm$quat2":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\nconst quat = __fastpack_require__(\"./quat.js\");\nconst mat4 = __fastpack_require__(\"./mat4.js\");\n\n\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nfunction create() {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction clone(a) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new glMatrix.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n};Object.defineProperty(exports, \"fromRotationTranslationValues\", {enumerable: true, get: function() {return fromRotationTranslationValues;}});\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n};Object.defineProperty(exports, \"fromRotationTranslation\", {enumerable: true, get: function() {return fromRotationTranslation;}});\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n};Object.defineProperty(exports, \"fromTranslation\", {enumerable: true, get: function() {return fromTranslation;}});\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n};Object.defineProperty(exports, \"fromRotation\", {enumerable: true, get: function() {return fromRotation;}});\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = quat.create();\n  mat4.getRotation(outer, a);\n  var t = new glMatrix.ARRAY_TYPE(3);\n  mat4.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n};Object.defineProperty(exports, \"fromMat4\", {enumerable: true, get: function() {return fromMat4;}});\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n};Object.defineProperty(exports, \"identity\", {enumerable: true, get: function() {return identity;}});\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nvar getReal = quat.copy;;Object.defineProperty(exports, \"getReal\", {enumerable: true, get: function() {return getReal;}});\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n};Object.defineProperty(exports, \"getDual\", {enumerable: true, get: function() {return getDual;}});\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nvar setReal = quat.copy;;Object.defineProperty(exports, \"setReal\", {enumerable: true, get: function() {return setReal;}});\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n};Object.defineProperty(exports, \"setDual\", {enumerable: true, get: function() {return setDual;}});\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n};Object.defineProperty(exports, \"getTranslation\", {enumerable: true, get: function() {return getTranslation;}});\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n};Object.defineProperty(exports, \"translate\", {enumerable: true, get: function() {return translate;}});\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n};Object.defineProperty(exports, \"rotateX\", {enumerable: true, get: function() {return rotateX;}});\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n};Object.defineProperty(exports, \"rotateY\", {enumerable: true, get: function() {return rotateY;}});\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  quat.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n};Object.defineProperty(exports, \"rotateZ\", {enumerable: true, get: function() {return rotateZ;}});\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n};Object.defineProperty(exports, \"rotateByQuatAppend\", {enumerable: true, get: function() {return rotateByQuatAppend;}});\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n};Object.defineProperty(exports, \"rotateByQuatPrepend\", {enumerable: true, get: function() {return rotateByQuatPrepend;}});\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < glMatrix.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n};Object.defineProperty(exports, \"rotateAroundAxis\", {enumerable: true, get: function() {return rotateAroundAxis;}});\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = quat.dot;;Object.defineProperty(exports, \"dot\", {enumerable: true, get: function() {return dot;}});\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n};Object.defineProperty(exports, \"lerp\", {enumerable: true, get: function() {return lerp;}});\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n};Object.defineProperty(exports, \"invert\", {enumerable: true, get: function() {return invert;}});\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n};Object.defineProperty(exports, \"conjugate\", {enumerable: true, get: function() {return conjugate;}});\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nvar length = quat.length;;Object.defineProperty(exports, \"length\", {enumerable: true, get: function() {return length;}});\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nvar len = length;;Object.defineProperty(exports, \"len\", {enumerable: true, get: function() {return len;}});\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = quat.squaredLength;;Object.defineProperty(exports, \"squaredLength\", {enumerable: true, get: function() {return squaredLength;}});\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;;Object.defineProperty(exports, \"sqrLen\", {enumerable: true, get: function() {return sqrLen;}});\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"normalize\", {enumerable: true, get: function() {return normalize;}});\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nfunction str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/quat2.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/quat2.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common","./quat.js":"NM$$gl$$_$$matrix$esm$quat","./mat4.js":"NM$$gl$$_$$matrix$esm$mat4"}
},
"NM$$gl$$_$$matrix$esm$vec2":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n};Object.defineProperty(exports, \"create\", {enumerable: true, get: function() {return create;}});\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n};Object.defineProperty(exports, \"clone\", {enumerable: true, get: function() {return clone;}});\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n};Object.defineProperty(exports, \"fromValues\", {enumerable: true, get: function() {return fromValues;}});\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n};Object.defineProperty(exports, \"copy\", {enumerable: true, get: function() {return copy;}});\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n};Object.defineProperty(exports, \"set\", {enumerable: true, get: function() {return set;}});\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n};Object.defineProperty(exports, \"add\", {enumerable: true, get: function() {return add;}});\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n};Object.defineProperty(exports, \"subtract\", {enumerable: true, get: function() {return subtract;}});\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};Object.defineProperty(exports, \"multiply\", {enumerable: true, get: function() {return multiply;}});\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};Object.defineProperty(exports, \"divide\", {enumerable: true, get: function() {return divide;}});\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};Object.defineProperty(exports, \"ceil\", {enumerable: true, get: function() {return ceil;}});\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};Object.defineProperty(exports, \"floor\", {enumerable: true, get: function() {return floor;}});\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};Object.defineProperty(exports, \"min\", {enumerable: true, get: function() {return min;}});\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};Object.defineProperty(exports, \"max\", {enumerable: true, get: function() {return max;}});\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};Object.defineProperty(exports, \"round\", {enumerable: true, get: function() {return round;}});\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};Object.defineProperty(exports, \"scale\", {enumerable: true, get: function() {return scale;}});\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n};Object.defineProperty(exports, \"scaleAndAdd\", {enumerable: true, get: function() {return scaleAndAdd;}});\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n};Object.defineProperty(exports, \"distance\", {enumerable: true, get: function() {return distance;}});\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n};Object.defineProperty(exports, \"squaredDistance\", {enumerable: true, get: function() {return squaredDistance;}});\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n};Object.defineProperty(exports, \"length\", {enumerable: true, get: function() {return length;}});\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n};Object.defineProperty(exports, \"squaredLength\", {enumerable: true, get: function() {return squaredLength;}});\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};Object.defineProperty(exports, \"negate\", {enumerable: true, get: function() {return negate;}});\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};Object.defineProperty(exports, \"inverse\", {enumerable: true, get: function() {return inverse;}});\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n};Object.defineProperty(exports, \"normalize\", {enumerable: true, get: function() {return normalize;}});\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};Object.defineProperty(exports, \"dot\", {enumerable: true, get: function() {return dot;}});\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};Object.defineProperty(exports, \"cross\", {enumerable: true, get: function() {return cross;}});\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};Object.defineProperty(exports, \"lerp\", {enumerable: true, get: function() {return lerp;}});\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};Object.defineProperty(exports, \"random\", {enumerable: true, get: function() {return random;}});\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};Object.defineProperty(exports, \"transformMat2\", {enumerable: true, get: function() {return transformMat2;}});\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};Object.defineProperty(exports, \"transformMat2d\", {enumerable: true, get: function() {return transformMat2d;}});\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};Object.defineProperty(exports, \"transformMat3\", {enumerable: true, get: function() {return transformMat3;}});\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n};Object.defineProperty(exports, \"transformMat4\", {enumerable: true, get: function() {return transformMat4;}});\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nfunction rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n};Object.defineProperty(exports, \"rotate\", {enumerable: true, get: function() {return rotate;}});\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n};Object.defineProperty(exports, \"angle\", {enumerable: true, get: function() {return angle;}});\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n};Object.defineProperty(exports, \"zero\", {enumerable: true, get: function() {return zero;}});\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n};Object.defineProperty(exports, \"str\", {enumerable: true, get: function() {return str;}});\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n};Object.defineProperty(exports, \"exactEquals\", {enumerable: true, get: function() {return exactEquals;}});\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n};Object.defineProperty(exports, \"equals\", {enumerable: true, get: function() {return equals;}});\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nvar len = length;;Object.defineProperty(exports, \"len\", {enumerable: true, get: function() {return len;}});\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;;Object.defineProperty(exports, \"sub\", {enumerable: true, get: function() {return sub;}});\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;;Object.defineProperty(exports, \"mul\", {enumerable: true, get: function() {return mul;}});\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nvar div = divide;;Object.defineProperty(exports, \"div\", {enumerable: true, get: function() {return div;}});\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nvar dist = distance;;Object.defineProperty(exports, \"dist\", {enumerable: true, get: function() {return dist;}});\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;;Object.defineProperty(exports, \"sqrDist\", {enumerable: true, get: function() {return sqrDist;}});\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;;Object.defineProperty(exports, \"sqrLen\", {enumerable: true, get: function() {return sqrLen;}});\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();;Object.defineProperty(exports, \"forEach\", {enumerable: true, get: function() {return forEach;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/vec2.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/vec2.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common"}
},
"NM$$gl$$_$$matrix$esm$index":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\nconst glMatrix = __fastpack_require__(\"./common.js\");\nconst mat2 = __fastpack_require__(\"./mat2.js\");\nconst mat2d = __fastpack_require__(\"./mat2d.js\");\nconst mat3 = __fastpack_require__(\"./mat3.js\");\nconst mat4 = __fastpack_require__(\"./mat4.js\");\nconst quat = __fastpack_require__(\"./quat.js\");\nconst quat2 = __fastpack_require__(\"./quat2.js\");\nconst vec2 = __fastpack_require__(\"./vec2.js\");\nconst vec3 = __fastpack_require__(\"./vec3.js\");\nconst vec4 = __fastpack_require__(\"./vec4.js\");\n\n\n\n\n\n\n\n\n\n\nObject.defineProperty(exports, \"glMatrix\", {enumerable: true, get: function() {return glMatrix;}});Object.defineProperty(exports, \"mat2\", {enumerable: true, get: function() {return mat2;}});Object.defineProperty(exports, \"mat2d\", {enumerable: true, get: function() {return mat2d;}});Object.defineProperty(exports, \"mat3\", {enumerable: true, get: function() {return mat3;}});Object.defineProperty(exports, \"mat4\", {enumerable: true, get: function() {return mat4;}});Object.defineProperty(exports, \"quat\", {enumerable: true, get: function() {return quat;}});Object.defineProperty(exports, \"quat2\", {enumerable: true, get: function() {return quat2;}});Object.defineProperty(exports, \"vec2\", {enumerable: true, get: function() {return vec2;}});Object.defineProperty(exports, \"vec3\", {enumerable: true, get: function() {return vec3;}});Object.defineProperty(exports, \"vec4\", {enumerable: true, get: function() {return vec4;}});\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/index.js\n//# sourceURL=fpack:///node_modules/gl-matrix/esm/index.js");
},
d: {"./common.js":"NM$$gl$$_$$matrix$esm$common","./mat2.js":"NM$$gl$$_$$matrix$esm$mat2","./mat2d.js":"NM$$gl$$_$$matrix$esm$mat2d","./mat3.js":"NM$$gl$$_$$matrix$esm$mat3","./mat4.js":"NM$$gl$$_$$matrix$esm$mat4","./quat.js":"NM$$gl$$_$$matrix$esm$quat","./quat2.js":"NM$$gl$$_$$matrix$esm$quat2","./vec2.js":"NM$$gl$$_$$matrix$esm$vec2","./vec3.js":"NM$$gl$$_$$matrix$esm$vec3","./vec4.js":"NM$$gl$$_$$matrix$esm$vec4"}
},
"NM$$Reasongl$lib$js$src$RGLConstants":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\n\nvar triangles = 4;\n\nvar triangle_strip = 5;\n\nvar texture0 = 33984;\n\nvar texture1 = 33985;\n\nvar texture2 = 33986;\n\nvar texture_2d = 3553;\n\nvar blend = 3042;\n\nvar texture_wrap_s = 10242;\n\nvar texture_wrap_t = 10243;\n\nvar clamp_to_edge = 33071;\n\nvar src_alpha = 770;\n\nvar one_minus_src_alpha = 771;\n\nvar dst_alpha = 772;\n\nvar depth_test = 2929;\n\nvar cull_face = 2884;\n\nvar rgb = 6407;\n\nvar rgba = 6408;\n\nvar triangle_fan = 6;\n\nvar array_buffer = 34962;\n\nvar element_array_buffer = 34963;\n\nvar array_buffer_binding = 34964;\n\nvar element_array_buffer_binding = 34965;\n\nvar stream_draw = 35040;\n\nvar static_draw = 35044;\n\nvar dynamic_draw = 35048;\n\nvar buffer_size = 34660;\n\nvar buffer_usage = 34661;\n\nvar float_ = 5126;\n\nvar unsigned_int = 5125;\n\nvar current_vertex_attrib = 34342;\n\nvar fragment_shader = 35632;\n\nvar vertex_shader = 35633;\n\nvar max_vertex_attribs = 34921;\n\nvar max_vertex_uniform_vectors = 36347;\n\nvar max_varying_vectors = 36348;\n\nvar max_combined_texture_image_units = 35661;\n\nvar max_vertex_texture_image_units = 35660;\n\nvar max_texture_image_units = 34930;\n\nvar max_fragment_uniform_vectors = 36349;\n\nvar shader_type = 35663;\n\nvar delete_status = 35712;\n\nvar link_status = 35714;\n\nvar validate_status = 35715;\n\nvar attached_shaders = 35717;\n\nvar active_uniforms = 35718;\n\nvar active_attributes = 35721;\n\nvar shading_language_version = 35724;\n\nvar current_program = 35725;\n\nvar compile_status = 35713;\n\nvar vendor = 7936;\n\nvar renderer = 7937;\n\nvar version = 7938;\n\nvar float_vec2 = 35664;\n\nvar float_vec3 = 35665;\n\nvar float_vec4 = 35666;\n\nvar int_vec2 = 35667;\n\nvar int_vec3 = 35668;\n\nvar int_vec4 = 35669;\n\nvar bool_ = 35670;\n\nvar bool_vec2 = 35671;\n\nvar bool_vec3 = 35672;\n\nvar bool_vec4 = 35673;\n\nvar float_mat2 = 35674;\n\nvar float_mat3 = 35675;\n\nvar float_mat4 = 35676;\n\nvar sampler_2d = 35678;\n\nvar sampler_cube = 35680;\n\nvar unpack_flip_y_webgl = 37440;\n\nvar unpack_premultiply_alpha_webgl = 37441;\n\nvar context_lost_webgl = 37442;\n\nvar unpack_colorspace_conversion_webgl = 37443;\n\nvar browser_default_webgl = 37444;\n\nvar vertex_attrib_array_enabled = 34338;\n\nvar vertex_attrib_array_size = 34339;\n\nvar vertex_attrib_array_stride = 34340;\n\nvar vertex_attrib_array_type = 34341;\n\nvar vertex_attrib_array_normalized = 34922;\n\nvar vertex_attrib_array_pointer = 34373;\n\nvar vertex_attrib_array_buffer_binding = 34975;\n\nvar depth_buffer_bit = 256;\n\nvar stencil_buffer_bit = 1024;\n\nvar color_buffer_bit = 16384;\n\nvar unsigned_short = 5123;\n\nvar unsigned_byte = 5121;\n\nvar texture_mag_filter = 10240;\n\nvar texture_min_filter = 10241;\n\nvar nearest = 9728;\n\nvar linear = 9729;\n\nvar nearest_mipmap_nearest = 9984;\n\nvar linear_mipmap_nearest = 9985;\n\nvar nearest_mipmap_linear = 9986;\n\nvar linear_mipmap_linear = 9987;\n\nvar framebuffer = 36160;\n\nvar color_attachment0 = 36064;\n\nexports.triangles = triangles;\nexports.triangle_strip = triangle_strip;\nexports.texture0 = texture0;\nexports.texture1 = texture1;\nexports.texture2 = texture2;\nexports.texture_2d = texture_2d;\nexports.blend = blend;\nexports.texture_wrap_s = texture_wrap_s;\nexports.texture_wrap_t = texture_wrap_t;\nexports.clamp_to_edge = clamp_to_edge;\nexports.src_alpha = src_alpha;\nexports.one_minus_src_alpha = one_minus_src_alpha;\nexports.dst_alpha = dst_alpha;\nexports.depth_test = depth_test;\nexports.cull_face = cull_face;\nexports.rgb = rgb;\nexports.rgba = rgba;\nexports.triangle_fan = triangle_fan;\nexports.array_buffer = array_buffer;\nexports.element_array_buffer = element_array_buffer;\nexports.array_buffer_binding = array_buffer_binding;\nexports.element_array_buffer_binding = element_array_buffer_binding;\nexports.stream_draw = stream_draw;\nexports.static_draw = static_draw;\nexports.dynamic_draw = dynamic_draw;\nexports.buffer_size = buffer_size;\nexports.buffer_usage = buffer_usage;\nexports.float_ = float_;\nexports.unsigned_int = unsigned_int;\nexports.current_vertex_attrib = current_vertex_attrib;\nexports.fragment_shader = fragment_shader;\nexports.vertex_shader = vertex_shader;\nexports.max_vertex_attribs = max_vertex_attribs;\nexports.max_vertex_uniform_vectors = max_vertex_uniform_vectors;\nexports.max_varying_vectors = max_varying_vectors;\nexports.max_combined_texture_image_units = max_combined_texture_image_units;\nexports.max_vertex_texture_image_units = max_vertex_texture_image_units;\nexports.max_texture_image_units = max_texture_image_units;\nexports.max_fragment_uniform_vectors = max_fragment_uniform_vectors;\nexports.shader_type = shader_type;\nexports.delete_status = delete_status;\nexports.link_status = link_status;\nexports.validate_status = validate_status;\nexports.attached_shaders = attached_shaders;\nexports.active_uniforms = active_uniforms;\nexports.active_attributes = active_attributes;\nexports.shading_language_version = shading_language_version;\nexports.current_program = current_program;\nexports.compile_status = compile_status;\nexports.vendor = vendor;\nexports.renderer = renderer;\nexports.version = version;\nexports.float_vec2 = float_vec2;\nexports.float_vec3 = float_vec3;\nexports.float_vec4 = float_vec4;\nexports.int_vec2 = int_vec2;\nexports.int_vec3 = int_vec3;\nexports.int_vec4 = int_vec4;\nexports.bool_ = bool_;\nexports.bool_vec2 = bool_vec2;\nexports.bool_vec3 = bool_vec3;\nexports.bool_vec4 = bool_vec4;\nexports.float_mat2 = float_mat2;\nexports.float_mat3 = float_mat3;\nexports.float_mat4 = float_mat4;\nexports.sampler_2d = sampler_2d;\nexports.sampler_cube = sampler_cube;\nexports.unpack_flip_y_webgl = unpack_flip_y_webgl;\nexports.unpack_premultiply_alpha_webgl = unpack_premultiply_alpha_webgl;\nexports.context_lost_webgl = context_lost_webgl;\nexports.unpack_colorspace_conversion_webgl = unpack_colorspace_conversion_webgl;\nexports.browser_default_webgl = browser_default_webgl;\nexports.vertex_attrib_array_enabled = vertex_attrib_array_enabled;\nexports.vertex_attrib_array_size = vertex_attrib_array_size;\nexports.vertex_attrib_array_stride = vertex_attrib_array_stride;\nexports.vertex_attrib_array_type = vertex_attrib_array_type;\nexports.vertex_attrib_array_normalized = vertex_attrib_array_normalized;\nexports.vertex_attrib_array_pointer = vertex_attrib_array_pointer;\nexports.vertex_attrib_array_buffer_binding = vertex_attrib_array_buffer_binding;\nexports.depth_buffer_bit = depth_buffer_bit;\nexports.stencil_buffer_bit = stencil_buffer_bit;\nexports.color_buffer_bit = color_buffer_bit;\nexports.unsigned_short = unsigned_short;\nexports.unsigned_byte = unsigned_byte;\nexports.texture_mag_filter = texture_mag_filter;\nexports.texture_min_filter = texture_min_filter;\nexports.nearest = nearest;\nexports.linear = linear;\nexports.nearest_mipmap_nearest = nearest_mipmap_nearest;\nexports.linear_mipmap_nearest = linear_mipmap_nearest;\nexports.nearest_mipmap_linear = nearest_mipmap_linear;\nexports.linear_mipmap_linear = linear_mipmap_linear;\nexports.framebuffer = framebuffer;\nexports.color_attachment0 = color_attachment0;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/RGLConstants.js\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/RGLConstants.js");
},
d: {}
},
"NM$$Reasongl$lib$js$src$web$reasongl_web":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Events = __fastpack_require__(\"../events.js\");\nvar GlMatrix = __fastpack_require__(\"gl-matrix\");\nvar Caml_int32 = __fastpack_require__(\"bsb-native/lib/js/caml_int32.js\");\nvar Js_primitive = __fastpack_require__(\"bsb-native/lib/js/js_primitive.js\");\nvar RGLConstants = __fastpack_require__(\"../RGLConstants.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nvar $$window = (window);\n\nvar $$document = (document);\n\nvar Document = /* module */[\n  /* window */$$window,\n  /* document */$$document\n];\n\nfunction getTouch0(e, canvas) {\n  var touches = Array.prototype.slice.call(e.changedTouches);\n  if (touches.length !== 1) {\n    return undefined;\n  } else {\n    var t = touches[0];\n    var rect = canvas.getBoundingClientRect();\n    var x = t.clientX - rect.left | 0;\n    var y = t.clientY - rect.top | 0;\n    return /* tuple */[\n            t.identifier,\n            x,\n            y\n          ];\n  }\n}\n\nfunction createCanvas(param) {\n  return document.createElement(\"canvas\");\n}\n\nvar makeAudioContext = ( function(_) { return new (window.AudioContext || window.webkitAudioContext)(); } );\n\nfunction readFile(filename, cb) {\n  var rawFile = new XMLHttpRequest();\n  rawFile.open(\"GET\", filename, false);\n  rawFile.onreadystatechange = (function (param) {\n      if (rawFile.readyState === 4 && (rawFile.status === 200 || rawFile.status === 0)) {\n        return Curry._1(cb, rawFile.responseText);\n      } else {\n        return 0;\n      }\n    });\n  rawFile.send(null);\n  return /* () */0;\n}\n\nvar File = /* module */[/* readFile */readFile];\n\nfunction getWidth(param) {\n  return param[0].width / window.devicePixelRatio | 0;\n}\n\nfunction getHeight(param) {\n  return param[0].height / window.devicePixelRatio | 0;\n}\n\nfunction getPixelWidth(param) {\n  return param[0].width | 0;\n}\n\nfunction getPixelHeight(param) {\n  return param[0].height | 0;\n}\n\nfunction getPixelScale(param) {\n  return window.devicePixelRatio;\n}\n\nfunction init(screen, param) {\n  var node = screen !== undefined ? Js_primitive.nullable_to_opt(document.getElementById(screen)) : undefined;\n  var canvas;\n  if (node !== undefined) {\n    canvas = Js_primitive.valFromOption(node);\n  } else {\n    var canvas$1 = document.createElement(\"canvas\");\n    document.body.appendChild(canvas$1);\n    canvas = canvas$1;\n  }\n  canvas.style.backgroundColor = \"black\";\n  return /* tuple */[\n          canvas,\n          Curry._1(makeAudioContext, /* () */0)\n        ];\n}\n\nfunction setWindowSize(param, width, height) {\n  var w = param[0];\n  w.width = width * window.devicePixelRatio | 0;\n  w.height = height * window.devicePixelRatio | 0;\n  w.style.width = String(width) + \"px\";\n  w.style.height = String(height) + \"px\";\n  return /* () */0;\n}\n\nfunction setWindowTitle(param, title) {\n  $$document.title = title;\n  return /* () */0;\n}\n\nfunction getContext(param) {\n  return param[0].getContext(\"webgl\", {\n              preserveDrawingBuffer: true,\n              antialias: true\n            });\n}\n\nvar Window = /* module */[\n  /* getWidth */getWidth,\n  /* getHeight */getHeight,\n  /* getPixelWidth */getPixelWidth,\n  /* getPixelHeight */getPixelHeight,\n  /* getPixelScale */getPixelScale,\n  /* init */init,\n  /* setWindowSize */setWindowSize,\n  /* setWindowTitle */setWindowTitle,\n  /* getContext */getContext\n];\n\nfunction loadSound(param, path, cb) {\n  var audioctx = param[1];\n  var rawFile = new XMLHttpRequest();\n  rawFile.responseType = \"arraybuffer\";\n  rawFile.open(\"GET\", path, true);\n  rawFile.onreadystatechange = (function (param) {\n      if (rawFile.readyState === 4 && (rawFile.status === 200 || rawFile.status === 0)) {\n        audioctx.decodeAudioData(rawFile.response, cb);\n        return /* () */0;\n      } else {\n        return 0;\n      }\n    });\n  rawFile.send(null);\n  return /* () */0;\n}\n\nfunction playSound(param, sound, volume, loop) {\n  var audioctx = param[1];\n  var src = audioctx.createBufferSource();\n  var gain = audioctx.createGain();\n  gain.gain.value = volume;\n  src.buffer = sound;\n  src.connect(gain);\n  gain.connect(audioctx.destination);\n  src.start(0.0);\n  src.loop = loop;\n  return /* () */0;\n}\n\nvar Audio = /* module */[\n  /* loadSound */loadSound,\n  /* playSound */playSound\n];\n\nfunction render(param, mouseDown, mouseUp, mouseMove, keyDown, keyUp, windowResize, displayFunc, param$1) {\n  var canvas = param[0];\n  var singleTouchId = /* record */[/* contents */undefined];\n  if (mouseDown !== undefined) {\n    var cb = mouseDown;\n    canvas.addEventListener(\"touchstart\", (function (e) {\n            var match = getTouch0(e, canvas);\n            if (match !== undefined) {\n              var match$1 = match;\n              var match$2 = singleTouchId[0];\n              if (match$2 !== undefined) {\n                singleTouchId[0] = undefined;\n                return /* () */0;\n              } else {\n                singleTouchId[0] = match$1[0];\n                e.preventDefault();\n                return Curry._4(cb, /* LeftButton */0, /* MouseDown */0, match$1[1], match$1[2]);\n              }\n            } else {\n              return /* () */0;\n            }\n          }));\n    canvas.addEventListener(\"mousedown\", (function (e) {\n            var match = e.button;\n            var button;\n            if (match > 2 || match < 0) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    /* tuple */[\n                      \"reasongl_web.re\",\n                      329,\n                      19\n                    ]\n                  ];\n            } else {\n              button = match;\n            }\n            var rect = canvas.getBoundingClientRect();\n            var x = e.clientX - rect.left | 0;\n            var y = e.clientY - rect.top | 0;\n            return Curry._4(cb, button, /* MouseDown */0, x, y);\n          }));\n  }\n  if (mouseUp !== undefined) {\n    var cb$1 = mouseUp;\n    canvas.addEventListener(\"touchend\", (function (e) {\n            var match = getTouch0(e, canvas);\n            if (match !== undefined) {\n              var match$1 = match;\n              var match$2 = singleTouchId[0];\n              if (match$2 !== undefined && match$2 === match$1[0]) {\n                singleTouchId[0] = undefined;\n                e.preventDefault();\n                return Curry._4(cb$1, /* LeftButton */0, /* MouseUp */1, match$1[1], match$1[2]);\n              } else {\n                return /* () */0;\n              }\n            } else {\n              return /* () */0;\n            }\n          }));\n    canvas.addEventListener(\"touchcancel\", (function (e) {\n            var match = getTouch0(e, canvas);\n            if (match !== undefined) {\n              var match$1 = match;\n              var match$2 = singleTouchId[0];\n              if (match$2 !== undefined && match$2 === match$1[0]) {\n                singleTouchId[0] = undefined;\n                e.preventDefault();\n                return Curry._4(cb$1, /* LeftButton */0, /* MouseUp */1, match$1[1], match$1[2]);\n              } else {\n                return /* () */0;\n              }\n            } else {\n              return /* () */0;\n            }\n          }));\n    canvas.addEventListener(\"mouseup\", (function (e) {\n            var match = e.button;\n            var button;\n            if (match > 2 || match < 0) {\n              throw [\n                    Caml_builtin_exceptions.assert_failure,\n                    /* tuple */[\n                      \"reasongl_web.re\",\n                      377,\n                      19\n                    ]\n                  ];\n            } else {\n              button = match;\n            }\n            var rect = canvas.getBoundingClientRect();\n            var x = e.clientX - rect.left | 0;\n            var y = e.clientY - rect.top | 0;\n            return Curry._4(cb$1, button, /* MouseUp */1, x, y);\n          }));\n  }\n  if (mouseMove !== undefined) {\n    var cb$2 = mouseMove;\n    canvas.addEventListener(\"touchmove\", (function (e) {\n            var match = getTouch0(e, canvas);\n            if (match !== undefined) {\n              var match$1 = match;\n              var match$2 = singleTouchId[0];\n              if (match$2 !== undefined && match$2 === match$1[0]) {\n                e.preventDefault();\n                return Curry._2(cb$2, match$1[1], match$1[2]);\n              } else {\n                return /* () */0;\n              }\n            } else {\n              return /* () */0;\n            }\n          }));\n    canvas.addEventListener(\"mousemove\", (function (e) {\n            var rect = canvas.getBoundingClientRect();\n            var x = e.clientX - rect.left | 0;\n            var y = e.clientY - rect.top | 0;\n            return Curry._2(cb$2, x, y);\n          }));\n  }\n  var keyLastPressed = /* record */[/* contents : [] */0];\n  if (keyDown !== undefined) {\n    var cb$3 = keyDown;\n    $$window.addEventListener(\"keydown\", (function (e) {\n            var keycode = e.which;\n            var repeat = List.fold_left((function (acc, k) {\n                    if (acc) {\n                      return true;\n                    } else {\n                      return k === keycode;\n                    }\n                  }), false, keyLastPressed[0]);\n            if (!repeat) {\n              keyLastPressed[0] = /* :: */[\n                keycode,\n                keyLastPressed[0]\n              ];\n            }\n            return Curry._2(cb$3, Events.keycodeMap(keycode), repeat);\n          }));\n  }\n  if (keyUp !== undefined) {\n    var cb$4 = keyUp;\n    $$window.addEventListener(\"keyup\", (function (e) {\n            var keycode = e.which;\n            keyLastPressed[0] = List.filter((function (k) {\n                      return k !== keycode;\n                    }))(keyLastPressed[0]);\n            return Curry._1(cb$4, Events.keycodeMap(keycode));\n          }));\n  }\n  if (windowResize !== undefined) {\n    var cb$5 = windowResize;\n    $$window.addEventListener(\"resize\", (function (param) {\n            return Curry._1(cb$5, /* () */0);\n          }));\n  }\n  var frame = /* record */[/* contents */undefined];\n  var tick = function (prev, param) {\n    var now = Date.now();\n    Curry._1(displayFunc, now - prev);\n    var id = window.requestAnimationFrame((function (param) {\n            return tick(now, param);\n          }));\n    frame[0] = id;\n    canvas.__hiddenrafid = id;\n    return /* () */0;\n  };\n  var partial_arg = Date.now();\n  var id = window.requestAnimationFrame((function (param) {\n          return tick(partial_arg, param);\n        }));\n  frame[0] = id;\n  canvas.__hiddenrafid = id;\n  return (function (play) {\n      var match = frame[0];\n      if (match !== undefined) {\n        if (play) {\n          return true;\n        } else {\n          window.cancelAnimationFrame(match);\n          frame[0] = undefined;\n          return false;\n        }\n      } else if (play) {\n        var partial_arg = Date.now();\n        var id = window.requestAnimationFrame((function (param) {\n                return tick(partial_arg, param);\n              }));\n        frame[0] = id;\n        canvas.__hiddenrafid = id;\n        return true;\n      } else {\n        return false;\n      }\n    });\n}\n\nfunction shaderSource(context, shader, source) {\n  context.shaderSource(shader, \"#version 100 \\n precision highp float; \\n\" + source);\n  return /* () */0;\n}\n\nfunction create(kind, size) {\n  switch (kind) {\n    case 0 : \n        return new Float64Array(size);\n    case 1 : \n        return new Float32Array(size);\n    case 2 : \n        return new Int16Array(size);\n    case 3 : \n        return new Uint16Array(size);\n    case 4 : \n        return new Int8Array(size);\n    case 5 : \n    case 6 : \n        return new Uint8Array(size);\n    case 8 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"reasongl_web.re\",\n                674,\n                17\n              ]\n            ];\n    case 7 : \n    case 9 : \n        return new Int32Array(size);\n    \n  }\n}\n\nfunction of_array(kind, arr) {\n  switch (kind) {\n    case 0 : \n        return new Float64Array(arr);\n    case 1 : \n        return new Float32Array(arr);\n    case 2 : \n        return new Int16Array(arr);\n    case 3 : \n        return new Uint16Array(arr);\n    case 4 : \n        return new Int8Array(arr);\n    case 5 : \n    case 6 : \n        return new Uint8Array(arr);\n    case 8 : \n        throw [\n              Caml_builtin_exceptions.assert_failure,\n              /* tuple */[\n                \"reasongl_web.re\",\n                689,\n                17\n              ]\n            ];\n    case 7 : \n    case 9 : \n        return new Int32Array(arr);\n    \n  }\n}\n\nfunction unsafe_blit(arr, arr2, offset, param) {\n  arr2.set(arr, offset);\n  return /* () */0;\n}\n\nfunction sub(arr, offset, len) {\n  return arr.subarray(offset, offset + len | 0);\n}\n\nfunction readPixels_RGBA(context, x, y, width, height) {\n  var data = new Uint8Array((Caml_int32.imul(width, height) << 2));\n  context.readPixels(x, y, width, height, RGLConstants.rgba, RGLConstants.unsigned_byte, data);\n  return data;\n}\n\nfunction loadImage(filename, loadOption, callback, param) {\n  var image = new Image();\n  image.src = filename;\n  image.addEventListener(\"load\", (function (param) {\n          return Curry._1(callback, Js_primitive.some(image));\n        }));\n  return /* () */0;\n}\n\nfunction loadImageFromMemory(data, loadOption, callback, param) {\n  var image = new Image();\n  image.src = \"data:image/png;base64,\" + btoa(data);\n  image.addEventListener(\"load\", (function (param) {\n          return Curry._1(callback, Js_primitive.some(image));\n        }));\n  return /* () */0;\n}\n\nfunction texImage2DWithImage(context, target, level, image) {\n  context.texImage2D(target, level, RGLConstants.rgba, RGLConstants.rgba, RGLConstants.unsigned_byte, image);\n  return /* () */0;\n}\n\nfunction texImage2D_RGBA(context, target, level, width, height, border, data) {\n  context.texImage2D(target, level, RGLConstants.rgba, width, height, border, RGLConstants.rgba, RGLConstants.unsigned_byte, data);\n  return /* () */0;\n}\n\nvar texImage2D_null = ( function(gl, target, level, width, height) {\n    gl.texImage2D(target, level, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null)\n  } );\n\nfunction vertexAttribPointer(context, attribute, size, type_, normalize, stride, offset) {\n  var normalize$1 = normalize ? true : false;\n  context.vertexAttribPointer(attribute, size, type_, normalize$1, stride, offset);\n  return /* () */0;\n}\n\nfunction to_array(a) {\n  return a;\n}\n\nfunction Mat4_001(prim) {\n  return GlMatrix.mat4.create();\n}\n\nfunction Mat4_002(prim) {\n  GlMatrix.mat4.identity(prim);\n  return /* () */0;\n}\n\nfunction Mat4_003(prim, prim$1, prim$2) {\n  GlMatrix.mat4.translate(prim, prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Mat4_004(prim, prim$1, prim$2) {\n  GlMatrix.mat4.scale(prim, prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Mat4_005(prim, prim$1, prim$2, prim$3) {\n  GlMatrix.mat4.rotate(prim, prim$1, prim$2, prim$3);\n  return /* () */0;\n}\n\nfunction Mat4_006(prim, prim$1, prim$2, prim$3, prim$4, prim$5, prim$6) {\n  GlMatrix.mat4.ortho(prim, prim$1, prim$2, prim$3, prim$4, prim$5, prim$6);\n  return /* () */0;\n}\n\nfunction Mat4_007(prim, prim$1, prim$2, prim$3, prim$4) {\n  GlMatrix.mat4.perspective(prim, prim$1, prim$2, prim$3, prim$4);\n  return /* () */0;\n}\n\nfunction Mat4_008(prim, prim$1, prim$2, prim$3) {\n  GlMatrix.mat4.lookAt(prim, prim$1, prim$2, prim$3);\n  return /* () */0;\n}\n\nvar Mat4 = /* module */[\n  /* to_array */to_array,\n  Mat4_001,\n  Mat4_002,\n  Mat4_003,\n  Mat4_004,\n  Mat4_005,\n  Mat4_006,\n  Mat4_007,\n  Mat4_008\n];\n\nfunction uniformMatrix4fv(context, $$location, value) {\n  context.uniformMatrix4fv($$location, false, value);\n  return /* () */0;\n}\n\nfunction getProgramParameter(context, program, paramName) {\n  switch (paramName) {\n    case 0 : \n        if (context.getProgramParameter(program, context.DELETE_STATUS)) {\n          return 1;\n        } else {\n          return 0;\n        }\n    case 1 : \n        if (context.getProgramParameter(program, context.LINK_STATUS)) {\n          return 1;\n        } else {\n          return 0;\n        }\n    case 2 : \n        if (context.getProgramParameter(program, context.VALIDATE_STATUS)) {\n          return 1;\n        } else {\n          return 0;\n        }\n    \n  }\n}\n\nfunction getShaderParameter(context, shader, paramName) {\n  switch (paramName) {\n    case 0 : \n        if (context.getShaderParameter(shader, context.DELETE_STATUS)) {\n          return 1;\n        } else {\n          return 0;\n        }\n    case 1 : \n        if (context.getShaderParameter(shader, context.COMPILE_STATUS)) {\n          return 1;\n        } else {\n          return 0;\n        }\n    case 2 : \n        return context.getShaderParameter(shader, context.SHADER_TYPE);\n    \n  }\n}\n\nvar Gl_004 = /* Events : Events */[Events.keycodeMap];\n\nfunction Gl_006(prim, prim$1, prim$2, prim$3, prim$4) {\n  prim.clearColor(prim$1, prim$2, prim$3, prim$4);\n  return /* () */0;\n}\n\nfunction Gl_007(prim) {\n  return prim.createProgram();\n}\n\nfunction Gl_008(prim, prim$1) {\n  return prim.createShader(prim$1);\n}\n\nfunction Gl_009(prim, prim$1, prim$2) {\n  prim.attachShader(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_010(prim, prim$1) {\n  prim.deleteShader(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_012(prim, prim$1) {\n  prim.compileShader(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_013(prim, prim$1) {\n  prim.linkProgram(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_014(prim, prim$1) {\n  prim.useProgram(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_015(prim) {\n  return prim.createBuffer();\n}\n\nfunction Gl_016(prim, prim$1, prim$2) {\n  prim.bindBuffer(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_017(prim) {\n  return prim.createTexture();\n}\n\nfunction Gl_018(prim, prim$1) {\n  prim.activeTexture(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_019(prim, prim$1, prim$2) {\n  prim.bindTexture(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_020(prim, prim$1, prim$2, prim$3) {\n  prim.texParameteri(prim$1, prim$2, prim$3);\n  return /* () */0;\n}\n\nfunction Gl_021(prim) {\n  return prim.createFramebuffer();\n}\n\nfunction Gl_022(prim, prim$1, prim$2) {\n  prim.bindFramebuffer(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_023(prim, prim$1) {\n  prim.bindFramebuffer(prim$1, null);\n  return /* () */0;\n}\n\nfunction Gl_024(prim, prim$1, prim$2, prim$3, prim$4) {\n  prim.framebufferTexture2D(prim$1, prim$2, prim$3, prim$4, (0));\n  return /* () */0;\n}\n\nfunction Gl_025(prim, prim$1) {\n  prim.enable(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_026(prim, prim$1) {\n  prim.disable(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_027(prim, prim$1, prim$2) {\n  prim.blendFunc(prim$1, prim$2);\n  return /* () */0;\n}\n\nvar Gl_028 = /* Bigarray */[\n  create,\n  of_array,\n  (function (prim) {\n      return prim.length;\n    }),\n  (function (prim, prim$1) {\n      prim.set(prim$1);\n      return /* () */0;\n    }),\n  unsafe_blit,\n  (function (prim, prim$1) {\n      return prim[prim$1];\n    }),\n  (function (prim, prim$1) {\n      return prim[prim$1];\n    }),\n  (function (prim, prim$1, prim$2) {\n      prim[prim$1] = prim$2;\n      return /* () */0;\n    }),\n  (function (prim, prim$1, prim$2) {\n      prim[prim$1] = prim$2;\n      return /* () */0;\n    }),\n  sub\n];\n\nfunction Gl_029(prim, prim$1, prim$2, prim$3, prim$4, prim$5, prim$6, prim$7, prim$8, prim$9) {\n  prim.texSubImage2D(prim$1, prim$2, prim$3, prim$4, prim$5, prim$6, prim$7, prim$8, prim$9);\n  return /* () */0;\n}\n\nfunction Gl_031(prim) {\n  return prim.width;\n}\n\nfunction Gl_032(prim) {\n  return prim.height;\n}\n\nfunction Gl_036(prim, prim$1, prim$2) {\n  prim.uniform1i(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_037(prim, prim$1, prim$2) {\n  prim.uniform1f(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_038(prim, prim$1, prim$2, prim$3) {\n  prim.uniform2f(prim$1, prim$2, prim$3);\n  return /* () */0;\n}\n\nfunction Gl_039(prim, prim$1, prim$2, prim$3, prim$4) {\n  prim.uniform3f(prim$1, prim$2, prim$3, prim$4);\n  return /* () */0;\n}\n\nfunction Gl_040(prim, prim$1, prim$2, prim$3, prim$4, prim$5) {\n  prim.uniform4f(prim$1, prim$2, prim$3, prim$4, prim$5);\n  return /* () */0;\n}\n\nfunction Gl_043(prim, prim$1, prim$2, prim$3) {\n  prim.bufferData(prim$1, prim$2, prim$3);\n  return /* () */0;\n}\n\nfunction Gl_044(prim, prim$1, prim$2, prim$3, prim$4) {\n  prim.viewport(prim$1, prim$2, prim$3, prim$4);\n  return /* () */0;\n}\n\nfunction Gl_045(prim, prim$1) {\n  prim.clear(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_046(prim, prim$1, prim$2) {\n  return prim.getUniformLocation(prim$1, prim$2);\n}\n\nfunction Gl_047(prim, prim$1, prim$2) {\n  return prim.getAttribLocation(prim$1, prim$2);\n}\n\nfunction Gl_048(prim, prim$1) {\n  prim.enableVertexAttribArray(prim$1);\n  return /* () */0;\n}\n\nfunction Gl_050(prim, prim$1, prim$2) {\n  prim.vertexAttribDivisor(prim$1, prim$2);\n  return /* () */0;\n}\n\nfunction Gl_055(prim, prim$1) {\n  return prim.getShaderInfoLog(prim$1);\n}\n\nfunction Gl_056(prim, prim$1) {\n  return prim.getProgramInfoLog(prim$1);\n}\n\nfunction Gl_057(prim, prim$1) {\n  return prim.getShaderSource(prim$1);\n}\n\nfunction Gl_058(prim, prim$1, prim$2, prim$3) {\n  prim.drawArrays(prim$1, prim$2, prim$3);\n  return /* () */0;\n}\n\nfunction Gl_059(prim, prim$1, prim$2, prim$3, prim$4) {\n  prim.drawElements(prim$1, prim$2, prim$3, prim$4);\n  return /* () */0;\n}\n\nfunction Gl_060(prim, prim$1, prim$2, prim$3, prim$4, prim$5) {\n  prim.drawElementsInstanced(prim$1, prim$2, prim$3, prim$4, prim$5);\n  return /* () */0;\n}\n\nvar Gl = /* module */[\n  /* target */\"web\",\n  /* File */File,\n  /* Window */Window,\n  /* Audio */Audio,\n  Gl_004,\n  /* render */render,\n  Gl_006,\n  Gl_007,\n  Gl_008,\n  Gl_009,\n  Gl_010,\n  /* shaderSource */shaderSource,\n  Gl_012,\n  Gl_013,\n  Gl_014,\n  Gl_015,\n  Gl_016,\n  Gl_017,\n  Gl_018,\n  Gl_019,\n  Gl_020,\n  Gl_021,\n  Gl_022,\n  Gl_023,\n  Gl_024,\n  Gl_025,\n  Gl_026,\n  Gl_027,\n  Gl_028,\n  Gl_029,\n  /* readPixels_RGBA */readPixels_RGBA,\n  Gl_031,\n  Gl_032,\n  /* loadImage */loadImage,\n  /* loadImageFromMemory */loadImageFromMemory,\n  /* texImage2DWithImage */texImage2DWithImage,\n  Gl_036,\n  Gl_037,\n  Gl_038,\n  Gl_039,\n  Gl_040,\n  /* texImage2D_RGBA */texImage2D_RGBA,\n  /* texImage2D_null */texImage2D_null,\n  Gl_043,\n  Gl_044,\n  Gl_045,\n  Gl_046,\n  Gl_047,\n  Gl_048,\n  /* vertexAttribPointer */vertexAttribPointer,\n  Gl_050,\n  /* Mat4 */Mat4,\n  /* uniformMatrix4fv */uniformMatrix4fv,\n  /* getProgramParameter */getProgramParameter,\n  /* getShaderParameter */getShaderParameter,\n  Gl_055,\n  Gl_056,\n  Gl_057,\n  Gl_058,\n  Gl_059,\n  Gl_060\n];\n\nexports.Document = Document;\nexports.getTouch0 = getTouch0;\nexports.createCanvas = createCanvas;\nexports.makeAudioContext = makeAudioContext;\nexports.Gl = Gl;\n/* window Not a pure module */\n\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/web/reasongl_web.js\n//# sourceURL=fpack:///node_modules/Reasongl/lib/js/src/web/reasongl_web.js");
},
d: {"bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","../events.js":"NM$$Reasongl$lib$js$src$events","gl-matrix":"NM$$gl$$_$$matrix$esm$index","bsb-native/lib/js/caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","bsb-native/lib/js/js_primitive.js":"NM$$bsb$$_$$native$lib$js$js_primitive","../RGLConstants.js":"NM$$Reasongl$lib$js$src$RGLConstants","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"lib$js$src$Assets":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Json = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/rex-json/lib/js/./src/Json.js\");\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Common = __fastpack_require__(\"./Common.js\");\nvar Js_exn = __fastpack_require__(\"bsb-native/lib/js/js_exn.js\");\nvar Reasongl_web = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js\");\nvar Reprocessing_Utils = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nfunction maybeInt(f) {\n  var exit = 0;\n  var i;\n  try {\n    i = f | 0;\n    exit = 1;\n  }\n  catch (raw_exn){\n    var exn = Js_exn.internalToOCamlException(raw_exn);\n    if (exn[0] === Caml_builtin_exceptions.failure) {\n      return undefined;\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    return i;\n  }\n  \n}\n\nfunction loadSpriteSheet(filename, cb) {\n  return Curry._2(Reasongl_web.Gl[/* File */1][/* readFile */0], filename, (function (jsonString) {\n                var json = Json.parse(jsonString);\n                var things = Json.Infix[/* |! */0](Json.Infix[/* |?> */2](Json.get(\"frames\", json), Json.array), \"Expected field `frames` to be an array\");\n                return Curry._1(cb, List.fold_left((function (assets, thing) {\n                                  var frame = Json.Infix[/* |! */0](Json.get(\"frame\", thing), \"Expected field `frame` in `frames` array\");\n                                  var x = Json.Infix[/* |! */0](Json.Infix[/* |?> */2](Json.Infix[/* |?> */2](Json.get(\"x\", frame), Json.number), maybeInt), \"Invalid field `x`\");\n                                  var y = Json.Infix[/* |! */0](Json.Infix[/* |?> */2](Json.Infix[/* |?> */2](Json.get(\"y\", frame), Json.number), maybeInt), \"Invalid field `y`\");\n                                  var w = Json.Infix[/* |! */0](Json.Infix[/* |?> */2](Json.Infix[/* |?> */2](Json.get(\"w\", frame), Json.number), maybeInt), \"Invalid field `w`\");\n                                  var h = Json.Infix[/* |! */0](Json.Infix[/* |?> */2](Json.Infix[/* |?> */2](Json.get(\"h\", frame), Json.number), maybeInt), \"Invalid field `h`\");\n                                  var name = Json.Infix[/* |! */0](Json.Infix[/* |?> */2](Json.get(\"filename\", thing), Json.string), \"Invalid field `filename`\");\n                                  var name$1 = List.hd(Reprocessing_Utils.split(name, /* \".\" */46));\n                                  return Curry._3(Common.StringMap[/* add */3], name$1, /* record */[\n                                              /* x */x,\n                                              /* y */y,\n                                              /* w */w,\n                                              /* h */h\n                                            ], assets);\n                                }), Common.StringMap[/* empty */0], things));\n              }));\n}\n\nexports.maybeInt = maybeInt;\nexports.loadSpriteSheet = loadSpriteSheet;\n/* Json Not a pure module */\n\n//# sourceURL=fpack:///lib/js/src/Assets.js\n//# sourceURL=fpack:///lib/js/src/Assets.js");
},
d: {"/Users/schmave/Documents/git/ludum-dare-44/node_modules/rex-json/lib/js/./src/Json.js":"NM$$rex$$_$$json$lib$js$src$Json","bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","./Common.js":"lib$js$src$Common","bsb-native/lib/js/js_exn.js":"NM$$bsb$$_$$native$lib$js$js_exn","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js":"NM$$Reasongl$lib$js$src$web$reasongl_web","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js":"NM$$reprocessing$lib$js$src$Reprocessing_Utils","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"lib$js$src$Dialog":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\n\nfunction character(character$1, param, content) {\n  return /* record */[\n          /* assetName */param[1],\n          /* label */param[0],\n          /* character */character$1,\n          /* content : :: */[\n            content,\n            /* [] */0\n          ]\n        ];\n}\n\nfunction character$prime(character, param, content) {\n  return /* record */[\n          /* assetName */param[1],\n          /* label */param[0],\n          /* character */character,\n          /* content */content\n        ];\n}\n\nfunction player(param, param$1) {\n  return character(/* Player */0, param, param$1);\n}\n\nfunction player$prime(param, param$1) {\n  return character$prime(/* Player */0, param, param$1);\n}\n\nfunction npc(param, param$1) {\n  return character(/* NPC */1, param, param$1);\n}\n\nfunction npc$prime(param, param$1) {\n  return character$prime(/* NPC */1, param, param$1);\n}\n\nvar Helpers = /* module */[\n  /* character */character,\n  /* character' */character$prime,\n  /* player */player,\n  /* player' */player$prime,\n  /* npc */npc,\n  /* npc' */npc$prime\n];\n\nvar president = /* tuple */[\n  \"President\",\n  \"old_man_png\"\n];\n\nvar boss = /* tuple */[\n  \"Boss\",\n  \"boss_head\"\n];\n\nvar bob = /* tuple */[\n  \"Bob\",\n  \"dude\"\n];\n\nvar bernard = /* tuple */[\n  \"Bernard\",\n  \"dude_two_png\"\n];\n\nvar lady = /* tuple */[\n  \"Cindy\",\n  \"lady\"\n];\n\nvar People = /* module */[\n  /* president */president,\n  /* boss */boss,\n  /* bob */bob,\n  /* bernard */bernard,\n  /* lady */lady\n];\n\nfunction you(param) {\n  return player(bob, param);\n}\n\nfunction you$prime(param) {\n  return player$prime(bob, param);\n}\n\nvar partial_arg = /* tuple */[\n  \"Big Door\",\n  \"dude\"\n];\n\nfunction door(param) {\n  return npc(partial_arg, param);\n}\n\nvar doorTest_000 = Curry._1(you, \"Hey door.\");\n\nvar doorTest_001 = /* :: */[\n  Curry._1(door, \"Hi!\"),\n  /* :: */[\n    Curry._1(you$prime, /* :: */[\n          \"Wow, I wasn't expecting you to actually respond...\",\n          /* :: */[\n            \"Is that normal?\",\n            /* [] */0\n          ]\n        ]),\n    /* :: */[\n      Curry._1(door, \"...\"),\n      /* :: */[\n        Curry._1(you, \"Also, uh.. why do you have my face?\"),\n        /* :: */[\n          Curry._1(door, \"...\"),\n          /* :: */[\n            Curry._1(you, \"...\"),\n            /* [] */0\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar doorTest = /* :: */[\n  doorTest_000,\n  doorTest_001\n];\n\nvar doorLocked_000 = character(/* Player */0, bob, \"Looks like it's locked.\");\n\nvar doorLocked = /* :: */[\n  doorLocked_000,\n  /* [] */0\n];\n\nvar shouldTalkToSomePeople_000 = character$prime(/* Player */0, bob, /* :: */[\n      \"I should probably talk to some\",\n      /* :: */[\n        \"people before exploring.\",\n        /* [] */0\n      ]\n    ]);\n\nvar shouldTalkToSomePeople = /* :: */[\n  shouldTalkToSomePeople_000,\n  /* [] */0\n];\n\nvar bannedDoor_000 = character(/* NPC */1, bernard, \"Don't go in there, please!\");\n\nvar bannedDoor_001 = /* :: */[\n  character(/* Player */0, bob, \"Oops, sorry.\"),\n  /* [] */0\n];\n\nvar bannedDoor = /* :: */[\n  bannedDoor_000,\n  bannedDoor_001\n];\n\nvar bannedDoorBernard_000 = character(/* NPC */1, bernard, \"We're not supposed to go in there.\");\n\nvar bannedDoorBernard = /* :: */[\n  bannedDoorBernard_000,\n  /* [] */0\n];\n\nfunction broomCloset($$char) {\n  return /* :: */[\n          character(/* Player */0, $$char, \"That's just a broom closet.\"),\n          /* [] */0\n        ];\n}\n\nvar noPhone_000 = character$prime(/* Player */0, bob, /* :: */[\n      \"It's not ringing, and\",\n      /* :: */[\n        \"I already have my keys.\",\n        /* [] */0\n      ]\n    ]);\n\nvar noPhone = /* :: */[\n  noPhone_000,\n  /* [] */0\n];\n\nvar timeToGoToWork_000 = character(/* Player */0, bob, \"Time to go to work!\");\n\nvar timeToGoToWork = /* :: */[\n  timeToGoToWork_000,\n  /* [] */0\n];\n\nvar keyDoesntFit_000 = character(/* Player */0, bob, \"The key doesn't fit this lock.\");\n\nvar keyDoesntFit = /* :: */[\n  keyDoesntFit_000,\n  /* [] */0\n];\n\nvar keysUnderPhone_000 = character(/* Player */0, bob, \"I'm going to need my keys.\");\n\nvar keysUnderPhone_001 = /* :: */[\n  character(/* Player */0, bob, \"I think I left them under the phone.\"),\n  /* [] */0\n];\n\nvar keysUnderPhone = /* :: */[\n  keysUnderPhone_000,\n  keysUnderPhone_001\n];\n\nfunction you$1(param) {\n  return player(bob, param);\n}\n\nfunction boss$1(param) {\n  return npc(boss, param);\n}\n\nfunction boss$prime(param) {\n  return npc$prime(boss, param);\n}\n\nvar bossPhoneCall_000 = Curry._1(you$1, \"Huh, I guess this was ringing this whole time.\");\n\nvar bossPhoneCall_001 = /* :: */[\n  Curry._1(you$1, \"Hello?\"),\n  /* :: */[\n    Curry._1(boss$prime, /* :: */[\n          \"Hello Bob, It's your boss.\",\n          /* :: */[\n            \"I hope your day has been good so far\",\n            /* [] */0\n          ]\n        ]),\n    /* :: */[\n      Curry._1(you$1, \"Thanks sir, I've been catching up on some tiding up -- \"),\n      /* :: */[\n        Curry._1(boss$1, \"... because something terrible has happened.\"),\n        /* :: */[\n          Curry._1(you$1, \"Oh no! What happened?!\"),\n          /* :: */[\n            Curry._1(boss$prime, /* :: */[\n                  \"The president has gone missing.\",\n                  /* :: */[\n                    \"All our best agents are on holiday so we need\",\n                    /* :: */[\n                      \"you to head over and check it out.\",\n                      /* [] */0\n                    ]\n                  ]\n                ]),\n            /* :: */[\n              Curry._1(you$1, \"Sure thing, boss, you can count on me!\"),\n              /* [] */0\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bossPhoneCall = /* :: */[\n  bossPhoneCall_000,\n  bossPhoneCall_001\n];\n\nfunction you$2(param) {\n  return player(bernard, param);\n}\n\nfunction president$1(param) {\n  return npc(president, param);\n}\n\nvar bernardHiToPresident_000 = Curry._1(you$2, \"Hi Mr. President!\");\n\nvar bernardHiToPresident_001 = /* :: */[\n  Curry._1(president$1, \"Hello Bernard.\"),\n  /* [] */0\n];\n\nvar bernardHiToPresident = /* :: */[\n  bernardHiToPresident_000,\n  bernardHiToPresident_001\n];\n\nfunction you$3(param) {\n  return player(bob, param);\n}\n\nfunction you$prime$1(param) {\n  return player$prime(bob, param);\n}\n\nfunction president$2(param) {\n  return npc(president, param);\n}\n\nfunction president$prime(param) {\n  return npc$prime(president, param);\n}\n\nvar bobHiToPresident_000 = Curry._1(you$3, \"Uh, hello Mr. President, how are you?\");\n\nvar bobHiToPresident_001 = /* :: */[\n  Curry._1(president$2, \"Never better!\"),\n  /* :: */[\n    Curry._1(president$prime, /* :: */[\n          \"Though now that you mention it\",\n          /* :: */[\n            \"I am feeling a little thirsty.\",\n            /* [] */0\n          ]\n        ]),\n    /* :: */[\n      Curry._1(you$prime$1, /* :: */[\n            \"Excuse me for asking, but aren't you\",\n            /* :: */[\n              \"supposed to be kidnapped or something?\",\n              /* [] */0\n            ]\n          ]),\n      /* :: */[\n        Curry._1(you$3, \"I'm here to investigate your disappearance...\"),\n        /* :: */[\n          Curry._1(president$prime, /* :: */[\n                \"Ah yes! It's a little embarrassing\",\n                /* :: */[\n                  \"but actually I fell asleep watching TV\",\n                  /* :: */[\n                    \"and missed a few important meetings.\",\n                    /* [] */0\n                  ]\n                ]\n              ]),\n          /* :: */[\n            Curry._1(you$3, \"That's understandable.\"),\n            /* :: */[\n              Curry._1(president$prime, /* :: */[\n                    \"Now that you're here, can you go ask\",\n                    /* :: */[\n                      \"Bernard to get some champagne to celebrate\",\n                      /* :: */[\n                        \"my 'reappearance'?\",\n                        /* [] */0\n                      ]\n                    ]\n                  ]),\n              /* :: */[\n                Curry._1(you$3, \"That's not really my job...\"),\n                /* :: */[\n                  Curry._1(president$2, \"Thanks!\"),\n                  /* [] */0\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bobHiToPresident = /* :: */[\n  bobHiToPresident_000,\n  bobHiToPresident_001\n];\n\nfunction you$4(param) {\n  return player(bernard, param);\n}\n\nvar giveChampagneToPresident_000 = Curry._1(you$4, \"Uh, hello Mr. President, here's some champage?\");\n\nvar giveChampagneToPresident = /* :: */[\n  giveChampagneToPresident_000,\n  /* [] */0\n];\n\nfunction you$5(param) {\n  return player(bob, param);\n}\n\nfunction you$prime$2(param) {\n  return player$prime(bob, param);\n}\n\nfunction bernard$1(param) {\n  return npc(bernard, param);\n}\n\nfunction bernard$prime(param) {\n  return npc$prime(bernard, param);\n}\n\nvar bernardGoGetChampagne_000 = Curry._1(bernard$1, \"Thank goodness you're here!\");\n\nvar bernardGoGetChampagne_001 = /* :: */[\n  Curry._1(you$5, \"Is the president ok?\"),\n  /* :: */[\n    Curry._1(bernard$1, \"Ah yes, we found him.\"),\n    /* :: */[\n      Curry._1(you$prime$2, /* :: */[\n            \"Ok, well it seems like there's not much\",\n            /* :: */[\n              \"for me to investigate here, so I'll be heading back.\",\n              /* [] */0\n            ]\n          ]),\n      /* :: */[\n        Curry._1(bernard$1, \"Yes, so sorry about the inconvenience.\"),\n        /* :: */[\n          Curry._1(bernard$prime, /* :: */[\n                \"If you'll excuse me, I have to go\",\n                /* :: */[\n                  \"get the fancy champagne.\",\n                  /* [] */0\n                ]\n              ]),\n          /* :: */[\n            Curry._1(you$5, \"...\"),\n            /* :: */[\n              Curry._1(you$5, \"Did you say fancy champagne?\"),\n              /* :: */[\n                Curry._1(bernard$1, \"Yes, we're celebrating the president's return.\"),\n                /* :: */[\n                  Curry._1(you$5, \"I'm a bit of a champagne enthusiast actually...\"),\n                  /* :: */[\n                    Curry._1(bernard$1, \"*sigh*\"),\n                    /* :: */[\n                      Curry._1(bernard$prime, /* :: */[\n                            \"I guess you can have some if you help\",\n                            /* :: */[\n                              \"me out by getting it from the cellar.\",\n                              /* [] */0\n                            ]\n                          ]),\n                      /* :: */[\n                        Curry._1(you$5, \"Great! Be back in a second!\"),\n                        /* [] */0\n                      ]\n                    ]\n                  ]\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bernardGoGetChampagne = /* :: */[\n  bernardGoGetChampagne_000,\n  bernardGoGetChampagne_001\n];\n\nfunction you$6(param) {\n  return player(bob, param);\n}\n\nfunction bernard$2(param) {\n  return npc(bernard, param);\n}\n\nfunction bernard$prime$1(param) {\n  return npc$prime(bernard, param);\n}\n\nvar bernardSwapExplanation1_000 = Curry._1(you$6, \"Looks like I'm not allowed in the cellar.\");\n\nvar bernardSwapExplanation1_001 = /* :: */[\n  Curry._1(bernard$2, \"Oh right, sorry.\"),\n  /* :: */[\n    Curry._1(bernard$prime$1, /* :: */[\n          \"I'm very busy, so we'll have to swap.\",\n          /* [] */0\n        ]),\n    /* :: */[\n      Curry._1(you$6, \"... Swap?\"),\n      /* :: */[\n        Curry._1(bernard$2, \"Ah, I forgot you're a private detective.\"),\n        /* :: */[\n          Curry._1(bernard$prime$1, /* :: */[\n                \"We have top-secret technology that lets us\",\n                /* :: */[\n                  \"swap bodies.\",\n                  /* [] */0\n                ]\n              ]),\n          /* :: */[\n            Curry._1(you$6, \"You... what?\"),\n            /* :: */[\n              Curry._1(bernard$prime$1, /* :: */[\n                    \"Yeah, I know, right?\",\n                    /* :: */[\n                      \"It comes in super handy for\",\n                      /* :: */[\n                        \"last-minute presidential speeches.\",\n                        /* [] */0\n                      ]\n                    ]\n                  ]),\n              /* :: */[\n                Curry._1(you$6, \"...\"),\n                /* :: */[\n                  Curry._1(bernard$2, \"Anyway, here, take this one for now.\"),\n                  /* [] */0\n                ]\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bernardSwapExplanation1 = /* :: */[\n  bernardSwapExplanation1_000,\n  bernardSwapExplanation1_001\n];\n\nvar bernardSwapExplanation2_000 = Curry._1(you$6, \"Thanks!\");\n\nvar bernardSwapExplanation2_001 = /* :: */[\n  Curry._1(bernard$prime$1, /* :: */[\n        \"Now just use it on me and you can\",\n        /* :: */[\n          \"go down to the cellar to get the\",\n          /* :: */[\n            \"champagne.\",\n            /* [] */0\n          ]\n        ]\n      ]),\n  /* :: */[\n    Curry._1(you$6, \"Ok!\"),\n    /* [] */0\n  ]\n];\n\nvar bernardSwapExplanation2 = /* :: */[\n  bernardSwapExplanation2_000,\n  bernardSwapExplanation2_001\n];\n\nvar bernardBeforeSwap_000 = Curry._1(bernard$prime$1, /* :: */[\n      \"Just err.. 'click' the device\",\n      /* :: */[\n        \"then 'click' me.\",\n        /* [] */0\n      ]\n    ]);\n\nvar bernardBeforeSwap_001 = /* :: */[\n  Curry._1(bernard$2, \"Whatever that means.\"),\n  /* [] */0\n];\n\nvar bernardBeforeSwap = /* :: */[\n  bernardBeforeSwap_000,\n  bernardBeforeSwap_001\n];\n\nvar cellarDoorNo_000 = character$prime(/* Player */0, bob, /* :: */[\n      \"Only government employees are allowed\",\n      /* :: */[\n        \"down to the cellar.\",\n        /* [] */0\n      ]\n    ]);\n\nvar cellarDoorNo_001 = /* :: */[\n  character(/* Player */0, bob, \"Bernard didn't warn me about this!\"),\n  /* :: */[\n    character(/* Player */0, bob, \"I should go ask him about it.\"),\n    /* [] */0\n  ]\n];\n\nvar cellarDoorNo = /* :: */[\n  cellarDoorNo_000,\n  cellarDoorNo_001\n];\n\nfunction paintingDoor($$char) {\n  return /* :: */[\n          character(/* Player */0, $$char, \"I think this is just a painting of a door.\"),\n          /* [] */0\n        ];\n}\n\nfunction lockedDoor($$char) {\n  return /* :: */[\n          character(/* Player */0, $$char, \"It's locked.\"),\n          /* [] */0\n        ];\n}\n\nvar bottle1_000 = character$prime(/* Player */0, bernard, /* :: */[\n      \"Ooh! Look at all these Cabernet Sauvignons!\",\n      /* :: */[\n        \"Last year sure was a good year!\",\n        /* [] */0\n      ]\n    ]);\n\nvar bottle1 = /* :: */[\n  bottle1_000,\n  /* [] */0\n];\n\nvar bottle2_000 = character(/* Player */0, bernard, \"The president really seems to like rose.\");\n\nvar bottle2 = /* :: */[\n  bottle2_000,\n  /* [] */0\n];\n\nvar bottle3_000 = character$prime(/* Player */0, bernard, /* :: */[\n      \"Is that ... ?\",\n      /* :: */[\n        \"Nope, that's just rose.\",\n        /* [] */0\n      ]\n    ]);\n\nvar bottle3 = /* :: */[\n  bottle3_000,\n  /* [] */0\n];\n\nvar bottle4_000 = character$prime(/* Player */0, bernard, /* :: */[\n      \"Mmmm that's prosecco, not champagne.\",\n      /* :: */[\n        \"Although who even knows what the difference is.\",\n        /* [] */0\n      ]\n    ]);\n\nvar bottle4 = /* :: */[\n  bottle4_000,\n  /* [] */0\n];\n\nvar bottle5_000 = character(/* Player */0, bernard, \"My mom really likes this Pinot Grigio!\");\n\nvar bottle5 = /* :: */[\n  bottle5_000,\n  /* [] */0\n];\n\nvar bottle6_000 = character(/* Player */0, bernard, \"A ... huge case of tequila?\");\n\nvar bottle6 = /* :: */[\n  bottle6_000,\n  /* [] */0\n];\n\nvar bottle7_000 = character(/* Player */0, bernard, \"That's just grape juice.\");\n\nvar bottle7 = /* :: */[\n  bottle7_000,\n  /* [] */0\n];\n\nvar bottle8_000 = character(/* Player */0, bernard, \"Looks like a few dozen bottles of Jagermeister.\");\n\nvar bottle8 = /* :: */[\n  bottle8_000,\n  /* [] */0\n];\n\nvar bottle9_000 = character(/* Player */0, bernard, \"What a beautiful assortment of Spanish Riojas!\");\n\nvar bottle9 = /* :: */[\n  bottle9_000,\n  /* [] */0\n];\n\nvar bottle10_000 = character(/* Player */0, bernard, \"Wouldn't mind grabbing a quick sip of this Syrah!\");\n\nvar bottle10 = /* :: */[\n  bottle10_000,\n  /* [] */0\n];\n\nvar bottle11_000 = character$prime(/* Player */0, bernard, /* :: */[\n      \"This Merlot looks almost as old\",\n      /* :: */[\n        \"as the president himself.\",\n        /* [] */0\n      ]\n    ]);\n\nvar bottle11 = /* :: */[\n  bottle11_000,\n  /* [] */0\n];\n\nvar champagne_000 = character$prime(/* Player */0, bernard, /* :: */[\n      \"Aha! Champagne! Aged 400 years, amazing.\",\n      /* :: */[\n        \"I'll take this one with me.\",\n        /* [] */0\n      ]\n    ]);\n\nvar champagne = /* :: */[\n  champagne_000,\n  /* [] */0\n];\n\nvar Cellar = /* module */[\n  /* bottle1 */bottle1,\n  /* bottle2 */bottle2,\n  /* bottle3 */bottle3,\n  /* bottle4 */bottle4,\n  /* bottle5 */bottle5,\n  /* bottle6 */bottle6,\n  /* bottle7 */bottle7,\n  /* bottle8 */bottle8,\n  /* bottle9 */bottle9,\n  /* bottle10 */bottle10,\n  /* bottle11 */bottle11,\n  /* champagne */champagne\n];\n\nvar bobHiToLady_000 = character$prime(/* NPC */1, lady, /* :: */[\n      \"Sorry, I can't talk.\",\n      /* :: */[\n        \"I'm too busy celebrating.\",\n        /* [] */0\n      ]\n    ]);\n\nvar bobHiToLady_001 = /* :: */[\n  character(/* Player */0, bob, \"Busy celebrating?\"),\n  /* :: */[\n    character(/* NPC */1, lady, \"Can't talk.\"),\n    /* [] */0\n  ]\n];\n\nvar bobHiToLady = /* :: */[\n  bobHiToLady_000,\n  bobHiToLady_001\n];\n\nfunction lady$1(param) {\n  return npc(lady, param);\n}\n\nfunction lady$prime(param) {\n  return npc$prime(lady, param);\n}\n\nfunction you$7(param) {\n  return player(bernard, param);\n}\n\nvar bernardHiToLady_000 = Curry._1(lady$1, \"Oh, Bernard!\");\n\nvar bernardHiToLady_001 = /* :: */[\n  Curry._1(lady$1, \"I've been looking for you!\"),\n  /* :: */[\n    Curry._1(you$7, \"...You have?\"),\n    /* :: */[\n      Curry._1(lady$prime, /* :: */[\n            \"Yes, I asked you to get that report\",\n            /* :: */[\n              \"on my desk by last Friday\",\n              /* :: */[\n                \"and I haven't seen anything.\",\n                /* [] */0\n              ]\n            ]\n          ]),\n      /* :: */[\n        Curry._1(you$7, \"...\"),\n        /* :: */[\n          Curry._1(lady$1, \"What's the status of that?\"),\n          /* :: */[\n            Curry._1(you$7, \"Coming right up?\"),\n            /* [] */0\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bernardHiToLady = /* :: */[\n  bernardHiToLady_000,\n  bernardHiToLady_001\n];\n\nvar shouldSwapBack_000 = character(/* Player */0, bernard, \"I should probably swap back first.\");\n\nvar shouldSwapBack = /* :: */[\n  shouldSwapBack_000,\n  /* [] */0\n];\n\nfunction swapPresident($$char) {\n  return /* :: */[\n          character(/* Player */0, $$char, \"That seems pretty risky.\"),\n          /* [] */0\n        ];\n}\n\nvar stillHere_000 = character(/* NPC */1, bernard, \"You're still here?\");\n\nvar stillHere = /* :: */[\n  stillHere_000,\n  /* [] */0\n];\n\nfunction bob$1(param) {\n  return player(bob, param);\n}\n\nfunction president$3(param) {\n  return npc(president, param);\n}\n\nfunction president$prime$1(param) {\n  return npc$prime(president, param);\n}\n\nvar presidentBye_000 = Curry._1(president$3, \"Hi Bob. Thanks for all your help today.\");\n\nvar presidentBye_001 = /* :: */[\n  Curry._1(bob$1, \"Anytime, Mr. President!\"),\n  /* :: */[\n    Curry._1(president$prime$1, /* :: */[\n          \"I'm sorry we couldn't make more use\",\n          /* :: */[\n            \"of all your talents.\",\n            /* [] */0\n          ]\n        ]),\n    /* :: */[\n      Curry._1(president$3, \"We just ran out of time in the end!\"),\n      /* :: */[\n        Curry._1(president$3, \"Maybe next time!\"),\n        /* [] */0\n      ]\n    ]\n  ]\n];\n\nvar presidentBye = /* :: */[\n  presidentBye_000,\n  presidentBye_001\n];\n\nvar hurryUp_000 = character$prime(/* NPC */1, bob, /* :: */[\n      \"What are you waiting for?\",\n      /* :: */[\n        \"Head to the cellar!\",\n        /* [] */0\n      ]\n    ]);\n\nvar hurryUp = /* :: */[\n  hurryUp_000,\n  /* [] */0\n];\n\nvar bernardSwapBackDidntTalkAboutTattoo_000 = character$prime(/* Player */0, bernard, /* :: */[\n      \"I've secured the champagne!\",\n      /* :: */[\n        \"Ready to swap back?\",\n        /* [] */0\n      ]\n    ]);\n\nvar bernardSwapBackDidntTalkAboutTattoo_001 = /* :: */[\n  character$prime(/* NPC */1, bob, /* :: */[\n        \"Absolutely!\",\n        /* :: */[\n          \"What do you think of my new tattoo?\",\n          /* [] */0\n        ]\n      ]),\n  /* :: */[\n    character(/* Player */0, bernard, \"...\"),\n    /* :: */[\n      character(/* NPC */1, bob, \"You dont like it?\"),\n      /* :: */[\n        character(/* Player */0, bernard, \"No, no, it's ... really something.\"),\n        /* :: */[\n          character(/* NPC */1, bob, \"Thanks! I thought you might like it!\"),\n          /* :: */[\n            character(/* Player */0, bernard, \"I'd like my body back, now.\"),\n            /* :: */[\n              character(/* NPC */1, bob, \"Alright, alright.\"),\n              /* [] */0\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bernardSwapBackDidntTalkAboutTattoo = /* :: */[\n  bernardSwapBackDidntTalkAboutTattoo_000,\n  bernardSwapBackDidntTalkAboutTattoo_001\n];\n\nvar bernardTalkBeforeSwapBack_000 = character$prime(/* NPC */1, bob, /* :: */[\n      \"Great! You found the champagne!\",\n      /* :: */[\n        \"Ready to swap back?\",\n        /* [] */0\n      ]\n    ]);\n\nvar bernardTalkBeforeSwapBack_001 = /* :: */[\n  character$prime(/* Player */0, bernard, /* :: */[\n        \"Absolutely!\",\n        /* :: */[\n          \"What did you get up to while I was gone?\",\n          /* [] */0\n        ]\n      ]),\n  /* :: */[\n    character$prime(/* NPC */1, bob, /* :: */[\n          \"Oh I've been thinking about getting\",\n          /* :: */[\n            \"a tattoo, but I wasn't sure so\",\n            /* :: */[\n              \"I was finally able to test it out.\",\n              /* [] */0\n            ]\n          ]\n        ]),\n    /* :: */[\n      character(/* Player */0, bernard, \"...\"),\n      /* :: */[\n        character(/* NPC */1, bob, \"You dont like it?\"),\n        /* :: */[\n          character(/* Player */0, bernard, \"No, no, it's ... really something.\"),\n          /* :: */[\n            character(/* NPC */1, bob, \"Thanks! I thought you might like it!\"),\n            /* :: */[\n              character(/* Player */0, bernard, \"Can we swap back, now?\"),\n              /* :: */[\n                character(/* NPC */1, bob, \"Of course, of course.\"),\n                /* [] */0\n              ]\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bernardTalkBeforeSwapBack = /* :: */[\n  bernardTalkBeforeSwapBack_000,\n  bernardTalkBeforeSwapBack_001\n];\n\nvar bernardAfterSwap_000 = character(/* NPC */1, bernard, \"Great, thanks for swapping back.\");\n\nvar bernardAfterSwap_001 = /* :: */[\n  character(/* NPC */1, bernard, \"*hands you a glass of champagne*\"),\n  /* :: */[\n    character(/* NPC */1, bernard, \"Thanks for getting that for me!\"),\n    /* :: */[\n      character$prime(/* Player */0, bob, /* :: */[\n            \"I'm just a phone call away\",\n            /* :: */[\n              \"next time you need anything!\",\n              /* [] */0\n            ]\n          ]),\n      /* :: */[\n        character(/* NPC */1, bernard, \"Mhm.\"),\n        /* :: */[\n          character(/* Player */0, bob, \"Here's my card in case you ...\"),\n          /* :: */[\n            character(/* NPC */1, bernard, \"We'll call you if we need you.\"),\n            /* :: */[\n              character(/* Player */0, bob, \"Bye!\"),\n              /* [] */0\n            ]\n          ]\n        ]\n      ]\n    ]\n  ]\n];\n\nvar bernardAfterSwap = /* :: */[\n  bernardAfterSwap_000,\n  bernardAfterSwap_001\n];\n\nexports.Helpers = Helpers;\nexports.People = People;\nexports.doorTest = doorTest;\nexports.doorLocked = doorLocked;\nexports.shouldTalkToSomePeople = shouldTalkToSomePeople;\nexports.bannedDoor = bannedDoor;\nexports.bannedDoorBernard = bannedDoorBernard;\nexports.broomCloset = broomCloset;\nexports.noPhone = noPhone;\nexports.timeToGoToWork = timeToGoToWork;\nexports.keyDoesntFit = keyDoesntFit;\nexports.keysUnderPhone = keysUnderPhone;\nexports.bossPhoneCall = bossPhoneCall;\nexports.bernardHiToPresident = bernardHiToPresident;\nexports.bobHiToPresident = bobHiToPresident;\nexports.giveChampagneToPresident = giveChampagneToPresident;\nexports.bernardGoGetChampagne = bernardGoGetChampagne;\nexports.bernardSwapExplanation1 = bernardSwapExplanation1;\nexports.bernardSwapExplanation2 = bernardSwapExplanation2;\nexports.bernardBeforeSwap = bernardBeforeSwap;\nexports.cellarDoorNo = cellarDoorNo;\nexports.paintingDoor = paintingDoor;\nexports.lockedDoor = lockedDoor;\nexports.Cellar = Cellar;\nexports.bobHiToLady = bobHiToLady;\nexports.bernardHiToLady = bernardHiToLady;\nexports.shouldSwapBack = shouldSwapBack;\nexports.swapPresident = swapPresident;\nexports.stillHere = stillHere;\nexports.presidentBye = presidentBye;\nexports.hurryUp = hurryUp;\nexports.bernardSwapBackDidntTalkAboutTattoo = bernardSwapBackDidntTalkAboutTattoo;\nexports.bernardTalkBeforeSwapBack = bernardTalkBeforeSwapBack;\nexports.bernardAfterSwap = bernardAfterSwap;\n/* doorTest Not a pure module */\n\n//# sourceURL=fpack:///lib/js/src/Dialog.js\n//# sourceURL=fpack:///lib/js/src/Dialog.js");
},
d: {"bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Matrix":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Caml_array = __fastpack_require__(\"bsb-native/lib/js/caml_array.js\");\nvar Pervasives = __fastpack_require__(\"bsb-native/lib/js/pervasives.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nvar identity = /* array */[\n  1,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  1\n];\n\nfunction createIdentity(param) {\n  return /* array */[\n          1,\n          0,\n          0,\n          0,\n          1,\n          0,\n          0,\n          0,\n          1\n        ];\n}\n\nfunction createTranslation(dx, dy) {\n  return /* array */[\n          1,\n          0,\n          dx,\n          0,\n          1,\n          dy,\n          0,\n          0,\n          1\n        ];\n}\n\nfunction createRotation(theta) {\n  return /* array */[\n          Math.cos(theta),\n          -Math.sin(theta),\n          0,\n          Math.sin(theta),\n          Math.cos(theta),\n          0,\n          0,\n          0,\n          1\n        ];\n}\n\nfunction createScaling(sx, sy) {\n  return /* array */[\n          sx,\n          0,\n          0,\n          0,\n          sy,\n          0,\n          0,\n          0,\n          1\n        ];\n}\n\nfunction createShearing(sx, sy) {\n  return /* array */[\n          1,\n          sx,\n          0,\n          sy,\n          1,\n          0,\n          0,\n          0,\n          1\n        ];\n}\n\nfunction copyInto(src, dst) {\n  Caml_array.caml_array_set(dst, 0, Caml_array.caml_array_get(src, 0));\n  Caml_array.caml_array_set(dst, 1, Caml_array.caml_array_get(src, 1));\n  Caml_array.caml_array_set(dst, 2, Caml_array.caml_array_get(src, 2));\n  Caml_array.caml_array_set(dst, 3, Caml_array.caml_array_get(src, 3));\n  Caml_array.caml_array_set(dst, 4, Caml_array.caml_array_get(src, 4));\n  Caml_array.caml_array_set(dst, 5, Caml_array.caml_array_get(src, 5));\n  Caml_array.caml_array_set(dst, 6, Caml_array.caml_array_get(src, 6));\n  Caml_array.caml_array_set(dst, 7, Caml_array.caml_array_get(src, 7));\n  return Caml_array.caml_array_set(dst, 8, Caml_array.caml_array_get(src, 8));\n}\n\nfunction matmatmul(mat1, mat2) {\n  if (mat1.length !== 9) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          /* tuple */[\n            \"Reprocessing_Matrix.re\",\n            56,\n            9\n          ]\n        ];\n  } else {\n    var m0 = mat1[0];\n    var m1 = mat1[1];\n    var m2 = mat1[2];\n    var m3 = mat1[3];\n    var m4 = mat1[4];\n    var m5 = mat1[5];\n    var m6 = mat1[6];\n    var m7 = mat1[7];\n    var m8 = mat1[8];\n    if (mat2.length !== 9) {\n      throw [\n            Caml_builtin_exceptions.assert_failure,\n            /* tuple */[\n              \"Reprocessing_Matrix.re\",\n              56,\n              9\n            ]\n          ];\n    } else {\n      var ma = mat2[0];\n      var mb = mat2[1];\n      var mc = mat2[2];\n      var md = mat2[3];\n      var me = mat2[4];\n      var mf = mat2[5];\n      var mg = mat2[6];\n      var mh = mat2[7];\n      var mi = mat2[8];\n      Caml_array.caml_array_set(mat1, 0, ma * m0 + md * m1 + mg * m2);\n      Caml_array.caml_array_set(mat1, 1, mb * m0 + me * m1 + mh * m2);\n      Caml_array.caml_array_set(mat1, 2, mc * m0 + mf * m1 + mi * m2);\n      Caml_array.caml_array_set(mat1, 3, ma * m3 + md * m4 + mg * m5);\n      Caml_array.caml_array_set(mat1, 4, mb * m3 + me * m4 + mh * m5);\n      Caml_array.caml_array_set(mat1, 5, mc * m3 + mf * m4 + mi * m5);\n      Caml_array.caml_array_set(mat1, 6, ma * m6 + md * m7 + mg * m8);\n      Caml_array.caml_array_set(mat1, 7, mb * m6 + me * m7 + mh * m8);\n      return Caml_array.caml_array_set(mat1, 8, mc * m6 + mf * m7 + mi * m8);\n    }\n  }\n}\n\nfunction matvecmul(m, v) {\n  var a = Caml_array.caml_array_get(v, 0);\n  var b = Caml_array.caml_array_get(v, 1);\n  var c = Caml_array.caml_array_get(v, 2);\n  Caml_array.caml_array_set(v, 0, a * Caml_array.caml_array_get(m, 0) + b * Caml_array.caml_array_get(m, 1) + c * Caml_array.caml_array_get(m, 2));\n  Caml_array.caml_array_set(v, 1, a * Caml_array.caml_array_get(m, 3) + b * Caml_array.caml_array_get(m, 4) + c * Caml_array.caml_array_get(m, 5));\n  return Caml_array.caml_array_set(v, 2, a * Caml_array.caml_array_get(m, 6) + b * Caml_array.caml_array_get(m, 7) + c * Caml_array.caml_array_get(m, 8));\n}\n\nfunction matptmul(m, param) {\n  var y = param[1];\n  var x = param[0];\n  return /* tuple */[\n          x * Caml_array.caml_array_get(m, 0) + y * Caml_array.caml_array_get(m, 1) + Caml_array.caml_array_get(m, 2),\n          x * Caml_array.caml_array_get(m, 3) + y * Caml_array.caml_array_get(m, 4) + Caml_array.caml_array_get(m, 5)\n        ];\n}\n\nfunction matinv(mat) {\n  if (mat.length !== 9) {\n    throw [\n          Caml_builtin_exceptions.assert_failure,\n          /* tuple */[\n            \"Reprocessing_Matrix.re\",\n            136,\n            9\n          ]\n        ];\n  } else {\n    var m00 = mat[0];\n    var m01 = mat[1];\n    var m02 = mat[2];\n    var m10 = mat[3];\n    var m11 = mat[4];\n    var m12 = mat[5];\n    var m20 = mat[6];\n    var m21 = mat[7];\n    var m22 = mat[8];\n    var det = m00 * m11 * m22 + m01 * m12 * m20 + m02 * m10 * m21 - m00 * m12 * m21 - m01 * m10 * m22 - m02 * m11 * m20;\n    if (det === 0) {\n      Pervasives.invalid_arg(\"The current transform matrix cannot be inverted\");\n    }\n    var invdet = 1 / det;\n    var adj00 = m11 * m22 - m12 * m21;\n    var adj01 = -(m01 * m22 - m02 * m21);\n    var adj02 = m01 * m12 - m02 * m11;\n    var adj10 = -(m10 * m22 - m12 * m20);\n    var adj11 = m00 * m22 - m02 * m20;\n    var adj12 = -(m00 * m12 - m02 * m10);\n    var adj20 = m10 * m21 - m11 * m20;\n    var adj21 = -(m00 * m21 - m01 * m20);\n    var adj22 = m00 * m11 - m01 * m10;\n    return /* array */[\n            invdet * adj00,\n            invdet * adj01,\n            invdet * adj02,\n            invdet * adj10,\n            invdet * adj11,\n            invdet * adj12,\n            invdet * adj20,\n            invdet * adj21,\n            invdet * adj22\n          ];\n  }\n}\n\nexports.identity = identity;\nexports.createIdentity = createIdentity;\nexports.createTranslation = createTranslation;\nexports.createRotation = createRotation;\nexports.createScaling = createScaling;\nexports.createShearing = createShearing;\nexports.copyInto = copyInto;\nexports.matmatmul = matmatmul;\nexports.matvecmul = matvecmul;\nexports.matptmul = matptmul;\nexports.matinv = matinv;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Matrix.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Matrix.js");
},
d: {"bsb-native/lib/js/caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array","bsb-native/lib/js/pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Shaders":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\n\nvar vertexShaderSource = \"\\n  attribute vec2 aVertexPosition;\\n  attribute vec4 aVertexColor;\\n  attribute vec2 aTextureCoord;\\n\\n  uniform mat4 uPMatrix;\\n\\n  varying vec4 vColor;\\n  varying vec2 vTextureCoord;\\n\\n  void main(void) {\\n    gl_Position = uPMatrix * vec4(aVertexPosition, 0.0, 1.0);\\n    vColor = aVertexColor;\\n    vTextureCoord = aTextureCoord;\\n  }\\n\";\n\nvar fragmentShaderSource = \"\\n  varying vec4 vColor;\\n  varying vec2 vTextureCoord;\\n\\n  uniform sampler2D uSampler;\\n\\n  void main(void) {\\n    gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\\n  }\\n\";\n\nexports.vertexShaderSource = vertexShaderSource;\nexports.fragmentShaderSource = fragmentShaderSource;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Shaders.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Shaders.js");
},
d: {}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Internal":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Caml_int32 = __fastpack_require__(\"bsb-native/lib/js/caml_int32.js\");\nvar Pervasives = __fastpack_require__(\"bsb-native/lib/js/pervasives.js\");\nvar Js_primitive = __fastpack_require__(\"bsb-native/lib/js/js_primitive.js\");\nvar RGLConstants = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/RGLConstants.js\");\nvar Reasongl_web = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js\");\nvar Caml_primitive = __fastpack_require__(\"bsb-native/lib/js/caml_primitive.js\");\nvar Reprocessing_Common = __fastpack_require__(\"./Reprocessing_Common.js\");\nvar Reprocessing_Matrix = __fastpack_require__(\"./Reprocessing_Matrix.js\");\nvar Reprocessing_Shaders = __fastpack_require__(\"./Reprocessing_Shaders.js\");\nvar Reprocessing_Constants = __fastpack_require__(\"./Reprocessing_Constants.js\");\n\nfunction getProgram(context, vertexShaderSource, fragmentShaderSource) {\n  var vertexShader = Curry._2(Reasongl_web.Gl[/* createShader */8], context, RGLConstants.vertex_shader);\n  Reasongl_web.Gl[/* shaderSource */11](context, vertexShader, vertexShaderSource);\n  Curry._2(Reasongl_web.Gl[/* compileShader */12], context, vertexShader);\n  var compiledCorrectly = Reasongl_web.Gl[/* getShaderParameter */54](context, vertexShader, /* Compile_status */1) === 1;\n  if (compiledCorrectly) {\n    var fragmentShader = Curry._2(Reasongl_web.Gl[/* createShader */8], context, RGLConstants.fragment_shader);\n    Reasongl_web.Gl[/* shaderSource */11](context, fragmentShader, fragmentShaderSource);\n    Curry._2(Reasongl_web.Gl[/* compileShader */12], context, fragmentShader);\n    var compiledCorrectly$1 = Reasongl_web.Gl[/* getShaderParameter */54](context, fragmentShader, /* Compile_status */1) === 1;\n    if (compiledCorrectly$1) {\n      var program = Curry._1(Reasongl_web.Gl[/* createProgram */7], context);\n      Curry._3(Reasongl_web.Gl[/* attachShader */9], context, program, vertexShader);\n      Curry._2(Reasongl_web.Gl[/* deleteShader */10], context, vertexShader);\n      Curry._3(Reasongl_web.Gl[/* attachShader */9], context, program, fragmentShader);\n      Curry._2(Reasongl_web.Gl[/* deleteShader */10], context, fragmentShader);\n      Curry._2(Reasongl_web.Gl[/* linkProgram */13], context, program);\n      var linkedCorrectly = Reasongl_web.Gl[/* getProgramParameter */53](context, program, /* Link_status */1) === 1;\n      if (linkedCorrectly) {\n        return Js_primitive.some(program);\n      } else {\n        console.log(\"Linking error: \" + Curry._2(Reasongl_web.Gl[/* getProgramInfoLog */56], context, program));\n        return undefined;\n      }\n    } else {\n      console.log(\"Fragment shader error: \" + Curry._2(Reasongl_web.Gl[/* getShaderInfoLog */55], context, fragmentShader));\n      return undefined;\n    }\n  } else {\n    console.log(\"Vertex shader error: \" + Curry._2(Reasongl_web.Gl[/* getShaderInfoLog */55], context, vertexShader));\n    return undefined;\n  }\n}\n\nfunction createCanvas($$window, height, width) {\n  Curry._3(Reasongl_web.Gl[/* Window */2][/* setWindowSize */6], $$window, width, height);\n  var context = Curry._1(Reasongl_web.Gl[/* Window */2][/* getContext */8], $$window);\n  Curry._5(Reasongl_web.Gl[/* viewport */44], context, -1, -1, width, height);\n  Curry._5(Reasongl_web.Gl[/* clearColor */6], context, 0, 0, 0, 1);\n  Curry._2(Reasongl_web.Gl[/* clear */45], context, RGLConstants.color_buffer_bit | RGLConstants.depth_buffer_bit);\n  var camera = /* record */[/* projectionMatrix */Curry._1(Reasongl_web.Gl[/* Mat4 */51][/* create */1], /* () */0)];\n  var vertexBuffer = Curry._1(Reasongl_web.Gl[/* createBuffer */15], context);\n  var elementBuffer = Curry._1(Reasongl_web.Gl[/* createBuffer */15], context);\n  var match = getProgram(context, Reprocessing_Shaders.vertexShaderSource, Reprocessing_Shaders.fragmentShaderSource);\n  var program = match !== undefined ? Js_primitive.valFromOption(match) : Pervasives.failwith(\"Could not create the program and/or the shaders. Aborting.\");\n  Curry._2(Reasongl_web.Gl[/* useProgram */14], context, program);\n  var aVertexPosition = Curry._3(Reasongl_web.Gl[/* getAttribLocation */47], context, program, \"aVertexPosition\");\n  Curry._2(Reasongl_web.Gl[/* enableVertexAttribArray */48], context, aVertexPosition);\n  var aVertexColor = Curry._3(Reasongl_web.Gl[/* getAttribLocation */47], context, program, \"aVertexColor\");\n  Curry._2(Reasongl_web.Gl[/* enableVertexAttribArray */48], context, aVertexColor);\n  var pMatrixUniform = Curry._3(Reasongl_web.Gl[/* getUniformLocation */46], context, program, \"uPMatrix\");\n  Reasongl_web.Gl[/* uniformMatrix4fv */52](context, pMatrixUniform, camera[/* projectionMatrix */0]);\n  var aTextureCoord = Curry._3(Reasongl_web.Gl[/* getAttribLocation */47], context, program, \"aTextureCoord\");\n  Curry._2(Reasongl_web.Gl[/* enableVertexAttribArray */48], context, aTextureCoord);\n  var texture = Curry._1(Reasongl_web.Gl[/* createTexture */17], context);\n  Curry._2(Reasongl_web.Gl[/* activeTexture */18], context, RGLConstants.texture0);\n  Curry._3(Reasongl_web.Gl[/* bindTexture */19], context, RGLConstants.texture_2d, texture);\n  var uSampler = Curry._3(Reasongl_web.Gl[/* getUniformLocation */46], context, program, \"uSampler\");\n  Reasongl_web.Gl[/* texImage2D_RGBA */41](context, RGLConstants.texture_2d, 0, 1, 1, 0, Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* of_array */1], /* Uint8 */5, /* array */[\n            255,\n            255,\n            255,\n            255\n          ]));\n  Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_mag_filter, RGLConstants.linear);\n  Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_min_filter, RGLConstants.linear_mipmap_nearest);\n  Curry._2(Reasongl_web.Gl[/* enable */25], context, RGLConstants.blend);\n  Curry._3(Reasongl_web.Gl[/* blendFunc */27], context, RGLConstants.src_alpha, RGLConstants.one_minus_src_alpha);\n  Curry._7(Reasongl_web.Gl[/* Mat4 */51][/* ortho */6], camera[/* projectionMatrix */0], 0, width, height, 0, 0, 1);\n  return /* record */[\n          /* camera */camera,\n          /* window */$$window,\n          /* gl */context,\n          /* vertexBuffer */vertexBuffer,\n          /* elementBuffer */elementBuffer,\n          /* aVertexColor */aVertexColor,\n          /* aTextureCoord */aTextureCoord,\n          /* aVertexPosition */aVertexPosition,\n          /* pMatrixUniform */pMatrixUniform,\n          /* uSampler */uSampler,\n          /* batch : record */[\n            /* vertexArray */Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* create */0], /* Float32 */1, Caml_int32.imul(Reprocessing_Common.circularBufferSize, Reprocessing_Common.vertexSize)),\n            /* elementArray */Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* create */0], /* Uint16 */3, Reprocessing_Common.circularBufferSize),\n            /* vertexPtr */0,\n            /* elementPtr */0,\n            /* currTex */undefined,\n            /* nullTex */texture\n          ],\n          /* keyboard : record */[\n            /* keyCode : Nothing */65,\n            /* pressed */Reprocessing_Common.KeySet[/* empty */0],\n            /* released */Reprocessing_Common.KeySet[/* empty */0],\n            /* down */Reprocessing_Common.KeySet[/* empty */0]\n          ],\n          /* mouse : record */[\n            /* pos : tuple */[\n              0,\n              0\n            ],\n            /* prevPos : tuple */[\n              0,\n              0\n            ],\n            /* pressed */false\n          ],\n          /* style : record */[\n            /* strokeColor */undefined,\n            /* strokeWeight */3,\n            /* strokeCap : Round */0,\n            /* fillColor *//* record */[\n              /* r */0,\n              /* g */0,\n              /* b */0,\n              /* a */1\n            ],\n            /* tintColor */undefined,\n            /* rectMode : Corner */0\n          ],\n          /* styleStack : [] */0,\n          /* frame : record */[\n            /* count */1,\n            /* rate */10,\n            /* deltaTime */0.001\n          ],\n          /* matrix */Reprocessing_Matrix.createIdentity(/* () */0),\n          /* matrixStack : [] */0,\n          /* size : record */[\n            /* height */height,\n            /* width */width,\n            /* resizeable */true\n          ]\n        ];\n}\n\nfunction makeLocalBatch(env) {\n  return /* record */[\n          /* vertexArray */Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* create */0], /* Float32 */1, Caml_int32.imul(Reprocessing_Common.circularBufferSize, Reprocessing_Common.vertexSize)),\n          /* elementArray */Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* create */0], /* Uint16 */3, Reprocessing_Common.circularBufferSize),\n          /* vertexPtr */0,\n          /* elementPtr */0,\n          /* currTex */undefined,\n          /* nullTex */env[/* batch */10][/* nullTex */5]\n        ];\n}\n\nfunction drawGeometry(vertexArray, elementArray, mode, count, textureBuffer, env) {\n  Curry._3(Reasongl_web.Gl[/* bindBuffer */16], env[/* gl */2], RGLConstants.array_buffer, env[/* vertexBuffer */3]);\n  Curry._4(Reasongl_web.Gl[/* bufferData */43], env[/* gl */2], RGLConstants.array_buffer, vertexArray, RGLConstants.stream_draw);\n  Reasongl_web.Gl[/* vertexAttribPointer */49](env[/* gl */2], env[/* aVertexPosition */7], 2, RGLConstants.float_, false, (Reprocessing_Common.vertexSize << 2), 0);\n  Reasongl_web.Gl[/* vertexAttribPointer */49](env[/* gl */2], env[/* aVertexColor */5], 4, RGLConstants.float_, false, (Reprocessing_Common.vertexSize << 2), 8);\n  Reasongl_web.Gl[/* vertexAttribPointer */49](env[/* gl */2], env[/* aTextureCoord */6], 2, RGLConstants.float_, false, (Reprocessing_Common.vertexSize << 2), 24);\n  Curry._3(Reasongl_web.Gl[/* uniform1i */36], env[/* gl */2], env[/* uSampler */9], 0);\n  Curry._3(Reasongl_web.Gl[/* bindBuffer */16], env[/* gl */2], RGLConstants.element_array_buffer, env[/* elementBuffer */4]);\n  Curry._4(Reasongl_web.Gl[/* bufferData */43], env[/* gl */2], RGLConstants.element_array_buffer, elementArray, RGLConstants.stream_draw);\n  Curry._3(Reasongl_web.Gl[/* bindTexture */19], env[/* gl */2], RGLConstants.texture_2d, textureBuffer);\n  return Curry._5(Reasongl_web.Gl[/* drawElements */59], env[/* gl */2], mode, count, RGLConstants.unsigned_short, 0);\n}\n\nfunction flushGlobalBatch(env) {\n  if (env[/* batch */10][/* elementPtr */3] > 0) {\n    var match = env[/* batch */10][/* currTex */4];\n    var textureBuffer = match !== undefined ? Js_primitive.valFromOption(match) : env[/* batch */10][/* nullTex */5];\n    drawGeometry(Curry._3(Reasongl_web.Gl[/* Bigarray */28][/* sub */9], env[/* batch */10][/* vertexArray */0], 0, env[/* batch */10][/* vertexPtr */2]), Curry._3(Reasongl_web.Gl[/* Bigarray */28][/* sub */9], env[/* batch */10][/* elementArray */1], 0, env[/* batch */10][/* elementPtr */3]), RGLConstants.triangles, env[/* batch */10][/* elementPtr */3], textureBuffer, env);\n    env[/* batch */10][/* currTex */4] = undefined;\n    env[/* batch */10][/* vertexPtr */2] = 0;\n    env[/* batch */10][/* elementPtr */3] = 0;\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction maybeFlushBatch(texture, el, vert, env) {\n  if ((env[/* batch */10][/* elementPtr */3] + el | 0) >= Reprocessing_Common.circularBufferSize || (env[/* batch */10][/* vertexPtr */2] + vert | 0) >= Reprocessing_Common.circularBufferSize || env[/* batch */10][/* elementPtr */3] > 0 && env[/* batch */10][/* currTex */4] !== texture) {\n    return flushGlobalBatch(env);\n  } else {\n    return 0;\n  }\n}\n\nfunction addRectToGlobalBatch(env, param, param$1, param$2, param$3, param$4) {\n  var a = param$4[/* a */3];\n  var b = param$4[/* b */2];\n  var g = param$4[/* g */1];\n  var r = param$4[/* r */0];\n  maybeFlushBatch(undefined, 6, 32, env);\n  var set = Reasongl_web.Gl[/* Bigarray */28][/* set */7];\n  var i = env[/* batch */10][/* vertexPtr */2];\n  var vertexArrayToMutate = env[/* batch */10][/* vertexArray */0];\n  Curry._3(set, vertexArrayToMutate, i + 0 | 0, param[0]);\n  Curry._3(set, vertexArrayToMutate, i + 1 | 0, param[1]);\n  Curry._3(set, vertexArrayToMutate, i + 2 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 3 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 4 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 5 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 6 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 7 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 8 | 0, param$1[0]);\n  Curry._3(set, vertexArrayToMutate, i + 9 | 0, param$1[1]);\n  Curry._3(set, vertexArrayToMutate, i + 10 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 11 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 12 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 13 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 14 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 15 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 16 | 0, param$2[0]);\n  Curry._3(set, vertexArrayToMutate, i + 17 | 0, param$2[1]);\n  Curry._3(set, vertexArrayToMutate, i + 18 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 19 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 20 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 21 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 22 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 23 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 24 | 0, param$3[0]);\n  Curry._3(set, vertexArrayToMutate, i + 25 | 0, param$3[1]);\n  Curry._3(set, vertexArrayToMutate, i + 26 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 27 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 28 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 29 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 30 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 31 | 0, 0.0);\n  var ii = Caml_int32.div(i, Reprocessing_Common.vertexSize);\n  var j = env[/* batch */10][/* elementPtr */3];\n  var elementArrayToMutate = env[/* batch */10][/* elementArray */1];\n  Curry._3(set, elementArrayToMutate, j + 0 | 0, ii);\n  Curry._3(set, elementArrayToMutate, j + 1 | 0, ii + 1 | 0);\n  Curry._3(set, elementArrayToMutate, j + 2 | 0, ii + 2 | 0);\n  Curry._3(set, elementArrayToMutate, j + 3 | 0, ii + 1 | 0);\n  Curry._3(set, elementArrayToMutate, j + 4 | 0, ii + 2 | 0);\n  Curry._3(set, elementArrayToMutate, j + 5 | 0, ii + 3 | 0);\n  env[/* batch */10][/* vertexPtr */2] = i + (Reprocessing_Common.vertexSize << 2) | 0;\n  env[/* batch */10][/* elementPtr */3] = j + 6 | 0;\n  return /* () */0;\n}\n\nfunction drawTriangle(env, param, param$1, param$2, param$3) {\n  var a = param$3[/* a */3];\n  var b = param$3[/* b */2];\n  var g = param$3[/* g */1];\n  var r = param$3[/* r */0];\n  maybeFlushBatch(undefined, 24, 3, env);\n  var set = Reasongl_web.Gl[/* Bigarray */28][/* set */7];\n  var i = env[/* batch */10][/* vertexPtr */2];\n  var vertexArrayToMutate = env[/* batch */10][/* vertexArray */0];\n  Curry._3(set, vertexArrayToMutate, i + 0 | 0, param[0]);\n  Curry._3(set, vertexArrayToMutate, i + 1 | 0, param[1]);\n  Curry._3(set, vertexArrayToMutate, i + 2 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 3 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 4 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 5 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 6 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 7 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 8 | 0, param$1[0]);\n  Curry._3(set, vertexArrayToMutate, i + 9 | 0, param$1[1]);\n  Curry._3(set, vertexArrayToMutate, i + 10 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 11 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 12 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 13 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 14 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 15 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 16 | 0, param$2[0]);\n  Curry._3(set, vertexArrayToMutate, i + 17 | 0, param$2[1]);\n  Curry._3(set, vertexArrayToMutate, i + 18 | 0, r);\n  Curry._3(set, vertexArrayToMutate, i + 19 | 0, g);\n  Curry._3(set, vertexArrayToMutate, i + 20 | 0, b);\n  Curry._3(set, vertexArrayToMutate, i + 21 | 0, a);\n  Curry._3(set, vertexArrayToMutate, i + 22 | 0, 0.0);\n  Curry._3(set, vertexArrayToMutate, i + 23 | 0, 0.0);\n  var ii = Caml_int32.div(i, Reprocessing_Common.vertexSize);\n  var j = env[/* batch */10][/* elementPtr */3];\n  var elementArrayToMutate = env[/* batch */10][/* elementArray */1];\n  Curry._3(set, elementArrayToMutate, j + 0 | 0, ii);\n  Curry._3(set, elementArrayToMutate, j + 1 | 0, ii + 1 | 0);\n  Curry._3(set, elementArrayToMutate, j + 2 | 0, ii + 2 | 0);\n  env[/* batch */10][/* vertexPtr */2] = i + Caml_int32.imul(3, Reprocessing_Common.vertexSize) | 0;\n  env[/* batch */10][/* elementPtr */3] = j + 3 | 0;\n  return /* () */0;\n}\n\nfunction drawLineWithMatrix(param, param$1, matrix, color, width, project, env) {\n  var yy2 = param$1[1];\n  var xx2 = param$1[0];\n  var yy1 = param[1];\n  var xx1 = param[0];\n  var dx = xx2 - xx1;\n  var dy = yy2 - yy1;\n  var mag = Math.sqrt(dx * dx + dy * dy);\n  var radius = width / 2;\n  var xthing = dy / mag * radius;\n  var ything = -dx / mag * radius;\n  var match = project ? /* tuple */[\n      dx / mag * radius,\n      xthing\n    ] : /* tuple */[\n      0,\n      0\n    ];\n  var projecty = match[1];\n  var projectx = match[0];\n  var x1 = xx2 + xthing + projectx;\n  var y1 = yy2 + ything + projecty;\n  var x2 = xx1 + xthing - projectx;\n  var y2 = yy1 + ything - projecty;\n  var x3 = xx2 - xthing + projectx;\n  var y3 = yy2 - ything + projecty;\n  var x4 = xx1 - xthing - projectx;\n  var y4 = yy1 - ything - projecty;\n  return addRectToGlobalBatch(env, Reprocessing_Matrix.matptmul(matrix, /* tuple */[\n                  x1,\n                  y1\n                ]), Reprocessing_Matrix.matptmul(matrix, /* tuple */[\n                  x2,\n                  y2\n                ]), Reprocessing_Matrix.matptmul(matrix, /* tuple */[\n                  x3,\n                  y3\n                ]), Reprocessing_Matrix.matptmul(matrix, /* tuple */[\n                  x4,\n                  y4\n                ]), color);\n}\n\nfunction drawArc(env, param, radx, rady, start, stop, isPie, matrix, param$1) {\n  var a = param$1[/* a */3];\n  var b = param$1[/* b */2];\n  var g = param$1[/* g */1];\n  var r = param$1[/* r */0];\n  var yCenterOfCircle = param[1];\n  var xCenterOfCircle = param[0];\n  var noOfFans = ((radx + rady | 0) / 2 | 0) + 10 | 0;\n  maybeFlushBatch(undefined, Caml_int32.imul(3, noOfFans), Caml_int32.imul(Reprocessing_Common.vertexSize, noOfFans + 3 | 0), env);\n  var match = stop < start;\n  var match$1 = match ? /* tuple */[\n      stop,\n      start\n    ] : /* tuple */[\n      start,\n      stop\n    ];\n  var stop$1 = match$1[1];\n  var start$1 = match$1[0];\n  var pi = 4.0 * Math.atan(1.0);\n  var anglePerFan = 2 * pi / noOfFans;\n  var verticesData = env[/* batch */10][/* vertexArray */0];\n  var elementData = env[/* batch */10][/* elementArray */1];\n  var set = Reasongl_web.Gl[/* Bigarray */28][/* set */7];\n  var get = Reasongl_web.Gl[/* Bigarray */28][/* get */5];\n  var vertexArrayOffset = env[/* batch */10][/* vertexPtr */2];\n  var elementArrayOffset = env[/* batch */10][/* elementPtr */3];\n  var start_i = isPie ? (start$1 / anglePerFan | 0) - 3 | 0 : (start$1 / anglePerFan | 0) - 2 | 0;\n  var stop_i = (stop$1 / anglePerFan | 0) + 1 | 0;\n  for(var i = start_i; i <= stop_i; ++i){\n    var param$2;\n    if (isPie && (i - start_i | 0) === 0) {\n      param$2 = /* tuple */[\n        xCenterOfCircle,\n        yCenterOfCircle\n      ];\n    } else {\n      var angle = Caml_primitive.caml_float_max(Caml_primitive.caml_float_min(anglePerFan * (i + 1 | 0), stop$1), start$1);\n      param$2 = /* tuple */[\n        xCenterOfCircle + Math.cos(angle) * radx,\n        yCenterOfCircle + Math.sin(angle) * rady\n      ];\n    }\n    var match$2 = Reprocessing_Matrix.matptmul(matrix, param$2);\n    var ii = Caml_int32.imul(i - start_i | 0, Reprocessing_Common.vertexSize) + vertexArrayOffset | 0;\n    Curry._3(set, verticesData, ii + 0 | 0, match$2[0]);\n    Curry._3(set, verticesData, ii + 1 | 0, match$2[1]);\n    Curry._3(set, verticesData, ii + 2 | 0, r);\n    Curry._3(set, verticesData, ii + 3 | 0, g);\n    Curry._3(set, verticesData, ii + 4 | 0, b);\n    Curry._3(set, verticesData, ii + 5 | 0, a);\n    Curry._3(set, verticesData, ii + 6 | 0, 0.0);\n    Curry._3(set, verticesData, ii + 7 | 0, 0.0);\n    if ((i - start_i | 0) < 3) {\n      Curry._3(set, elementData, (i - start_i | 0) + elementArrayOffset | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize));\n    } else {\n      var jj = (Caml_int32.imul((i - start_i | 0) - 3 | 0, 3) + elementArrayOffset | 0) + 3 | 0;\n      Curry._3(set, elementData, jj, Caml_int32.div(vertexArrayOffset, Reprocessing_Common.vertexSize));\n      Curry._3(set, elementData, jj + 1 | 0, Curry._2(get, elementData, jj - 1 | 0));\n      Curry._3(set, elementData, jj + 2 | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize));\n    }\n  }\n  env[/* batch */10][/* vertexPtr */2] = env[/* batch */10][/* vertexPtr */2] + Caml_int32.imul(noOfFans + 3 | 0, Reprocessing_Common.vertexSize) | 0;\n  env[/* batch */10][/* elementPtr */3] = (env[/* batch */10][/* elementPtr */3] + Caml_int32.imul((stop_i - start_i | 0) - 3 | 0, 3) | 0) + 3 | 0;\n  return /* () */0;\n}\n\nfunction drawEllipse(env, center, radx, rady, matrix, c) {\n  return drawArc(env, center, radx, rady, 0, Reprocessing_Constants.tau, false, matrix, c);\n}\n\nfunction drawArcStroke(env, param, radx, rady, start, stop, isOpen, isPie, matrix, strokeColor, strokeWidth) {\n  var a = strokeColor[/* a */3];\n  var b = strokeColor[/* b */2];\n  var g = strokeColor[/* g */1];\n  var r = strokeColor[/* r */0];\n  var yCenterOfCircle = param[1];\n  var xCenterOfCircle = param[0];\n  var verticesData = env[/* batch */10][/* vertexArray */0];\n  var elementData = env[/* batch */10][/* elementArray */1];\n  var noOfFans = ((radx + rady | 0) / 2 | 0) + 10 | 0;\n  var set = Reasongl_web.Gl[/* Bigarray */28][/* set */7];\n  maybeFlushBatch(undefined, Caml_int32.imul(noOfFans, 6), Caml_int32.imul((noOfFans << 1), Reprocessing_Common.vertexSize), env);\n  var match = stop < start;\n  var match$1 = match ? /* tuple */[\n      stop,\n      start\n    ] : /* tuple */[\n      start,\n      stop\n    ];\n  var stop$1 = match$1[1];\n  var start$1 = match$1[0];\n  var pi = 4.0 * Math.atan(1.0);\n  var anglePerFan = 2 * pi / noOfFans;\n  var start_i = (start$1 / anglePerFan | 0) - 2 | 0;\n  var stop_i = stop$1 / anglePerFan | 0;\n  var prevEl = undefined;\n  var strokeWidth$1 = strokeWidth;\n  var halfStrokeWidth = strokeWidth$1 / 2;\n  for(var i = start_i; i <= stop_i; ++i){\n    var angle = Caml_primitive.caml_float_max(start$1, Caml_primitive.caml_float_min(anglePerFan * (i + 1 | 0), stop$1));\n    var param_000 = xCenterOfCircle + Math.cos(angle) * (radx - halfStrokeWidth);\n    var param_001 = yCenterOfCircle + Math.sin(angle) * (rady - halfStrokeWidth);\n    var param$1 = /* tuple */[\n      param_000,\n      param_001\n    ];\n    var match$2 = Reprocessing_Matrix.matptmul(matrix, param$1);\n    var param_000$1 = xCenterOfCircle + Math.cos(angle) * (radx + halfStrokeWidth);\n    var param_001$1 = yCenterOfCircle + Math.sin(angle) * (rady + halfStrokeWidth);\n    var param$2 = /* tuple */[\n      param_000$1,\n      param_001$1\n    ];\n    var match$3 = Reprocessing_Matrix.matptmul(matrix, param$2);\n    var ii = env[/* batch */10][/* vertexPtr */2];\n    Curry._3(set, verticesData, ii + 0 | 0, match$2[0]);\n    Curry._3(set, verticesData, ii + 1 | 0, match$2[1]);\n    Curry._3(set, verticesData, ii + 2 | 0, r);\n    Curry._3(set, verticesData, ii + 3 | 0, g);\n    Curry._3(set, verticesData, ii + 4 | 0, b);\n    Curry._3(set, verticesData, ii + 5 | 0, a);\n    Curry._3(set, verticesData, ii + 6 | 0, 0.0);\n    Curry._3(set, verticesData, ii + 7 | 0, 0.0);\n    var ii$1 = ii + Reprocessing_Common.vertexSize | 0;\n    Curry._3(set, verticesData, ii$1 + 0 | 0, match$3[0]);\n    Curry._3(set, verticesData, ii$1 + 1 | 0, match$3[1]);\n    Curry._3(set, verticesData, ii$1 + 2 | 0, r);\n    Curry._3(set, verticesData, ii$1 + 3 | 0, g);\n    Curry._3(set, verticesData, ii$1 + 4 | 0, b);\n    Curry._3(set, verticesData, ii$1 + 5 | 0, a);\n    Curry._3(set, verticesData, ii$1 + 6 | 0, 0.0);\n    Curry._3(set, verticesData, ii$1 + 7 | 0, 0.0);\n    env[/* batch */10][/* vertexPtr */2] = env[/* batch */10][/* vertexPtr */2] + (Reprocessing_Common.vertexSize << 1) | 0;\n    var currOuter = Caml_int32.div(ii$1, Reprocessing_Common.vertexSize);\n    var currInner = Caml_int32.div(ii$1, Reprocessing_Common.vertexSize) - 1 | 0;\n    var currEl = /* tuple */[\n      currInner,\n      currOuter\n    ];\n    var match$4 = prevEl;\n    if (match$4 !== undefined) {\n      var match$5 = match$4;\n      var prevInner = match$5[0];\n      var elementArrayOffset = env[/* batch */10][/* elementPtr */3];\n      Curry._3(set, elementData, elementArrayOffset, prevInner);\n      Curry._3(set, elementData, elementArrayOffset + 1 | 0, match$5[1]);\n      Curry._3(set, elementData, elementArrayOffset + 2 | 0, currOuter);\n      Curry._3(set, elementData, elementArrayOffset + 3 | 0, currOuter);\n      Curry._3(set, elementData, elementArrayOffset + 4 | 0, prevInner);\n      Curry._3(set, elementData, elementArrayOffset + 5 | 0, currInner);\n      env[/* batch */10][/* elementPtr */3] = env[/* batch */10][/* elementPtr */3] + 6 | 0;\n      prevEl = currEl;\n    } else {\n      prevEl = currEl;\n    }\n  }\n  if (isOpen) {\n    return 0;\n  } else {\n    var startPt_000 = xCenterOfCircle + Math.cos(start$1) * radx;\n    var startPt_001 = yCenterOfCircle + Math.sin(start$1) * rady;\n    var startPt = /* tuple */[\n      startPt_000,\n      startPt_001\n    ];\n    var stopPt_000 = xCenterOfCircle + Math.cos(stop$1) * radx;\n    var stopPt_001 = yCenterOfCircle + Math.sin(stop$1) * rady;\n    var stopPt = /* tuple */[\n      stopPt_000,\n      stopPt_001\n    ];\n    var centerOfCircle = /* tuple */[\n      xCenterOfCircle,\n      yCenterOfCircle\n    ];\n    if (isPie) {\n      drawLineWithMatrix(startPt, centerOfCircle, matrix, strokeColor, strokeWidth$1, false, env);\n      drawLineWithMatrix(stopPt, centerOfCircle, matrix, strokeColor, strokeWidth$1, false, env);\n      drawEllipse(env, centerOfCircle, halfStrokeWidth, halfStrokeWidth, matrix, strokeColor);\n    } else {\n      drawLineWithMatrix(startPt, stopPt, matrix, strokeColor, strokeWidth$1, false, env);\n    }\n    drawEllipse(env, startPt, halfStrokeWidth, halfStrokeWidth, matrix, strokeColor);\n    return drawEllipse(env, stopPt, halfStrokeWidth, halfStrokeWidth, matrix, strokeColor);\n  }\n}\n\nfunction loadImage(env, filename, isPixel) {\n  var imageRef = /* record */[\n    /* glData */undefined,\n    /* drawnTo */false\n  ];\n  Reasongl_web.Gl[/* loadImage */33](filename, /* LoadRGBA */4, (function (imageData) {\n          if (imageData !== undefined) {\n            var img = Js_primitive.valFromOption(imageData);\n            var context = env[/* gl */2];\n            var texture = Curry._1(Reasongl_web.Gl[/* createTexture */17], context);\n            var height = Curry._1(Reasongl_web.Gl[/* getImageHeight */32], img);\n            var width = Curry._1(Reasongl_web.Gl[/* getImageWidth */31], img);\n            var filter = isPixel ? RGLConstants.nearest : RGLConstants.linear;\n            imageRef[/* glData */0] = /* record */[\n              /* framebuffer */undefined,\n              /* texture */texture,\n              /* height */height,\n              /* width */width\n            ];\n            Curry._3(Reasongl_web.Gl[/* bindTexture */19], context, RGLConstants.texture_2d, texture);\n            Reasongl_web.Gl[/* texImage2DWithImage */35](context, RGLConstants.texture_2d, 0, img);\n            Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_mag_filter, filter);\n            Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_min_filter, filter);\n            Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_wrap_s, RGLConstants.clamp_to_edge);\n            return Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_wrap_t, RGLConstants.clamp_to_edge);\n          } else {\n            return Pervasives.failwith(\"Could not load image '\" + (filename + \"'.\"));\n          }\n        }), /* () */0);\n  return imageRef;\n}\n\nfunction loadImageFromMemory(env, data, isPixel) {\n  var imageRef = /* record */[\n    /* glData */undefined,\n    /* drawnTo */false\n  ];\n  Reasongl_web.Gl[/* loadImageFromMemory */34](data, /* LoadRGBA */4, (function (imageData) {\n          if (imageData !== undefined) {\n            var img = Js_primitive.valFromOption(imageData);\n            var texture = Curry._1(Reasongl_web.Gl[/* createTexture */17], env[/* gl */2]);\n            var height = Curry._1(Reasongl_web.Gl[/* getImageHeight */32], img);\n            var width = Curry._1(Reasongl_web.Gl[/* getImageWidth */31], img);\n            var filter = isPixel ? RGLConstants.nearest : RGLConstants.linear;\n            imageRef[/* glData */0] = /* record */[\n              /* framebuffer */undefined,\n              /* texture */texture,\n              /* height */height,\n              /* width */width\n            ];\n            Curry._3(Reasongl_web.Gl[/* bindTexture */19], env[/* gl */2], RGLConstants.texture_2d, texture);\n            Reasongl_web.Gl[/* texImage2DWithImage */35](env[/* gl */2], RGLConstants.texture_2d, 0, img);\n            Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_mag_filter, filter);\n            Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_min_filter, filter);\n            Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_wrap_s, RGLConstants.clamp_to_edge);\n            return Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_wrap_t, RGLConstants.clamp_to_edge);\n          } else {\n            return Pervasives.failwith(\"Could not load image\");\n          }\n        }), /* () */0);\n  return imageRef;\n}\n\nfunction drawImage(param, param$1, param$2, param$3, param$4, subx, suby, subw, subh, env) {\n  var imgw = param[/* width */3];\n  var imgh = param[/* height */2];\n  var texture = param[/* texture */1];\n  var match = env[/* style */13][/* tintColor */4];\n  var match$1 = match !== undefined ? match : /* record */[\n      /* r */1,\n      /* g */1,\n      /* b */1,\n      /* a */1\n    ];\n  var a = match$1[/* a */3];\n  var b = match$1[/* b */2];\n  var g = match$1[/* g */1];\n  var r = match$1[/* r */0];\n  maybeFlushBatch(Js_primitive.some(texture), 6, 32, env);\n  var fsubx = subx / imgw;\n  var fsuby = suby / imgh;\n  var fsubw = subw / imgw;\n  var fsubh = subh / imgh;\n  var set = Reasongl_web.Gl[/* Bigarray */28][/* set */7];\n  var ii = env[/* batch */10][/* vertexPtr */2];\n  var vertexArray = env[/* batch */10][/* vertexArray */0];\n  Curry._3(set, vertexArray, ii + 0 | 0, param$1[0]);\n  Curry._3(set, vertexArray, ii + 1 | 0, param$1[1]);\n  Curry._3(set, vertexArray, ii + 2 | 0, r);\n  Curry._3(set, vertexArray, ii + 3 | 0, g);\n  Curry._3(set, vertexArray, ii + 4 | 0, b);\n  Curry._3(set, vertexArray, ii + 5 | 0, a);\n  Curry._3(set, vertexArray, ii + 6 | 0, fsubx + fsubw);\n  Curry._3(set, vertexArray, ii + 7 | 0, fsuby + fsubh);\n  Curry._3(set, vertexArray, ii + 8 | 0, param$2[0]);\n  Curry._3(set, vertexArray, ii + 9 | 0, param$2[1]);\n  Curry._3(set, vertexArray, ii + 10 | 0, r);\n  Curry._3(set, vertexArray, ii + 11 | 0, g);\n  Curry._3(set, vertexArray, ii + 12 | 0, b);\n  Curry._3(set, vertexArray, ii + 13 | 0, a);\n  Curry._3(set, vertexArray, ii + 14 | 0, fsubx);\n  Curry._3(set, vertexArray, ii + 15 | 0, fsuby + fsubh);\n  Curry._3(set, vertexArray, ii + 16 | 0, param$3[0]);\n  Curry._3(set, vertexArray, ii + 17 | 0, param$3[1]);\n  Curry._3(set, vertexArray, ii + 18 | 0, r);\n  Curry._3(set, vertexArray, ii + 19 | 0, g);\n  Curry._3(set, vertexArray, ii + 20 | 0, b);\n  Curry._3(set, vertexArray, ii + 21 | 0, a);\n  Curry._3(set, vertexArray, ii + 22 | 0, fsubx + fsubw);\n  Curry._3(set, vertexArray, ii + 23 | 0, fsuby);\n  Curry._3(set, vertexArray, ii + 24 | 0, param$4[0]);\n  Curry._3(set, vertexArray, ii + 25 | 0, param$4[1]);\n  Curry._3(set, vertexArray, ii + 26 | 0, r);\n  Curry._3(set, vertexArray, ii + 27 | 0, g);\n  Curry._3(set, vertexArray, ii + 28 | 0, b);\n  Curry._3(set, vertexArray, ii + 29 | 0, a);\n  Curry._3(set, vertexArray, ii + 30 | 0, fsubx);\n  Curry._3(set, vertexArray, ii + 31 | 0, fsuby);\n  var jj = env[/* batch */10][/* elementPtr */3];\n  var elementArray = env[/* batch */10][/* elementArray */1];\n  Curry._3(set, elementArray, jj, Caml_int32.div(ii, Reprocessing_Common.vertexSize));\n  Curry._3(set, elementArray, jj + 1 | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize) + 1 | 0);\n  Curry._3(set, elementArray, jj + 2 | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize) + 2 | 0);\n  Curry._3(set, elementArray, jj + 3 | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize) + 1 | 0);\n  Curry._3(set, elementArray, jj + 4 | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize) + 2 | 0);\n  Curry._3(set, elementArray, jj + 5 | 0, Caml_int32.div(ii, Reprocessing_Common.vertexSize) + 3 | 0);\n  env[/* batch */10][/* vertexPtr */2] = ii + (Reprocessing_Common.vertexSize << 2) | 0;\n  env[/* batch */10][/* elementPtr */3] = jj + 6 | 0;\n  env[/* batch */10][/* currTex */4] = Js_primitive.some(texture);\n  return /* () */0;\n}\n\nfunction drawImageWithMatrixf(image, x, y, width, height, subx, suby, subw, subh, env) {\n  var partial_arg = env[/* matrix */16];\n  var transform = function (param) {\n    return Reprocessing_Matrix.matptmul(partial_arg, param);\n  };\n  var p1 = Curry._1(transform, /* tuple */[\n        x + width,\n        y + height\n      ]);\n  var p2 = Curry._1(transform, /* tuple */[\n        x,\n        y + height\n      ]);\n  var p3 = Curry._1(transform, /* tuple */[\n        x + width,\n        y\n      ]);\n  var p4 = Curry._1(transform, /* tuple */[\n        x,\n        y\n      ]);\n  return drawImage(image, p1, p2, p3, p4, subx, suby, subw, subh, env);\n}\n\nvar drawImageWithMatrix = drawImageWithMatrixf;\n\nfunction resetSize(env, width, height) {\n  env[/* size */18][/* width */1] = width;\n  env[/* size */18][/* height */0] = height;\n  var pixelWidth = Curry._1(Reasongl_web.Gl[/* Window */2][/* getPixelWidth */2], env[/* window */1]);\n  var pixelHeight = Curry._1(Reasongl_web.Gl[/* Window */2][/* getPixelHeight */3], env[/* window */1]);\n  Curry._5(Reasongl_web.Gl[/* viewport */44], env[/* gl */2], 0, 0, pixelWidth, pixelHeight);\n  Curry._5(Reasongl_web.Gl[/* clearColor */6], env[/* gl */2], 0, 0, 0, 1);\n  Curry._7(Reasongl_web.Gl[/* Mat4 */51][/* ortho */6], env[/* camera */0][/* projectionMatrix */0], 0, width, height, 0, 0, 1);\n  return Reasongl_web.Gl[/* uniformMatrix4fv */52](env[/* gl */2], env[/* pMatrixUniform */8], env[/* camera */0][/* projectionMatrix */0]);\n}\n\nfunction createImage(width, height, env) {\n  var context = env[/* gl */2];\n  var texture = Curry._1(Reasongl_web.Gl[/* createTexture */17], context);\n  var filter = RGLConstants.nearest;\n  Curry._3(Reasongl_web.Gl[/* bindTexture */19], context, RGLConstants.texture_2d, texture);\n  Curry._5(Reasongl_web.Gl[/* texImage2D_null */42], context, RGLConstants.texture_2d, 0, width, height);\n  Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_mag_filter, filter);\n  Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_min_filter, filter);\n  Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_wrap_s, RGLConstants.clamp_to_edge);\n  Curry._4(Reasongl_web.Gl[/* texParameteri */20], context, RGLConstants.texture_2d, RGLConstants.texture_wrap_t, RGLConstants.clamp_to_edge);\n  var framebuffer = Curry._1(Reasongl_web.Gl[/* createFramebuffer */21], context);\n  Curry._3(Reasongl_web.Gl[/* bindFramebuffer */22], context, RGLConstants.framebuffer, framebuffer);\n  Curry._5(Reasongl_web.Gl[/* framebufferTexture2D */24], context, RGLConstants.framebuffer, RGLConstants.color_attachment0, RGLConstants.texture_2d, texture);\n  Curry._2(Reasongl_web.Gl[/* bindDefaultFramebuffer */23], context, RGLConstants.framebuffer);\n  return /* record */[\n          /* glData *//* record */[\n            /* framebuffer */Js_primitive.some(framebuffer),\n            /* texture */texture,\n            /* height */height,\n            /* width */width\n          ],\n          /* drawnTo */false\n        ];\n}\n\nfunction drawOnImage(image, env, cb) {\n  var match = image[/* glData */0];\n  if (match !== undefined) {\n    var glData = match;\n    var context = env[/* gl */2];\n    var match$1 = glData[/* framebuffer */0];\n    var framebuffer;\n    if (match$1 !== undefined) {\n      framebuffer = Js_primitive.valFromOption(match$1);\n    } else {\n      Curry._3(Reasongl_web.Gl[/* bindTexture */19], context, RGLConstants.texture_2d, glData[/* texture */1]);\n      var framebuffer$1 = Curry._1(Reasongl_web.Gl[/* createFramebuffer */21], context);\n      Curry._3(Reasongl_web.Gl[/* bindFramebuffer */22], context, RGLConstants.framebuffer, framebuffer$1);\n      Curry._5(Reasongl_web.Gl[/* framebufferTexture2D */24], context, RGLConstants.framebuffer, RGLConstants.color_attachment0, RGLConstants.texture_2d, glData[/* texture */1]);\n      framebuffer = framebuffer$1;\n    }\n    Curry._3(Reasongl_web.Gl[/* bindFramebuffer */22], context, RGLConstants.framebuffer, framebuffer);\n    var init = env[/* style */13];\n    var init$1 = env[/* size */18];\n    var newEnv = /* record */[\n      /* camera : record */[/* projectionMatrix */Curry._1(Reasongl_web.Gl[/* Mat4 */51][/* create */1], /* () */0)],\n      /* window */env[/* window */1],\n      /* gl */env[/* gl */2],\n      /* vertexBuffer */env[/* vertexBuffer */3],\n      /* elementBuffer */env[/* elementBuffer */4],\n      /* aVertexColor */env[/* aVertexColor */5],\n      /* aTextureCoord */env[/* aTextureCoord */6],\n      /* aVertexPosition */env[/* aVertexPosition */7],\n      /* pMatrixUniform */env[/* pMatrixUniform */8],\n      /* uSampler */env[/* uSampler */9],\n      /* batch */makeLocalBatch(env),\n      /* keyboard */env[/* keyboard */11],\n      /* mouse */env[/* mouse */12],\n      /* style : record */[\n        /* strokeColor */init[/* strokeColor */0],\n        /* strokeWeight */env[/* style */13][/* strokeWeight */1],\n        /* strokeCap */init[/* strokeCap */2],\n        /* fillColor */init[/* fillColor */3],\n        /* tintColor */init[/* tintColor */4],\n        /* rectMode */init[/* rectMode */5]\n      ],\n      /* styleStack */List.map((function (s) {\n              return /* record */[\n                      /* strokeColor */s[/* strokeColor */0],\n                      /* strokeWeight */s[/* strokeWeight */1],\n                      /* strokeCap */s[/* strokeCap */2],\n                      /* fillColor */s[/* fillColor */3],\n                      /* tintColor */s[/* tintColor */4],\n                      /* rectMode */s[/* rectMode */5]\n                    ];\n            }), env[/* styleStack */14]),\n      /* frame */env[/* frame */15],\n      /* matrix */Reprocessing_Matrix.createIdentity(/* () */0),\n      /* matrixStack */List.map((function (m) {\n              var mm = Reprocessing_Matrix.createIdentity(/* () */0);\n              Reprocessing_Matrix.copyInto(m, mm);\n              return mm;\n            }), env[/* matrixStack */17]),\n      /* size : record */[\n        /* height */glData[/* height */2],\n        /* width */glData[/* width */3],\n        /* resizeable */init$1[/* resizeable */2]\n      ]\n    ];\n    Reprocessing_Matrix.copyInto(env[/* matrix */16], newEnv[/* matrix */16]);\n    Curry._5(Reasongl_web.Gl[/* viewport */44], context, 0, 0, glData[/* width */3], glData[/* height */2]);\n    Curry._7(Reasongl_web.Gl[/* Mat4 */51][/* ortho */6], newEnv[/* camera */0][/* projectionMatrix */0], 0, glData[/* width */3], 0, glData[/* height */2], 0, 1);\n    Reasongl_web.Gl[/* uniformMatrix4fv */52](newEnv[/* gl */2], newEnv[/* pMatrixUniform */8], newEnv[/* camera */0][/* projectionMatrix */0]);\n    Curry._5(Reasongl_web.Gl[/* clearColor */6], context, 0, 0, 0, 0);\n    Curry._1(cb, newEnv);\n    flushGlobalBatch(newEnv);\n    image[/* drawnTo */1] = true;\n    Curry._5(Reasongl_web.Gl[/* clearColor */6], context, 0, 0, 0, 1);\n    Curry._2(Reasongl_web.Gl[/* bindDefaultFramebuffer */23], context, RGLConstants.framebuffer);\n    var pixelWidth = Curry._1(Reasongl_web.Gl[/* Window */2][/* getPixelWidth */2], env[/* window */1]);\n    var pixelHeight = Curry._1(Reasongl_web.Gl[/* Window */2][/* getPixelHeight */3], env[/* window */1]);\n    Curry._5(Reasongl_web.Gl[/* viewport */44], context, 0, 0, pixelWidth, pixelHeight);\n    return Reasongl_web.Gl[/* uniformMatrix4fv */52](context, env[/* pMatrixUniform */8], env[/* camera */0][/* projectionMatrix */0]);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction clearImage(image, env) {\n  image[/* drawnTo */1] = false;\n  var match = image[/* glData */0];\n  if (match !== undefined) {\n    var match$1 = match[/* framebuffer */0];\n    if (match$1 !== undefined) {\n      Curry._3(Reasongl_web.Gl[/* bindFramebuffer */22], env[/* gl */2], RGLConstants.framebuffer, Js_primitive.valFromOption(match$1));\n      Curry._2(Reasongl_web.Gl[/* clear */45], env[/* gl */2], RGLConstants.color_buffer_bit | RGLConstants.depth_buffer_bit);\n      return Curry._2(Reasongl_web.Gl[/* bindDefaultFramebuffer */23], env[/* gl */2], RGLConstants.framebuffer);\n    } else {\n      return /* () */0;\n    }\n  } else {\n    return /* () */0;\n  }\n}\n\nvar Matrix = 0;\n\nexports.Matrix = Matrix;\nexports.getProgram = getProgram;\nexports.createCanvas = createCanvas;\nexports.makeLocalBatch = makeLocalBatch;\nexports.drawGeometry = drawGeometry;\nexports.flushGlobalBatch = flushGlobalBatch;\nexports.maybeFlushBatch = maybeFlushBatch;\nexports.addRectToGlobalBatch = addRectToGlobalBatch;\nexports.drawTriangle = drawTriangle;\nexports.drawLineWithMatrix = drawLineWithMatrix;\nexports.drawArc = drawArc;\nexports.drawEllipse = drawEllipse;\nexports.drawArcStroke = drawArcStroke;\nexports.loadImage = loadImage;\nexports.loadImageFromMemory = loadImageFromMemory;\nexports.drawImage = drawImage;\nexports.drawImageWithMatrixf = drawImageWithMatrixf;\nexports.drawImageWithMatrix = drawImageWithMatrix;\nexports.resetSize = resetSize;\nexports.createImage = createImage;\nexports.drawOnImage = drawOnImage;\nexports.clearImage = clearImage;\n/* Reasongl_web Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Internal.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Internal.js");
},
d: {"bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","bsb-native/lib/js/caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32","bsb-native/lib/js/pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","bsb-native/lib/js/js_primitive.js":"NM$$bsb$$_$$native$lib$js$js_primitive","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/RGLConstants.js":"NM$$Reasongl$lib$js$src$RGLConstants","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js":"NM$$Reasongl$lib$js$src$web$reasongl_web","bsb-native/lib/js/caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","./Reprocessing_Common.js":"NM$$reprocessing$lib$js$src$Reprocessing_Common","./Reprocessing_Matrix.js":"NM$$reprocessing$lib$js$src$Reprocessing_Matrix","./Reprocessing_Shaders.js":"NM$$reprocessing$lib$js$src$Reprocessing_Shaders","./Reprocessing_Constants.js":"NM$$reprocessing$lib$js$src$Reprocessing_Constants"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Env":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Block = __fastpack_require__(\"bsb-native/lib/js/block.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Reasongl_web = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js\");\nvar Reprocessing_Common = __fastpack_require__(\"./Reprocessing_Common.js\");\nvar Reprocessing_Matrix = __fastpack_require__(\"./Reprocessing_Matrix.js\");\nvar Reprocessing_Internal = __fastpack_require__(\"./Reprocessing_Internal.js\");\n\nfunction width(env) {\n  return env[/* size */18][/* width */1];\n}\n\nfunction height(env) {\n  return env[/* size */18][/* height */0];\n}\n\nfunction mouse(env) {\n  return env[/* mouse */12][/* pos */0];\n}\n\nfunction pmouse(env) {\n  return env[/* mouse */12][/* prevPos */1];\n}\n\nfunction mousePressed(env) {\n  return env[/* mouse */12][/* pressed */2];\n}\n\nfunction keyCode(env) {\n  return env[/* keyboard */11][/* keyCode */0];\n}\n\nfunction key(key$1, env) {\n  return Curry._2(Reprocessing_Common.KeySet[/* mem */2], key$1, env[/* keyboard */11][/* down */3]);\n}\n\nfunction keyPressed(key, env) {\n  return Curry._2(Reprocessing_Common.KeySet[/* mem */2], key, env[/* keyboard */11][/* pressed */1]);\n}\n\nfunction keyReleased(key, env) {\n  return Curry._2(Reprocessing_Common.KeySet[/* mem */2], key, env[/* keyboard */11][/* released */2]);\n}\n\nfunction size(width, height, env) {\n  Curry._3(Reasongl_web.Gl[/* Window */2][/* setWindowSize */6], env[/* window */1], width, height);\n  return Reprocessing_Internal.resetSize(env, width, height);\n}\n\nfunction title(title$1, env) {\n  return Curry._2(Reasongl_web.Gl[/* Window */2][/* setWindowTitle */7], env[/* window */1], title$1);\n}\n\nfunction resizeable(resizeable$1, env) {\n  env[/* size */18][/* resizeable */2] = resizeable$1;\n  return /* () */0;\n}\n\nfunction frameRate(env) {\n  return env[/* frame */15][/* rate */1];\n}\n\nfunction frameCount(env) {\n  return env[/* frame */15][/* count */0];\n}\n\nfunction deltaTime(env) {\n  return env[/* frame */15][/* deltaTime */2];\n}\n\nfunction localizePointf(p, env) {\n  return Reprocessing_Matrix.matptmul(Reprocessing_Matrix.matinv(env[/* matrix */16]), p);\n}\n\nfunction localizePoint(param, env) {\n  var match = Reprocessing_Matrix.matptmul(Reprocessing_Matrix.matinv(env[/* matrix */16]), /* tuple */[\n        param[0],\n        param[1]\n      ]);\n  return /* tuple */[\n          match[0] | 0,\n          match[1] | 0\n        ];\n}\n\nfunction loadSound(path, env) {\n  var sound = /* record */[/* contents : Loading */0];\n  Curry._3(Reasongl_web.Gl[/* Audio */3][/* loadSound */0], env[/* window */1], path, (function (v) {\n          var match = sound[0];\n          if (typeof match !== \"number\") {\n            if (!match.tag) {\n              Curry._4(Reasongl_web.Gl[/* Audio */3][/* playSound */1], env[/* window */1], v, match[0], match[1]);\n            }\n            \n          }\n          sound[0] = /* Loaded */Block.__(1, [v]);\n          return /* () */0;\n        }));\n  return sound;\n}\n\nfunction playSound(sound, $staropt$star, $staropt$star$1, env) {\n  var volume = $staropt$star !== undefined ? $staropt$star : 1.0;\n  var loop = $staropt$star$1 !== undefined ? $staropt$star$1 : false;\n  var match = sound[0];\n  if (typeof match === \"number\" || !match.tag) {\n    sound[0] = /* ShouldPlay */Block.__(0, [\n        volume,\n        loop\n      ]);\n    return /* () */0;\n  } else {\n    return Curry._4(Reasongl_web.Gl[/* Audio */3][/* playSound */1], env[/* window */1], match[0], volume, loop);\n  }\n}\n\nexports.width = width;\nexports.height = height;\nexports.mouse = mouse;\nexports.pmouse = pmouse;\nexports.mousePressed = mousePressed;\nexports.keyCode = keyCode;\nexports.key = key;\nexports.keyPressed = keyPressed;\nexports.keyReleased = keyReleased;\nexports.size = size;\nexports.title = title;\nexports.resizeable = resizeable;\nexports.frameRate = frameRate;\nexports.frameCount = frameCount;\nexports.loadSound = loadSound;\nexports.playSound = playSound;\nexports.deltaTime = deltaTime;\nexports.localizePoint = localizePoint;\nexports.localizePointf = localizePointf;\n/* Reasongl_web Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Env.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Env.js");
},
d: {"bsb-native/lib/js/block.js":"NM$$bsb$$_$$native$lib$js$block","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js":"NM$$Reasongl$lib$js$src$web$reasongl_web","./Reprocessing_Common.js":"NM$$reprocessing$lib$js$src$Reprocessing_Common","./Reprocessing_Matrix.js":"NM$$reprocessing$lib$js$src$Reprocessing_Matrix","./Reprocessing_Internal.js":"NM$$reprocessing$lib$js$src$Reprocessing_Internal"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_DefaultFont":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$String = __fastpack_require__(\"bsb-native/lib/js/string.js\");\n\nvar d_a647e4659c173b8e2a1beed6e11eefcd = \"ql\\x95\\x07\\x90p\\x8f\\x05\\xce\\x03|M\\xa5`\\x17@B\\xb7C\\xf0N1\\0\\xf8\\xab|\\x07\\xe4!\\xe2\\x9c!\\x8e\\xca\\xbb\\x81\\xb4\\xb1\\xe3\\x9b\\xe7s\\xa1x\\x9f#%\\xa5\\xee\\xbf\\xf1<\\xab\\xb30,T\\x16<\\xc0\\x97\\x97\\x0b\\xd7\\x90Vs}\\x05\\0h+\\xf7\\xfa\\x0f\\x01\\x80\\xc6c\\xd5Rb\\xd5\\x94Y\\x10\\x1c\\xb0\\xae\\x02\\0q\\xe3w*\\xe1\\x17*\\xe7\\x95X\\xe8\\xc6\\xa3\\xec\\xdcyF\\xb0\\x19\\x07\\x8f\\x93oO\\x02v\\x90\\x97\\xc5\\xb6N\\xbc\\x0f.\\xb7\\xc2\\x15xM\\xc82\\x97\\x1c+vZv\\x1f\\x89\\fU#0\\x99\\xda\\x19\\0<\\x01\\0p<\\xdbg\\x06\\x94\\xad\\xc0{Z\\x05\\xf7\\x14\\xb2\\xcc\\x947\\x1a:*S\\x11\\x03\\x80O\\x05\\0\\xd7%\\x9d\\n\\x9cS[\\xf4\\xe2*^\\x1d\\t\\0>\\xaf\\x06?Sir\\xda(\\xbd\\x0b\\xa35\\xc5C\\xef\\xa2x-t7%\\x9f\\x9b\\x1f\\x12w?!'\\x83\\x93R\\xd2\\x0eHi]\\xc7\\x10\\xb9n\\xb8n@\\x89,\\x06\\0\\xef\\x06\\x80I\\xe0\\x9a\\xf6 +Vq?\\xd7\\x19\\0\\xfcz\\xbe\\xdaC\\xda\\x90\\xd5\\xde\\b\\0>\\xea\\xb8\\xd2\\x1e$\\xf5\\x8c\\xbe\\n`r\\0\\x80\\x84\\xb0\\x02W\\xab\\xcd\\x02k\\0\\x06\\0\\xbf<\\xac\\x9c\\0\\xe06o\\xc1\\x8d\\0\\0\\xf0{\\xeb\\xcd\\0\\xe0E\\0\\0\\xc0\\xf3\\xae\\xe3E\\x1c\\xfa\\xdcy\\x9e\\xe5e\\0\\x80+\\xf24\\t)\\x1c\\x07\\x7f5C\\xcd\\x05k}\\x03:y\\xe8\\xfeo6\\0\\x90\\x01\\xc0B\\xc4\\xf75\\xfa\\x9d\\xd0\\xe7:&DHe\\x04Z\\x0b>G\\xec\\xc6.\\x91\\xdf\\xb3=\\xe7\\xfb\\xd7zh\\xdd\\x1b\\0\\x10\\0@\\xd5l\\xe3\\xb8>\\xf497\\xd6\\xe5\\x88(\\x9fH\\xde!%\\xbepe\\x83x\\x8eD\\x13\\x03\\x80\\xc7\\0@E,\\xe4\\x19\\xfe\\xddk\\x0e}ng\\x14\\xe1\\r\\xec=\\x93\\\"\\x14\\xc0\\x03T%aC\\r\\xfe\\xc9Hs\\xc4\\x02\\rMYZ@\\xce\\xd5\\xd8@\\xfc\\x94\\\"\\xd7@\\xc4\\xfe\\xbe\\x86+\\xd1\\0\\xa0 \\0\\xb8\\xd6\\xec\\b(\\xf6H|\\xae\\x86\\xcf\\xa1a\\x92XuL\\x91\\xde(\\x17\\xa3\\xb4\\xa45\\x14v\\xcc\\x10\\xdf\\x94\\xe5\\x03;jN#%K\\xc2\\xef\\xb7\\xca\\x9c\\x8b\\x01@a\\0\\x18<\\x89\\xac\\xda\\xf3\\0}<n\\x03\\xe8\\xa8\\xc9\\x9e,\\xb8\\xe5\\xb5c\\xe2~\\t\\xe0a\\xc0p\\xa7\\x02\\x8d\\xa0\\xe3X\\xc4\\x8a\\xebN\\x19\\xc2\\x03\\\\F\\xc2j\\xfb\\x9a\\xc5|\\xd73\\x13\\xde\\x83\\xfb\\f\\xce\\xc4\\x1b\\x95O\\x8a\\xb5\\xfe\\x06\\0\\x17\\0@\\xed\\x89\\xef{\\x8f\\xb5\\xf7\\xf1\\xb8-\\xf0Y=\\xd8\\x14\\xf3\\xb1D9b\\0C\\xc2\\x81\\xe7k\\xc2\\xe1~\\xaff\\xfe/\\xd9\\xfa\\xa5z\\xf9Wb\\x1d\\x8d\\x99\\xac\\xbf\\x01\\xc0\\x05\\0\\xe0\\xba\\xfb+Rl\\xec\\n\\xbb\\xdb}\\x15\\\\\\x9f\\x05?\\x9bC|\\xa3\\xd0\\xcf84\\xb5\\xd9f\\x86\\xdf\\xb5\\xf6}D\\xdc\\xdf\\x0b\\xdfS+\\b=\\xa4\\x93\\xa0\\xa8\\xd2\\xe3\\x01d\\x04\\xa2\\xb8\\x97\\x1f\\x98\\xd0\\xd0\\x07fK&\\xebo\\0\\xc0<\\x94M\\xb1\\x98G\\xa1{I\\xc5\\xf5\\x0b\\xfcK\\xf2p\\x15\\x0f[\\x05\\xba\\xca\\xba#\\x01\\x94p\\xb3\\xcb\\f\\xffr*J\\xef\\x95\\x1am\\x1dz\\x9f\\x7f\\x18\\x0f\\x8dS\\x02\\xea\\xb3\\x1a\\xe6aIe\\xe7H(\\xf8\\x9a\\xc9\\xfa\\x1b\\x000\\x16\\xfb\\x0f\\x83\\xe4\\x87\\x10\\0\\xb0\\x15\\n)\\xf6\\x80\\xc0\\xe7\\n\\xf7\\xbf\\x01?\\xe1\\t\\xb6\\xfe\\x1b\\xe4c\\x88m\\x02\\xc0\\xd2)\\xcf\\xd1\\x83.\\xd3\\xfd\\x87Q\\xc6\\x94D\\xab\\x86J\\xbe\\x02~\\xc2\\xb0\\x16\\0\\xb6\\xc8{0\\0\\x88\\xb0\\xec\\xbe\\x8c1\\xb7\\x10\\x0f\\xe0\\xab\\xfej\\x88\\x1f#\\x1d\\xab\\x88\\x07\\xc8\\x07V\\xb6\\xc8\\xd2\\xa5L4\\xc6e\\xae\\xa5z\\xcc;\\xe6\\xdef\\xc8\\x93h\\xd5n\\xab\\x86\\xae\\xe9\\x10\\0\\xc0\\x12\\0\\xb1=\\xe1\\xba\\r\\0\\x02\\x16\\xdb\\x9d\\xe7v\\x1e;\\xb2\\xd2\\x12E\\x9d\\x85\\x0b\\x1e\\x97\\x07\\x97*\\x81\\xc5\\xae\\xb8\\xc6\\xad\\x1f m\\xa21V\\xccR\\x05?\\x98\\xf5\\xa6%\\x94\\xea@\\xd7\\x86\\xf7\\xf1g&<\\x89\\x05\\x80#\\x10\\xdal\\x84\\xd7\\x10\\xea<\\xed\\r\\0\\xf2\\t\\xb7\\xbf\\xbc1/\\x85r5)\\xcb9A\\xfc \\x8b\\x14\\x0b\\xac}\\x91\\xb1\\xd3v|\\xe1S\\xced\\xa7o\\xdbLB\\xaa\\xba:\\xb9\\x10\\x8ako\\x10\\0w#\\xb8\\xc6\\x10`\\xb4\\x81\\xe7:\\x05B\\xc7>q\\xad\\x18\\0\\b\\\\^l)'\\xc7\\xea\\x9d^A+X\\xf4\\xae\\x17Q\\x11V\\xeb\\xfcLW\\xf0\\xde\\xf6D\\xf7\\xbbO\\xb0\\xde\\x98\\xfc2\\x07\\x91g(\\x84:\\x18pv\\xafc\\x0b\\xe4@$^\\xd9\\xacx\\x9e\\xdc\\xa8\\xad\\xd9s\\x1d\\xa1s\\xa7X\\x7f\\x03\\x80/\\x95\\x0et3\\xef(@\\xd3*\\xac\\x8f\\xb6\\x9a\\x1a\\x8c\\x91\\x12V`\\x8f\\xadf\\\\\\xf7\\xf3s\\r\\xe31\\xf9\\x9eY\\x0bq\\x8c\\xbc\\x7f\\b\\x80=\\xd0o\\xf6\\x19c\\x7f\\x03\\x80/\\x16\\xcd\\xe8\\xb3R\\xc0\\x83+#\\x8f\\x02\\xd7\\xd4\\0=\\xf3\\xde\\x07\\0\\x14\\xa0q\\xf5\\x02\\xbe\\xb0\\xc3m\\xa3\\xc5c\\xe2Sz1\\xdc0\\xaa\\xf5\\x003\\xce_4\\x06\\0&\\xbe\\xf8\\xfd\\xaa\\x17\\xc8m\\x9br3\\xf2R~w\\x07\\xd9\\xac<n[\\xb3f<\\x15<\\x95(t\\xf4\\x90\\xce\\xf6;\\x02\\xbd\\x8b %\\xef0\\0`\\xe2\\xe3:\\xf1\\xf3\\xdasI\\xc7:\\xa50\\xe0\\xdcA\\\"\\\"i\\x06\\xe2\\xacu\\xac\\xf4\\x84\\xe2\\xa6\\xb4*S\\x1e\\x96O\\x11w\\xe7]\\xc4(\\x1eg\\xfd\\x07\\xe4\\xa1\\x9c\\x9e\\xc7F\\x84\\n\\x06\\0L\\xbc\\xc7e\\xa6\\xb9R\\xd3\\x01\\xe4;\\x05\\x15\\xf3B\\xee\\0\\x80\\xd3u\\xe5\\x8eZ\\xb8`(\\xc5\\x8e%\\x10\\xd1\\xc4\\xba\\x7f\\x12\\xbd\\xa1U\\xf8\\xec*\\b\\xb3\\x04\\xd7\\x89\\xf7\\x18\\xb2\\xfe{\\xe0\\xef\\x8d`-\\x18\\0\\x04^\\x10\\x97`\\xe1f\\xc8k\\xce\\xd5\\x0b\\xce%\\xe1\\x82\\xc7CK\\xab\\x04\\0\\x18!\\x8dgOK\\xed\\x85\\xb7\\xc8\\x06\\xe6=5\\x89\\0\\xb0\\x80\\xae\\xe8j\\x85t\\xef\\xa9\\x85\\xf8B\\xaf\\x90\\xf5\\xe7Z\\xc7\\xb7\\xc0\\xf34\\0\\x10\\xb8\\xa3\\x8d\\xc0b\\x1f\\xc2s\\xb5\\x02\\xf72\\xc5\\xfd\\xc5\\xd6\\x96\\x9b\\0\\\\\\x15\\x04\\0M\\xb9t(I\\xc9\\xdd\\xc3\\xa1\\x04\\xf4\\x83\\xf0\\xd0$\\xd68\\xc4\\xf3\\xe8\\x82\\xb3\\xe6\\x1d\\xc5\\xee\\xa2\\xac\\x04\\xa8P\\x05O\\xa3\\x01\\x80>n\\x9c\\x04\\x9f\\x99\\x85\\xe7\\x92\\xf4\\x81\\xcf\\x19\\xae\\x99Z\\\\\\x1a\\xb7\\xb7\\x16z\\x1amd\\xdc\\x1f\\x02Vn\\xf4\\xba\\xa6\\x19h$\\xae\\xa3V\\0bK\\xbc\\xa3Aq=;\\xc4m\\xdf\\xd5\\xc4\\xbb5\\0( \\x1c\\xab\\xef\\xaa@\\xf2\\x83\\xb1X\\x13\\xa4\\xd5\\xd7Kz\\xda}\\xbf\\x95\\xb2\\xe5F\\x01\\x894\\xee\\x97\\xde\\xcf\\xc4$\\xf6*\\xe1yZ\\xe6>F!(\\xb5\\xc4\\xef\\xacB\\xe5\\xd1V>\\xce\\x84\\x81h\\x84\\xf7h!@\\xc4\\x03\\xf7)\\xb8&\\xb6\\x97\\xe4\\n\\x0e\\x88/\\xeah\\x94\\xaev\\xa3t\\xa1c\\0\\xe0\\n\\xc1\\x05D\\xad\\xc7*K\\xea\\x0bp\\x1d\\xc2\\x80\\xdew-LNbR\\x93\\x1a\\x01\\b\\xae\\x03\\xd0\\x80\\xa2\\xbb\\xdej\\xc6\\xc8LD\\xa8jI\\xc0H+4\\x11VtP\\x9ek\\x89\\b7$I!M\\xf8\\xb0Cz\\xc7\\xe1\\xdd\\0\\x80\\xadr\\n\\x0f\\x1fVr\\xae\\x07D\\x02\\xc4\\x14\\x9f\\x826\\xf6\\x9f\\x05\\xefw\\n\\x9c\\x7f\\x06\\xdb\\x06\\x8c\\x96\\x10{\\x8b\\x843\\x80R\\xba:\\x10\\xcf\\xd6\\t\\n\\xa0)\\xa3m!\\xbd\\xebp{\\xc8B\\xa0\\xc8<w\\x90\\xd7\\xc97@\\x17\\xf2H\\xc8Eq\\xf5\\xa1\\x0f\\x88\\xb4\\xe1P-\\\\\\x1f\\xeez8\\xe0w\\x7fCG\\0\\x80M\\x06\\n\\x88/\\xb9#\\xa1\\x99\\xe2\\xce5x^\\xae\\xb6\\x0e~\\x01=\\x95V\\xc8\\x82\\x1f\\x8a\\xdcC\\xedQ\\x94\\x969w\\xcc\\xae\\x86\\x86\\xd4\\xb3\\x86\\xdf\\xb5\\t\\x1d\\xc4\\xb7*\\xe3sU\\x19\\xce\\xd1$\\x02\\x9c\\xd4\\xbb\\x9b@\\xd6\\xdf`\\0 \\xb4\\xb2\\xd8\\xbd\\x9e#\\x13v\\x95G\\xd95EG!\\xab\\x17\\xdbE\\xe7s\\xa1\\xd7\\x9f\\xeb\\xa8<\\n\\xd6\\x05\\xac\\xed\\x12\\xf8|JQ\\x0f\\xe6\\x1c\\xa8\\xc1\\xa4\\x84\\x84vx\\xaa\\xc8\\xcf}\\xa4,(\\f\\xd8\\x13\\x12h\\x0b\\n\\x1d\\x96\\x88Pb\\x84|\\xa4!\\xd2\\xfa\\xf5\\x18n\\xc0X\\xce\\x01_R\\xce\\xc4\\xe46\\xc1\\xf3\\xf9R\\xb6\\xd0\\xf0\\xb9\\x0e\\xa5\\x85\\x94\\x8e\\x14\\xd7J\\xaf\\0\\x82]\\xe1\\x16\\xaf\\xa0\\xcf|\\xaf`\\xa3\\xc1L\\x1e&\\xbe\\xecn\\x93x\\xae]\\xa9\\xc8M!\\xe5\\xf7\\xc5\\xd2>Zp\\t\\xf1\\tg\\xcd9\\xd0\\xccA7fb\\x92]|\\x89\\x95\\\\\\xe7:\\\"@\\xe8\\0\\xf9\\xf4\\xdf\\xe9\\xe6g7\\b\\x81\\x93\\x9b\\x1edbr\\x9b`\\xeb;d<\\x974\\xbb\\x1b;\\xfcs}\\xc0\\xf3\\x93\\xb0\\xfe\\x98\\xebo\\xf2h\\x19 ~[\\b\\xcb\\x16\\x11J\\x8c\\x91\\xc7\\x13\\x06\\x8bb\\xd0\\x1b\\xcd\\xf57\\xf9V\\xa92\\x85\\x12%\\xad\\xb4\\xd6#\\xd1v\\xc1\\xb9[{\\xb8!\\xc7\\\\\\x7f\\x93\\x8f\\x96\\\\\\xd3h\\xde\\x06\\0\\xd8\\xf39\\xdd\\xfc\\xc5\\\\\\x7f\\x93o\\x92S\\xd1\\xf6\\x87^WI\\0\\xf0u\\xf9\\xa52\\x14\\x9b\\x98\\x14\\x979Ai{'\\x1e\\xe7j\\xb3\\xa5\\n\\xa7=\\x9e\\x02\\x008\\x14\\xf8\\xaa\\xb2R\\x93w\\n\\x8eQ\\xb5n\\xbb\\xaf9$&3\\xff4\\0\\xd0\\x12\\x9e\\x86B\\x81\\xab\\xe9\\xc9MLT\\x92Z\\x030\\x82\\xbc\\xa5\\x94;O\\xecQ\\x02\\0R\\xf8\\xf10W\\xa0\\xb9\\xfe&\\x8f\\x14\\xb7\\xdf\\x9e\\x1b4Iy\\x10n\\x03\\xc5\\x13b}\\xdfq@x<\\xf8\\xea\\xf1Z\\xc6\\x04o\\xa6\\x85{\\xe8\\xc9ML\\xd4\\xf1\\xbb\\xeb\\xe6\\x9eJ2\\xbf\\xf8\\x9er\\x85\\x12}\\xc2\\xb30\\x000y\\x85\\x9cV\\xff\\xdc\\x9e\\x9a\\x13\\xe2\\xdeO\\x03\\x80\\x141\\x000y\\xbc\\xb8qj\\xe7\\xb8\\xf3\\x9f\\x9a\\xb8Z/TH\\x03\\0\\x93\\xd7(\\xc4A\\xfc\\xfd\\xca\\xe4\\xd5\\xd3v\\x01\\f\\0L>V(BPw\\xf1\\x0e\\x06\\0\\x06\\0&\\x9f'\\x14%\\xb8\\x9b\\x1b\\xb8\\xb2\\x9a\\xefi\\xdb\\x80\\x06\\0&\\x1f)\\x92f\\x9d\\x1e>\\xafy\\xc5\\0\\xc0\\xc4\\x04d\\xd3[\\xdc\\xfa\\x80\\xd5\\0\\xc0\\0\\xc0\\xe4sD\\xda\\xf7\\xdfA>~\\0\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x13\\x93\\xf2\\xf2?\\xde\\xe2\\xf9\\xd7\\xb5\\xa0\\xd2\\x10\\0\\0\\0-tEXtSoftware\\0by.blooddy.crypto.image.PNG24Encoder\\xa8\\x06\\x7f\\xee\\0\\0\\0\\0IEND\\xaeB`\\x82\";\n\nvar d_d89d4399cabd0fbbf0c369ca8c93e2a0 = \"\\x1f\\x93\\xc1N\\x89y%\\xe2c7\\xf2)\\xe5\\x9117\\x91\\xca$\\xbcE\\x80b\\x1f\\xa9\\xcc;\\xd8v\\xe0+D\\xbb(\\xdc\\xcf\\xd7\\n\\xe5\\xa7b\\xf5\\x1d-\\xb4\\xf1\\xe1\\0\\xd0x\\x94\\xbac\\xc2\\x12\\xe9L\\xc0\\x92\\0\\xa0\\xc9\\xe6\\xe3\\xf0p\\x8f\\xb8\\xd6\\xd5\\0\\xe0\\xb3\\x93N\\x12\\xc5\\xc2\\x9d\\x801S\\x87b\\0 e\\xdb\\x8b\\xf3\\x82v\\x90\\xcd\\xf6\\xa3@p\\xbb\\x01\\0\\xdc\\xe7\\\"I\\xd0\\xd5`\\xa4\\x1d\\x06\\0\\x89\\0\\xb01\\x8b\\xb6\\x82\\xdf\\xdb\\x8f\\xa9\\x000C\\xb99\\x04#\\xc4\\x93Y4\\b\\xf0\\x86\\x1b\\0`PxpnQ\\x8f%\\xf3\\xbe\\0\\0F\\xe5Q\\x0b\\x16\\xbc\\xc4\\xe25\\n\\0\\xe0\\xaei\\x81r\\xe4\\xa2x\\x8cZ\\xaa\\x1b\\xbf\\xdf\\0\\0\\xae\\x170\\t\\xef\\xd5\\xac\\xff\\x97\\0@n\\xd1\\xec=/B\\0\\x90\\x1e%&\\x10\\xb91\\xf4\\x9a\\0\\\"\\xeeuv7\\0@\\xeb\\xe4\\\"*\\xe6\\xb7r\\xef\\xe5w\\xe0O\\x06\\xbb\\xc7d\\xa0s\\x9dh\\x93e\\x8d\\xc2\\xf2i\\x12\\x86cf\\x008\\xe3\\xf3\\x9c\\xf5\\n\\x9a\\x1d\\x13)\\xd8M7\\0\\x80{/#c\\xfds<\\xbf\\x16d\\xa3\\xe1\\xb5\\x95\\xa7&\\x99\\xad4\\x97\\xd0\\xc2\\xd6K\\xda\\x1b\\x90:s\\0\\xe7\\x1d\\xf01\\xc0\\xbf\\x89E\\xbc\\xc3\\x90\\x0b\\x04r\\xcd\\xf3\\x1b#=\\x89\\x9c\\0\\xe0&3\\xeb\\xc0\\x9a\\xc8Q\\xf1\\xd9\\x81\\x7f\\xd7g\\n\\x84p3\\xfc\\xde1\\xb2\\xb2\\xee\\x82\\x82\\x8bfz!XH\\x16n\\t\\0\\x90\\xde\\x93\\xab\\xac\\xb9\\xb6\\xa2r\\x85Km\\xe4\\xb9\\xde6R\\xdc\\xb5\\xfa\\xc7\\x0f\\xa0\\xd4\\n\\x80Z }\\xeb\\xd4D\\xb9\\xb0|l\\xad\\xb5\\xc7\\x85k\\x1e\\f\\0>%\\xab\\f\\0nS\\xfe-\\xc1c\\x1a\\f\\x04\\xee\\x01\\x81\\x18\\xd2N,\\xb9\\xa6\\x0e=e\\x04\\xb7\\x01\\x80>\\xac\\xcc\\xe1}\\xb9\\xdb\\xa7\\x9b\\xa9j9i\\x81n\\t\\x9e\\x95\\x8a\\xe4&\\x18S\\xa6\\x0e\\xc5*\\xdej\\0\\x10\\xcc\\xa3\\xe0\\xe73*\\xcf3\\n\\xeem&\\xdc{\\x8a\\x13\\xd2\\xe5\\x8c\\xf4\\x9d\\xd7v\\b.\\xc8\\x0b\\xe0\\x17\\x14\\x93H\\x1b \\xcf\\xd4\\xa1X\\xc5\\xdb!/9\\xc5\\x96\\xe9|w$\\x01\\xaf\\x02\\x80\\r\\xe8\\\"\\xa9\\x10=\\xbc;0\\xf5|o{ \\xac0/\\xe0%\\\"-\\x9c\\xe1\\xa6\\x0e\\xc5\\0\\x80\\xbbg\\x9f\\x8b\\x9eJ:\\xe1\\x88\\x93%\\xd2E~:\\0\\xf4\\xcc\\xbb\\x96l\\x05\\xba\\xe7X<\\x86\\xc9\\xd8\\x86^\\x9e[\\x88\\x99:\\xa4\\x05\\0\\xc9\\x18\\xb3\\x18\\xe9!\\xbd\\xca\\xf0\\xaeB\\xa0+\\0`#\\xbc\\x1a\\xdf:\\xa8\\x9dg2\\x83\\xac\\x06`\\x03\\xab\\x0fx=\\b\\x84(\\xbc$\\0@U\\x90\\x85\\x86\\x9a\\xe4\\xf4hb\\x92\\xa1\\xa1gqe)\\xb0/!\\x1bS\\xd8\\x14\\xfa\\xfd\\x9a\\xc8\\xb74\\x82\\xe7\\xe6\\xeb\\t\\xf1\\x81\\xe3\\x04\\xd6f\\x9cUB\\xb1hn~\\xbf\\xd0\\xd4\\xa13\\xf6+Q\\t\\xb8\\x17p\\x15G\\x88\\xdf\\x96j \\x8da8\\x05\\0V\\x8f\\x175\\x82\\xbe\\xb5;\\xf4\\xfb\\x03\\x01j\\x8b\\x10hpr\\xb4&\\x9e\\x81\\xd1\\x8d\\xbd\\f\\0\\\\%\\xf0%\\x16s\\x01\\xc0\\xf1c\\x1dJ\\xc5\\x88\\xd8R\\x1dB\\xeb\\x89\\tD\\x96D\\xf0\\x19#\\xbf\\xbbz\\x14n\\x8fX/c@\\xc9g\\xc23\\x98\\x15\\xe7?\\x14\\xf7a\\xf2\\\"\\0(\\xb1\\xb8\\xaf\\x16\\xdc\\xd6{\\xd6\\xf47\\x81\\xcfN\\x9ep\\xa7\\xba\\xf8\\x19\\xf5\\x1e%\\xac#\\xdc\\xe9\\xd0\\xefo\\x82\\x1cO\\x97\\xb0\\x1e\\xf1\\xf9\\f\\x002Ih6\\x9f\\x01\\0\\xef\\t,\\x10GW^\\xbd\\xf8\\x19q^Z+\\b=$9\\x96\\x91\\te&S\\xdd{<\\x03\\x03\\x80\\xdf\\xb9\\x8dU\\xa8\\xf8\\xfd\\x07\\xad\\x0b)\\0hvM8\\xca2\\x9b=\\xf8\\xa5\\0\\xa0m\\x19\\xe5>\\x9fB\\xdbMyR\\xbe\\x89J\\xda\\xea\\xc9O\\x05\\0\\xc9:r=*_85\\0\\xcfc`\\xa2\\x14\\x97\\x84A\\xfb\\xe2&\\xe2\\xfbO\\x06\\0\\xaa\\xd4\\xd9$\\r\\0\\xbaH\\0p\\x93\\x85G\\xc0\\xfa\\x1f\\xe6\\xfe_g\\xe9\\xb9\\x177g\\x8ak\\xdd\\x05\\x10*;\\xe6Fv\\xf7\\x04\\0Hj\\x050\\x89\\xc8\\x13\\xa5\\xfe\\xb1\\x80\\xd8\\xcbX\\x14\\xa1E\\xa7\\x04D\\r\\0l\\xcc\\xdf\\xb9\\x8eL\\xae\\xd5|3\\xeb\\xff\\x1c\\0\\xc8\\xad\\xfc\\xa5\\xeeI\\x9ax\\x9a\\x1f\\xee\\t`&\\xe2X\\xefe,\\b\\0K\\0@'Ang$<:\\x9cl\\xb5\\xd8\\xfff\\0x\\xba\\xf2k\\x01\\xc0\\x97\\x80J\\xed\\x1el\\x80\\x1e\\x156A|W\\xe5\\x0e\\xff2\\xe8h\\x88OV\\x90UT\\xae\\x84\\xe7\\xc7\\x15\\x02aK\\x8f\\xfbAF\\x947Y\\x039\\x9a\\x93\\xe9\\xc9\\x1dGg]\\x807\\x03\\xc0\\x1b\\x94?\\x16\\0\\xf0\\xfd\\xc5$?+\\xf0\\xf76\\xa4p\\x16Jf\\xfa-B\\xe0\\nu\\xd9\\xe5\\xc8\\x014\\xc4\\xffz\\xe0wH\\xb8\\xe7f\\xca\\x7f3\\0\\\\\\xa5\\xfcx\\xb1\\xd4\\x17\\x02\\0\\xa6G\\xd3V\\x13n\\x10W\\xae\\\\\\t\\x94\\x96\\x8a}k\\xe0\\xfb\\x0b\\xaaLy\\x0e\\xca\\x9d_!<<\\xb6\\x03\\xff\\x10\\x98\\x93}\\xaa\\n\\xfc\\xbfD9\\xb7\\x89\\x12\\x000\\xb7[I\\xcb\\x8f\\x95h\\xba\\x10\\0\\xb05\\xd5\\xfcv\\x8b\\x9e\\x117*\\xec\\x10\\xb8\\xee\\x9d\\xc2\\xbd\\xe7\\xe2\\xe4\\x16\\xf2\\xd4YP\\xe7\\x90\\xcc\\x81p\\t\\\\\\x1b\\x0fH\\xb9\\xe1\\x8d\\xcf\\xea\\xa7\\x8c97\\x89\\0\\0\\xdfQ*\\x11S\\x83\\xbf\\xb6\\xbf\\xba\\x10\\0b\\xc9:\\xb4\\x89*\\x89\\xa7\\xa3Y\\xec\\\\\\xa80f\\xcaoh\\x12z\\xb9\\x93\\xa99\\xe62\\x98D\\x02\\xc0~\\x81\\x17\\x80\\x17|,\\xd2\\xa7\\0@\\x07q\\x13\\x90cx\\x02\\xdc\\x04\\xd8\\xc0\\xfc\\x9fS\\xda\\x96Q\\x8e\\x05=\\x13\\x1f-W\\x9d\\x01\\0|\\xb9\\x94\\xd4\\xb5Ry\\xbc\\xd0\\xdaT\\xf7:\\x008\\xe7\\xda/Pv\\xbf\\x1c'\\xa9b\\x89 S\\0 \\x96\\xaf\\xaf\\x04\\xc5\\x97f\\xc0)\\x97\\x07ps\\tT\\x0f\\x03\\x97\\x98\\x94\\x86\\x11Xac\\xab-{\\xf4\\x1c,'p1\\0l\\b\\x89\\x8fB\\xa1@\\xe7\\xb1\\x86s\\xa4\\xdbz\\x07\\0\\xa4\\xce\\f\\xccq\\x1f\\xd4\\xe7\\xb5-\\xd5U\\\"\\0\\x9c\\xca{\\x80\\xbf]\\xbb%\\x8e.\\0R#X\\x11\\xd0\\xe5\\0\\xb0z\\x928%B\\x81\\xc5\\x13\\x0fk\\x92`w\\x03\\0\\xb6x\\xed\\x83\\0\\xa0\\xf5\\x84s#\\xfc\\x9e\\xae\\xb4\\x01\\xbf\\xd3\\xa3M$\\x9e\\x89\\xbd\\x03\\xe2\\xca\\xb3\\x8f\\x9f\\xd0\\xd0\\\\\\xfe\\x87\\0\\0\\x8eMs\\x84\\x02\\x15\\x11C\\x1f\\xa0\\x1f\\xee\\x91\\x0b\\x004\\xfb\\xe5>\\x8e\\x80s\\x04V\\x1b\\t\\x94\\xb9\\0`\\x009\\x99)7\\xce=e'\\xa1\\xff\\x01\\xca\\x15\\xe8\\xca\\xc6\\r\\xfe\\xee\\x02\\x98\\xc5\\x7f \\0\\xd4\\x99C\\x81\\x81H\\xf8M\\xa0g\\xe2\\xbdc\\x17\\0{,\\xa1=\\xffY\\xb1\\xb0s\\x86\\x001\\0xd\\x06\\0\\x93\\x0f\\x01\\x80\\xdc\\xa1\\0\\xd50\\\")r\\xc9\\xa9\\b\\xa9\\xd4\\xdf\\xbe1j\\xd4\\b\\xf3\\xeaa\\0\\0\\xc8:\\xb7\\x06\\0\\x06\\0\\x12\\xc5\\x8d\\r\\x05\\x1aA\\x9c\\xaf\\x990\\x94\\xa2\\b\\xda\\xe9\\xc7\\xdc\\xb9N\\x97wgb\\xdcP\\xbe\\xe0\\x88\\x04\\x80T&\\xe4\\xd5\\0\\xc0\\0@\\x02\\0\\x98\\xe56&\\x14\\x90p\\xc6\\xf5J\\xa0\\x89\\x05\\x80\\x05\\xd2y\\xff\\xb9\\x10a\\n\\0B\\xabTD\\xcau__\\x02\\0\\x15\\xe3mM\\x11\\xc6\\xa55\\x80z\\x97\\x1cB\\xabu(,s\\x8en\\xc0\\xd2e\\xa6\\x03\\xba'\\xae\\xedZ\\x03\\0\\x93'\\xaf1*\\x94\\x82\\x1a\\xea\\x9a\\x13\\0\\xdckn\\b\\x0fS\\xf2[g\\x07\\xe6\\xec<\\xcf\\x11>\\x8b\\x8d\\xe9\\xe3\\x04O\\xda\\x19\\x89cS,>\\r\\0\\xd4\\xe0\\x1f\\x8f~\\x85p<\\xf8\\x83\\xe2\\x9eG\\xc2\\x93\\xda\\x15@\\xc21\\xf3\\xe4\\x04\\x80\\x01d\\xdc\\x03\\x1ds\\xbd\\x1c'\\xe3a@\\xf0L\\x89a\\xd5\\x95\\x94\\xe8J'\\t\\x85z\\xd1c\\xc3\\xa8\\x98\\xe4\\xdbA(g\\xad\\bI6\\xe2\\xd9\\xcc\\x10\\xc7\\x19P\\x1a\\bg\\xe2\\x99\\xb7\\x02\\x8f\\xcf7M\\x88Z3VA\\xa8\\xb0\\\"c\\xc0\\x8dl\\x1d\\xf4\\xc6\\xca\\xb4\\x80<s^C<w\\x1f\\xe7\\xa2\\xc7\\x9e\\xf3,y\\xd6J\\xca\\x14b\\xce:\\xaf\\x82{\\xe6\\x1a\\x81Z\\xe1\\xb3\\xbb\\xba\\xde\\x9er\\xf1G\\x01\\xd8c\\x82\\x93\\x1a\\xe5\\0j\\x04\\x10\\xbb\\xa9x<\\0\\xb8\\x7f\\xe7\\b\\x1e$m\\xb4\\x9a\\xd1\\xe1\\xbe\\x05\\xbaf\\x02\\x80\\x15\\xfe\\x1dT\\x99b\\xc9\\xb4\\t+\\xbc\\xebP\\t\\x94w$\\xde\\x19\\xb5\\x1d;y\\xc2\\x1c\\xb7\\x12p\\x05\\xfd\\xb4\\xa3T\\xa1\\\\\\xfc\\x85y\\xcf\\r\\xf89\\x15p\\x12\\x10\\xd7\\xac\\x98\\x17\\x90\\b\\0x\\xeb\\xef\\xf4\\fpv\\x9b\\x8b\\x115q\\xa9\\xef\\xa5\\xa7n\\xd3\\xe5\\x94\\x1a\\xfc$\\x17\\xb9\\0\\xad\\x07\\x99\\x8b\\xcb=\\xc7\\td%\\xb9%\\x94\\x1f\\xd7\\xfb\\xf7\\b\\0\\xf0\\xff\\x0fg\\x8d\\xb5\\x9e{\\x0b\\x15\\x8f\\xf9v\\x014\\xb9\\x94\\xaf\\x16\\x8a\\x99W\\xc2\\tP\\x0b\\xdd\\xe1\\xd8r[\\0\\x1d\\x07\\xde]\\xe0y\\xdeW\\x1fx\\x06\\xb8\\xd9E\\x12\\x9fv\\x84\\xf2n\\n\\xcb\\xd6\\x80\\xbfP\\xe9\\xec\\x12,\\x05\\xaa\\x7f2\\x1c\\xa1\\xe7\\xdd2\\0P;\\xe1\\xab\\xf5\\x14dx\\x813\\xb3P\\xb9\\xcf\\xcd\\x10\\xcf\\xf8S\\xaa\\x19)gRK{H=\\xa0\\n\\xfee\\xd4\\x19\\xe1=\\xac8%\\x01\\xa0c\\0\\xc0$\\xf3\\x0b\\xe4\\x94\\x8e\\xeac\\xaf\\x12c\\xb2*\\x93\\xbb\\x9a\\xb2\\x10G\\xc6]\\xdfA\\x9e\\x7f\\xf8V\\x8b\\x14\\x1a&\\xea\\xe6+\\x8e\\bCc\\0\\x90 =\\xf0\\xc36$I.\\xaa\\x80\\xa5\\x87\\xf4\\xac\\xec\\x9c\\xe1\\x1c\\xa5\\0\\xc0]\\x88\\xbe\\x9d\\x92\\xb3@\\xe5\\x9b\\x93Q\\x15\\xc8v>\\xb8\\xb5\\xe6\\xa3\\x1b7\\0(\\x9c\\x04\\x1c\\x13\\xcf\\xc3\\xd1`I\\x13J\\xa9\\x1c\\xfe\\x9aZ\\x01n\\x12\\xd17)nO<\\x93*\\xe2\\xfdU\\x84b\\x8f\\xcau\\xb0;\\xc6\\xc1\\0\\xe0\\xa1\\0\\xf0\\xc4\\x90\\xe6\\xad\\x92\\xba\\xd8W\\x90\\x17?\\xe1\\xed\\xb4\\xd0ND\\xadX\\x1fG\\x84w\\xe0\\x0b\\x05B\\xd7\\xb5\\x83q\\n\\x18\\0|(\\0\\xa4\\xd2|kx\\x0fp\\xc5\\xdd\\x19\\xc6\\x9c\\x87\\x9b\\xf3\\x90\\xcc\\x8c\\xa0\\xf6\\xf89\\xef\\x80\\xf2Lv\\x02\\x98\\x06S\\xef<\\0 \\xc9\\xdaK:\\xfc>\\x19\\0\\xb8\\xdatIr\\x90\\x92\\x06\\xc2\\xe3\\xb6$\\xd2(\\x7fo\\x04\\xbe$\\x99+!\\xe6\\xf6\\xf8\\xcfcr\\xac7\\xfe\\x9f4\\x8fu~\\x7f\\x87\\xf42o\\x03\\0\\xa40\\xabR\\x01rg\\xb9k\\xf8w,\\xb9{\\x94d\\xdby\\n\\0\\f\\x10\\x97\\x94t\\xad\\xa5V1v\\xc1\\xfb\\xc4\\xc5P\\x15\\xf1\\xbcsl\\x03r\\x9e\\xd1\\xe8<\\xafRD\\xb6_\\t\\0\\x9ck\\xa6i`\\xd1&\\xa04\\xcdC\\xdd\\x8d\\0\\x10\\x02(iS\\xd2\\xaa\\xbc\\x7f\\r\\0\\xcc\\x8e[,\\x05\\0\\xe9\\xe7$<\\x02W\\x03\\x80\\xeb\\x15\\x94\\xe2y\\xf8:\\0\\x98\\x05\\xf1]\\xea\\x04\\x1a\\xfcRq\\xa2gC\\n\\xb4y\\xe2\\xbe\\xfe&\\0Hy\\xee\\xa1\\xad\\xd3\\x03%\\xb7\\x96\\b\\0p\\xf7\\xce\\xfb\\x8b\\x01\\0\\x87\\x87\\\\\\x02\\xb0IX+\\xbeg\\xb2\\xc3\\xfb\\x93\\xbe\\x8f\\x01\\x80S\\x01kd\\xf9\\xb7\\x02\\xf1\\x16&\\xda\\\\\\x187\\x14[\\xc9^\\0\\0\\xad\\xf0(\\xb1w\\x8f\\xeb\\xfc\\x07\\xe6Z\\xcf\\x8eEm\\xa2\\xb5F\\xb1\\xb7F\\xb17\\x81\\xf7W\\x81\\xacB\\x93\\xda\\xe3\\xef\\x14Jz\\xe6\\x0bf!\\0h\\xd8\\x95\\f\\0\\b\\0\\xd8\\x81\\xdf\\x0e\\xca5=\\x18W\\rJ\\x9alp\\xc6:\\xb45U\\\"9\\xa7\\x95\\x06dCB\\xcfg\\xda\\x0b\\xdf\\x15\\xa5x\\xaer\\xc6$\\x01%\\xe5\\xdd\\xd4\\xf5P{\\xfc\\xa3\\xc2M\\x0f1D\\x19\\0\\\\\\x90\\x04\\xac\\xc1O\\xc4p\\x0e\\x9c\\xc8\\xb5\\xef:A\\\\\\xe3\\x0f\\x06\\x8e\\xe9\\x81\\0\\x80\\x93q\\x1b\\xe3%h\\xde\\x15\\x958l#\\\\{\\x1c\\xda\\x9d\\xa3\\xbe|\\xdb\\x80\\x8b0?DU\\0\\xce\\xca\\xeb\\xe9\\x05\\0\\xf0\\tu\\x1f\\x8f\\x01\\0\\xecri\\xb6ib\\x948\\xa6\\xe9\\x07\\xf7\\xc9S\\x000\\n\\x8f\\x9c\\x15\\x80+\\xa455I\\x01\\xa0!\\x80P\\x0bl\\xdc^;\\x07D\\x9c\\x8b\\xaf\\xa9\\x10\\x1d@\\xc6\\x07\\x80\\x9f\\xd5bj\\x9e\\x17\\0JI\\x8eQ\\xd0\\x14)\\xe4\\x9d\\x16\\x01w\\r6\\x99\\xdf\\x95/\\x1c\\xda\\x12\\x92{\\x12\\xde=\\t\\xab\\x12\\xe5\\xe27J\\x17\\x1d{y;\\xfcf\\x04\\xc2^\\xe4\\x938$\\f\\0\\x14.^\\x89j\\xc2\\xbb\\0 \\x17\\xfb\\xb0\\x04\\0\\xdc\\x8c{\\x13\\t\\0X\\xd1\\x16\\xcf\\xb9j\\xa4h\\x1bq\\xcdk\\xc0\\xc2w\\xf0wG'\\xa6\\xa7@B\\x98\\xd2\\x9b\\x8a\\xbf\\x07\\0vHo\\x1az\\x1a\\0\\xe0\\n\\xbc\\xb9\\xd0\\xbb\\xc2\\xee\\xf6\\xc0<\\x03i\\xe1\\xd1\\xce(\\xe7\\x02\\xd7\\xd1\\xaa\\xbb\\xe03\\x03\\x9d\\x98\\xd6\\x10\\xa6\\x18\\0<\\x04\\0R\\xbb\\xfd\\x9e\\x06\\0\\xd8\\x92\\xae\\x05\\xdf\\x95\\xfb[\\x12\\xeeD\\xe9\\xf4\\xa7^\\xa0\\x8cw\\x95\\xdd\\xd6?`\\x85\\xe7\\x02X\\xe5\\xdf\\x07\\0\\0|\\0\\0l\\nK\\x9a\\xfa\\xae\\xf0(\\xb5P]\\x83k!C\\xb5\\x0e\\x1a\\\"\\x18|\\x9fw\\x88\\xf1\\x01\\x14ZT%\\x8ba>\\x1d\\x000\\xddvS\\xf8]\\xe5\\xecC\\xd0>\\xa7\\xd5\\0\\xe03\\x01\\xe0j9@\\xdf\\x16\\xfaD\\0\\xc0\\xcd;\\xfd\\x05\\xef\\xaa\\x14\\0H\\x80\\xebn\\x0f\\xa0\\x02#\\xff\\x8c\\x96\\xe9A\\0P\\xbar\\xeb\\n\\0\\xc0Y\\xea)\\xe3\\xb9%C\\\\\\xb8\\x03\\x17p\\xf9j\\x1d4\\fNw\\xe6\\0L2\\xc8\\x0e\\xcf)\\x97\\xcc\\x01F\\xc3O\\f\\\\\\xdd\\0\\0\\x98A'w\\x01J\\x0eo\\xad\\xe4.\\x80\\x11p\\xbcDN\\xe2J\\\\?\\x9f\\xc3\\xe2\\xb5\\xc2\\x05\\xec[\\x80\\x1d\\xa4\\x11\\x7f\\xe2\\xfe\\xf4\\xfaB\\0\\xc0\\xfd\\b\\xb9z#\\xee\\0\\0l\\x18\\xb6\\x9fw\\xe3>\\xcf\\x06l\\x04\\xd7k\\xc5\\xd7F\\x9b\\x92\\xa4\\x92\\x14\\x844 +\\x83=\\x12<\\x12\\t\\x8bM)Y\\xa0\\xfcP\\xca+\\x01\\x007-\\xbdy\\b\\xe79\\x94\\x05\\xcf\\xb4\\xfc\\xda\\xedB\\x1c\\x17\\xd6\\x99Aed\\xacc't?5J\\x8c\\xad\\x7f\\x7f\\xf1\\xf3,]\\xc3p5\\0\\x9c\\xef\\x8d\\x1b|\\xa2\\xa9\\xe2\\xbbk\\xad\\xa7\\xd2\\xbd\\x9b\\b\\x84\\x9a\\xe1\\xe7z\\b\\x93`\\xd1\\xb9\\xee\\xe7,\\xfc\\xed\\xe3F\\xeb\\x8f\\xad\\xe1\\x1ay<\\r\\0\\\\p\\x1d<\\x86\\xe3\\xe9\\x95vx\\x1c\\x9d;\\xd32\\xc5\\xd34Q\\xb8\\xe0-\\xe8\\x8ba|\\xdc\\xef>O\\xa5\\xf6X(\\xce\\x1dM\\xc9\\x03\\x84\\xbe\\xfb\\x07\\xae\\xa3\\xbf2\\x89\\xf3J\\xfbL\\x9e\\xa6\\x89\\xe2\\xa1c\\xa4\\xd5X\\x8c>B\\x81$\\xb1\\xa8\\x01\\xc0\\xf7\\b\\x97\\xa0\\xb4g\\x0f\\x7f\\xf9\\xd5\\x17\\x8fK:E\\xe4\\x07B\\xc9\\xa3\\x18\\x97\\x15\\xcf\\xb0\\xa7\\x0e\\xe9\\xb5\\x96\\0\\0\\x93g\\xcaa\\0@K\\x07\\xe9\\xfd\\xde>\\x19 /\\xabN\\x03a\\xd6\\xddI\\xe9Y\\xbc\\x15\\0\\xba\\x9fp\\xc7G\\x8b\\xaeaC\\xceU!HU\\\"jb\\xea\\x92e\\xc4\\xee\\xceLG\\xac\\xfd\\xaf\\f\\x01\\xb0\\xa5\\xdeQ\\x82g\\xf6\\x80@L\\xf2%W#Ln\\xb7\\xf0-\\0 \\x19\\xcf\\xc5\\x8d\\xe8\\xba\\x1a\\0\\xf6\\x87\\0@\\x1fx>\\x98q\\xfa+\\x93\\x80n\\xac>\\x13\\x8bo\\x07\\xdd\\x80\\x85*\\xb0`'\\x03\\x80\\xa8\\xf0\\f\\x17\\xdbL\\xf0o6{\\x17xZ\\x9a\\x9d\\b\\x8aWQ\\n\\0\\x9a\\x90\\xaft#\\x91o\\xbc\\xd9\\x13\\xd7\\xe5\\xa5\\x82\\x91\\xb1\\x12~V\\x82\\xec\\x0b\\x84\\x93\\x80\\x9d\\x01\\x80J\\xa4\\xb3\\xfc\\xdcg\\xdcgZ\\x173s\\xff\\x92f\\xa4\\xe6\\x01\\0@\\x154}-[\\x90\\xb6~{\\x15\\xbeT\\xdf4\\x96\\x0e\\xd2\\x880S3\\xeb\\xe3K\\x01@C\\x90\\xdad\\xc8\\xb74\\x82\\x90M\\x0b\\0k\\x06\\x008;\\xfdb\\x89h;\\xf8MjZ\\xa2L\\xfbU\\xb2+Qz\\x10\\xa0&\\x8eU\\x9b\\0\\xe0,\\x06\\0\\xe2\\x85\\xab)\\x86Ji\\xc9\\xad\\x841\\xb1\\xe4\\xb9be\\x1b\\x12\\0`\\fX\\xef]\\xe0Mrc\\xe5\\xbe\\x9a.,v\\xf6\\x1a\\x15\\xdbq\\xa5\\xc0\\xb1\\xa1\\0\\xb6(\\xda\\xa3g\\x16\\xb1\\xe6\\xb8\\x12\\0zG94C@b\\xaem\\x14\\x82\\xcd\\x012\\xf6\\xa8Q\\xe1\\xf5\\x85\\xae{\\x10\\x80{#\\xcc\\x9d\\x9c\\xe4\\xa0\\x0bq]\\xa7\\xa7Q\\x19\\0\\xe8\\x01`\\x14\\xb8\\x8f\\xa1\\x8c\\xec\\xd5V\\xf7S\\x8bvv\\x88\\xdb\\xd2\\xaa#\\x95\\xb5#\\0\\0\\x97s/J\\0\\xa8\\xe17\\xf5\\xb7o-\\xae\\x82s\\xba[\\xd8\\xbe\\xc1,\\x95\\x07pf\\x03\\x009\\0\\xe0\\x1e\\x80V\\xf8\\xb2W\\x03\\x80\\xac\\x89\\xae\\xd8\\xc5+\\x1d\\xef\\x85\\xdf_K\\0\\0^3\\x94\\xd7\\xe7\\x03\\0.\\xe4\\x9c\\b/\\x80\\x9b-\\x11bi\\xbe\\x83\\xdd\\xf8\\x11\\0 qyz\\xe2\\xe1\\xf4 \\x9f\\xa2S\\x83\\xbe\\x0b\\xb1$\\0<9\\x07\\xa0\\x915r\\xf1\\xd6\\xa0\\xab\\xd5X\\x14\\0\\x80\\xc1%t~\\x1f\\0\\xac\\xcc\\xfal\\x89\\x1c\\xc3&0F\\xbd'\\x14\\xfc\\xaa\\xaa@-\\xf5\\xd6\\f\\xf7\\x15M\\x18\\0\\xc8\\xdf\\xcd\\x9e\\xf0]\\tp\\x8cJ\\0\\x90\\xcck\\xe4\\0@\\xeb\\x91J\\xdfQ\\xa8\\xcdy\\xfe\\x06\\0\\xd0\\xb6\\xe7\\xba\\xdbQ`\\0\\xf0\\x18\\0\\x98!\\xbe\\x04\\x17\\xc7\\xfe\\xdada%\\0\\0\\x9f\\xb5m\\x1f\\x02\\x008Q\\xf8Uc\\xc4\\xf0\\xcbo2\\xc5\\x88\\x06\\0\\xf7)\\xbf6n\\x8d\\xe1_\\x1c\\x88\\xfb\\xa7\\xe2\\xee\\x15\\xc2u\\xf7>e\\x9f\\x19\\x85\\xa4BRM\\xe5*\\xceS\\x1c\\xf0E\\xcc\\xc28\\xee\\x19\\x10\\xaa\\xe3q\\xe0[\\xe1\\xa4\\xda(8\\x7f\\xab<\\x9a\\x0f\\x04\\x80\\n~O\\x19\\x8e\\t\\xcb\\x8e\\b\\xab\\xd7F\\x02\\0\\xae\\x11\\x19\\x19\\0\\xe8\\x81\\xae#\\xa0\\0BZ=\\x19\\xf2\\0\\xbe\\xaa1h\\x14*'U9u%\\0\\xa46\\xb3\\xbc\\x1d\\0|\\xfb\\xdb1\\xca\\x1f\\xdb\\t\\x17\\x0b\\0x\\xad\\xb9\\x96\\xd6\\x07\\0\\xeev\\xdd\\x81,9\\xa7\\xe0\\xbe\";\n\nvar d_096bc231ae663e6b83097c210f8a7ac4 = \" width=19 height=24 xoffset=1 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=84 x=103 y=101 width=19 height=23 xoffset=1 yoffset=2 xadvance=20 page=0 chnl=15\\nchar id=85 x=104 y=57 width=18 height=24 xoffset=3 yoffset=2 xadvance=23 page=0 chnl=15\\nchar id=86 x=123 y=29 width=21 height=23 xoffset=0 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=87 x=126 y=3 width=30 height=23 xoffset=0 yoffset=2 xadvance=30 page=0 chnl=15\\nchar id=88 x=84 y=203 width=21 height=23 xoffset=0 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=89 x=84 y=229 width=21 height=23 xoffset=0 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=90 x=87 y=156 width=18 height=23 xoffset=1 yoffset=2 xadvance=20 page=0 chnl=15\\nchar id=48 x=106 y=127 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=49 x=108 y=154 width=9 height=23 xoffset=3 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=50 x=108 y=180 width=16 height=23 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=51 x=108 y=206 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=52 x=120 y=154 width=16 height=23 xoffset=0 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=53 x=124 y=127 width=16 height=23 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=54 x=126 y=206 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=55 x=127 y=180 width=15 height=23 xoffset=2 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=56 x=139 y=153 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=57 x=144 y=206 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=33 x=145 y=180 width=4 height=23 xoffset=3 yoffset=2 xadvance=9 page=0 chnl=15\\nchar id=8470 x=152 y=180 width=31 height=23 xoffset=3 yoffset=2 xadvance=34 page=0 chnl=15\\nchar id=59 x=45 y=75 width=4 height=21 xoffset=3 yoffset=8 xadvance=9 page=0 chnl=15\\nchar id=37 x=162 y=206 width=25 height=24 xoffset=2 yoffset=2 xadvance=28 page=0 chnl=15\\nchar id=58 x=68 y=3 width=4 height=17 xoffset=3 yoffset=8 xadvance=9 page=0 chnl=15\\nchar id=63 x=125 y=55 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=42 x=82 y=29 width=11 height=10 xoffset=1 yoffset=2 xadvance=12 page=0 chnl=15\\nchar id=40 x=125 y=82 width=8 height=30 xoffset=2 yoffset=2 xadvance=11 page=0 chnl=15\\nchar id=41 x=136 y=82 width=8 height=30 xoffset=2 yoffset=2 xadvance=11 page=0 chnl=15\\nchar id=95 x=22 y=193 width=19 height=2 xoffset=0 yoffset=29 xadvance=18 page=0 chnl=15\\nchar id=43 x=59 y=237 width=15 height=15 xoffset=2 yoffset=6 xadvance=19 page=0 chnl=15\\nchar id=45 x=44 y=125 width=9 height=3 xoffset=1 yoffset=15 xadvance=11 page=0 chnl=15\\nchar id=61 x=41 y=240 width=15 height=10 xoffset=2 yoffset=9 xadvance=19 page=0 chnl=15\\nchar id=46 x=82 y=42 width=4 height=4 xoffset=3 yoffset=22 xadvance=9 page=0 chnl=15\\nchar id=44 x=97 y=57 width=4 height=8 xoffset=3 yoffset=22 xadvance=9 page=0 chnl=15\\nchar id=47 x=143 y=55 width=9 height=24 xoffset=0 yoffset=2 xadvance=9 page=0 chnl=15\\nchar id=124 x=143 y=115 width=3 height=30 xoffset=3 yoffset=2 xadvance=8 page=0 chnl=15\\nchar id=92 x=147 y=82 width=9 height=24 xoffset=0 yoffset=2 xadvance=9 page=0 chnl=15\\nchar id=34 x=125 y=115 width=9 height=8 xoffset=1 yoffset=2 xadvance=11 page=0 chnl=15\\nchar id=39 x=77 y=237 width=4 height=8 xoffset=1 yoffset=2 xadvance=6 page=0 chnl=15\\nchar id=64 x=149 y=109 width=30 height=30 xoffset=2 yoffset=2 xadvance=32 page=0 chnl=15\\nchar id=35 x=157 y=142 width=17 height=24 xoffset=0 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=36 x=177 y=142 width=16 height=29 xoffset=1 yoffset=0 xadvance=18 page=0 chnl=15\\nchar id=94 x=3 y=240 width=14 height=13 xoffset=1 yoffset=2 xadvance=15 page=0 chnl=15\\nchar id=38 x=186 y=174 width=20 height=24 xoffset=1 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=123 x=155 y=29 width=9 height=30 xoffset=1 yoffset=2 xadvance=11 page=0 chnl=15\\nchar id=125 x=159 y=62 width=9 height=30 xoffset=1 yoffset=2 xadvance=11 page=0 chnl=15\\nchar id=91 x=190 y=201 width=7 height=30 xoffset=2 yoffset=2 xadvance=9 page=0 chnl=15\\nchar id=93 x=200 y=201 width=7 height=30 xoffset=1 yoffset=2 xadvance=9 page=0 c\";\n\nvar d_8f72a8e66d30e2a8b44b5f50ccb81b54 = \"hnl=15\\nchar id=32 x=0 y=0 width=0 height=0 xoffset=1 yoffset=2 xadvance=9 page=0 chnl=15\\nkernings count=97\\nkerning first=32 second=65 amount=-2\\nkerning first=32 second=84 amount=-1\\nkerning first=32 second=89 amount=-1\\nkerning first=49 second=49 amount=-2\\nkerning first=65 second=32 amount=-2\\nkerning first=65 second=84 amount=-2\\nkerning first=65 second=86 amount=-2\\nkerning first=65 second=87 amount=-1\\nkerning first=65 second=89 amount=-2\\nkerning first=65 second=118 amount=-1\\nkerning first=65 second=119 amount=-1\\nkerning first=65 second=121 amount=-1\\nkerning first=70 second=44 amount=-4\\nkerning first=70 second=46 amount=-4\\nkerning first=70 second=65 amount=-2\\nkerning first=76 second=32 amount=-1\\nkerning first=76 second=84 amount=-2\\nkerning first=76 second=86 amount=-2\\nkerning first=76 second=87 amount=-2\\nkerning first=76 second=89 amount=-2\\nkerning first=76 second=121 amount=-1\\nkerning first=80 second=32 amount=-1\\nkerning first=80 second=44 amount=-4\\nkerning first=80 second=46 amount=-4\\nkerning first=80 second=65 amount=-2\\nkerning first=82 second=84 amount=-1\\nkerning first=82 second=86 amount=-1\\nkerning first=82 second=87 amount=-1\\nkerning first=82 second=89 amount=-1\\nkerning first=84 second=32 amount=-1\\nkerning first=84 second=44 amount=-4\\nkerning first=84 second=45 amount=-2\\nkerning first=84 second=46 amount=-4\\nkerning first=84 second=58 amount=-4\\nkerning first=84 second=59 amount=-4\\nkerning first=84 second=65 amount=-2\\nkerning first=84 second=79 amount=-1\\nkerning first=84 second=97 amount=-4\\nkerning first=84 second=99 amount=-4\\nkerning first=84 second=101 amount=-4\\nkerning first=84 second=105 amount=-1\\nkerning first=84 second=111 amount=-4\\nkerning first=84 second=114 amount=-1\\nkerning first=84 second=115 amount=-4\\nkerning first=84 second=117 amount=-1\\nkerning first=84 second=119 amount=-2\\nkerning first=84 second=121 amount=-2\\nkerning first=86 second=44 amount=-3\\nkerning first=86 second=45 amount=-2\\nkerning first=86 second=46 amount=-3\\nkerning first=86 second=58 amount=-1\\nkerning first=86 second=59 amount=-1\\nkerning first=86 second=65 amount=-2\\nkerning first=86 second=97 amount=-2\\nkerning first=86 second=101 amount=-2\\nkerning first=86 second=105 amount=-1\\nkerning first=86 second=111 amount=-2\\nkerning first=86 second=114 amount=-1\\nkerning first=86 second=117 amount=-1\\nkerning first=86 second=121 amount=-1\\nkerning first=87 second=44 amount=-2\\nkerning first=87 second=45 amount=-1\\nkerning first=87 second=46 amount=-2\\nkerning first=87 second=58 amount=-1\\nkerning first=87 second=59 amount=-1\\nkerning first=87 second=65 amount=-1\\nkerning first=87 second=97 amount=-1\\nkerning first=87 second=101 amount=-1\\nkerning first=87 second=105 amount=0\\nkerning first=87 second=111 amount=-1\\nkerning first=87 second=114 amount=-1\\nkerning first=87 second=117 amount=-1\\nkerning first=87 second=121 amount=0\\nkerning first=89 second=32 amount=-1\\nkerning first=89 second=44 amount=-4\\nkerning first=89 second=45 amount=-3\\nkerning first=89 second=46 amount=-4\\nkerning first=89 second=58 amount=-2\\nkerning first=89 second=59 amount=-2\\nkerning first=89 second=65 amount=-2\\nkerning first=89 second=97 amount=-2\\nkerning first=89 second=101 amount=-3\\nkerning first=89 second=105 amount=-1\\nkerning first=89 second=111 amount=-3\\nkerning first=89 second=112 amount=-2\\nkerning first=89 second=113 amount=-3\\nkerning first=89 second=117 amount=-2\\nkerning first=89 second=118 amount=-2\\nkerning first=102 second=102 amount=-1\\nkerning first=114 second=44 amount=-2\\nkerning first=114 second=46 amount=-2\\nkerning first=118 second=44 amount=-2\\nkerning first=118 second=46 amount=-2\\nkerning first=119 second=44 amount=-2\\nkerning first=119 second=46 amount=-2\\nkerning first=121 second=44 amount=-2\\nkerning first=121 second=46 amount=-2\";\n\nvar d_0118d93503fb26f597f0e4924d5b8c0d = \"info face=font size=32 bold=0 italic=0 charset= unicode= stretchH=100 smooth=1 aa=1 padding=3,3,3,3 spacing=0,0 outline=0\\ncommon lineHeight=36 base=25 scaleW=256 scaleH=256 pages=1 packed=0\\npage id=0 file=\\\"font.png\\\"\\nchars count=91\\nchar id=97 x=3 y=3 width=16 height=18 xoffset=1 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=98 x=3 y=24 width=15 height=24 xoffset=2 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=99 x=3 y=51 width=15 height=18 xoffset=1 yoffset=8 xadvance=16 page=0 chnl=15\\nchar id=100 x=3 y=72 width=15 height=24 xoffset=1 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=101 x=3 y=99 width=16 height=18 xoffset=1 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=102 x=21 y=24 width=10 height=24 xoffset=0 yoffset=2 xadvance=9 page=0 chnl=15\\nchar id=103 x=21 y=51 width=15 height=24 xoffset=1 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=104 x=34 y=3 width=14 height=23 xoffset=2 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=105 x=3 y=120 width=3 height=23 xoffset=2 yoffset=2 xadvance=7 page=0 chnl=15\\nchar id=106 x=3 y=146 width=7 height=30 xoffset=-1 yoffset=2 xadvance=7 page=0 chnl=15\\nchar id=107 x=9 y=120 width=14 height=23 xoffset=2 yoffset=2 xadvance=16 page=0 chnl=15\\nchar id=108 x=22 y=78 width=3 height=23 xoffset=2 yoffset=2 xadvance=7 page=0 chnl=15\\nchar id=109 x=34 y=29 width=23 height=17 xoffset=2 yoffset=8 xadvance=27 page=0 chnl=15\\nchar id=110 x=51 y=3 width=14 height=17 xoffset=2 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=111 x=3 y=179 width=16 height=18 xoffset=1 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=112 x=13 y=146 width=15 height=24 xoffset=2 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=113 x=26 y=104 width=15 height=24 xoffset=1 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=114 x=22 y=3 width=9 height=17 xoffset=2 yoffset=8 xadvance=11 page=0 chnl=15\\nchar id=115 x=28 y=78 width=14 height=18 xoffset=1 yoffset=8 xadvance=16 page=0 chnl=15\\nchar id=116 x=39 y=49 width=8 height=23 xoffset=1 yoffset=3 xadvance=9 page=0 chnl=15\\nchar id=117 x=3 y=200 width=14 height=17 xoffset=2 yoffset=8 xadvance=18 page=0 chnl=15\\nchar id=118 x=3 y=220 width=16 height=17 xoffset=0 yoffset=8 xadvance=16 page=0 chnl=15\\nchar id=119 x=20 y=200 width=23 height=17 xoffset=0 yoffset=8 xadvance=23 page=0 chnl=15\\nchar id=120 x=22 y=173 width=16 height=17 xoffset=0 yoffset=8 xadvance=16 page=0 chnl=15\\nchar id=121 x=22 y=220 width=16 height=24 xoffset=1 yoffset=8 xadvance=16 page=0 chnl=15\\nchar id=122 x=41 y=220 width=15 height=17 xoffset=1 yoffset=8 xadvance=16 page=0 chnl=15\\nchar id=65 x=31 y=131 width=22 height=23 xoffset=0 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=66 x=44 y=99 width=18 height=23 xoffset=2 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=67 x=41 y=157 width=21 height=24 xoffset=2 yoffset=2 xadvance=23 page=0 chnl=15\\nchar id=68 x=56 y=125 width=19 height=23 xoffset=2 yoffset=2 xadvance=23 page=0 chnl=15\\nchar id=69 x=46 y=184 width=17 height=23 xoffset=3 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=70 x=65 y=151 width=16 height=23 xoffset=3 yoffset=2 xadvance=20 page=0 chnl=15\\nchar id=71 x=59 y=210 width=22 height=24 xoffset=2 yoffset=2 xadvance=25 page=0 chnl=15\\nchar id=72 x=66 y=177 width=18 height=23 xoffset=3 yoffset=2 xadvance=23 page=0 chnl=15\\nchar id=73 x=50 y=49 width=3 height=23 xoffset=3 yoffset=2 xadvance=9 page=0 chnl=15\\nchar id=74 x=56 y=49 width=13 height=24 xoffset=1 yoffset=2 xadvance=16 page=0 chnl=15\\nchar id=75 x=60 y=23 width=19 height=23 xoffset=2 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=76 x=65 y=76 width=15 height=23 xoffset=2 yoffset=2 xadvance=18 page=0 chnl=15\\nchar id=77 x=72 y=49 width=22 height=23 xoffset=2 yoffset=2 xadvance=27 page=0 chnl=15\\nchar id=78 x=82 y=3 width=18 height=23 xoffset=2 yoffset=2 xadvance=23 page=0 chnl=15\\nchar id=79 x=78 y=102 width=22 height=24 xoffset=2 yoffset=2 xadvance=25 page=0 chnl=15\\nchar id=80 x=83 y=75 width=18 height=23 xoffset=2 yoffset=2 xadvance=21 page=0 chnl=15\\nchar id=81 x=97 y=29 width=23 height=25 xoffset=1 yoffset=2 xadvance=25 page=0 chnl=15\\nchar id=82 x=103 y=3 width=20 height=23 xoffset=3 yoffset=2 xadvance=23 page=0 chnl=15\\nchar id=83 x=84 y=129\";\n\nvar d_37e5d986c886a357d80b4e7e80cfb0bc = \"\\x89PNG\\r\\n\\x1a\\n\\0\\0\\0\\rIHDR\\0\\0\\x01\\0\\0\\0\\x01\\0\\b\\x06\\0\\0\\0\\\\r\\xa8f\\0\\0)\\x12IDATx\\xda\\xed]i\\xb5\\xacL\\xac\\x8d\\x03$ \\x01\\tH@\\x02\\x12\\x90\\x80\\x04$ \\x01\\tH@\\x02\\x12\\x90p\\xdf\\xf7\\xde:\\xbc[7\\xa7*C\\r\\f\\xdd\\xc9Z\\xfc9\\xa7\\x9bf\\xa8\\xec\\f\\x95\\xec\\0\\x98\\x98\\x98\\x98\\x98\\x98\\x98\\x98\\x98\\x98\\x98\\x98\\xfc\\x9f\\xd4\\xff\\x1d\\xcb\\x7f\\xc7\\x1a8F\\xe6\\xfb\\xe3\\xcf\\xd1\\xfewT\\xff\\x1d\\x03\\xfa~\\x8f>\\xff\\xe7\\xe7X\\x13\\xae\\xd9\\xfd\\xcd\\xf3\\x1ef\\xe5\\xb5\\xffq\\x8eV\\xf1\\xdb\\xb1\\xdf\\xc3\\xdf\\r\\xfd\\x9d:6t\\x7f\\xcb\\xcf3\\xa7dw\\xbe_\\t\\xd7\\x83\\xfb\\x9b\\xb3\\xf0\\xdef\\xe7;\\xbd\\xa9\\xd5;d\\x14.\\xbc\\xf5gaP\\x8bzD\\x8b\\xe0<\\xf6\\x02\\0\\xe0\\xfe\\xe6\\xc0\\\\\\xfb\\x11\\xb8\\xf6\\x1c\\0\\xb0\\x0b\\x95*\\x17\\0\\x84\\xee\\xaf\\x17*f'\\xb8\\xc6\\xdes~\\x89\\xb8@S\\x9bj=_:dY&\\xc7\\xb2\\x9e\\xc7N(\\xb2O\\xa1}\\x0bt(\\b\\0{\\xc0:\\x1e\\x1e\\0+\\x01\\0\\x7f~\\x9e[N\\0\\x18\\x89\\xc3\\xf5\\xd4\\xf0ut\\x02\\x85\\x96\\\\\\xeb\\xe29w\\xa3\\xf0\\x1avS\\xadw\\xc8\\xea |\\xe8\\x05WH\\x99\\x1a\\xa1B\\xb4?\\xc7\\xe8\\xb1\\x909\\x01\\xe0\\xbc~\\x9f\\x15\\xc6\\x9e\\x01\\xb6J\\xadsT\\t\\0\\xa0\\x01\\x10\\t\\0H\\xa5B\\0\\xb8\\n\\x94s\\x13\\x9c\\xf7|\\xdf\\x8b\\x028\\xfaH@4\\xb9IZ\\xc5\\x0b\\x9b\\tk\\x0e\\x8c\\xb5\\xe7<\\x86\\x1c\\0\\xd0\\x0b\\xadY\\xae\\xb8\\xf4O \\xcc\\xa9.\\x06\\0\\xf8\\x01\\xe4?\\x82\\x18\\x7f\\x17\\x9e\\xbfC\\x1e\\xc5.\\x04\\x0em\\x98a\\xf2\\x80\\xc4\\xdfi\\xa1\\xb9xmD\\xeei\\xaa+\\x9d\\x1b\\0\\xa4\\x96i,\\0\\0\\xab\\xd2\\xf2\\xe5\\x06\\0\\xf8QN\\xee\\xf9\\xcf\\xc2w4!0\\x99\\x84q\\xbd6\\xd1h\\xf2\\x12\\xa9\\xd0\\xe2\\x19\\x13\\x941\\x04\\0)\\x19|\\x0eD\\xda\\xc2\\0P\\xa3\\x10\\xa9\\xbd\\x01\\0V\\xc1\\xefw\\xc2\\xe7\\xb0\\xa3\\xe7\\xda\\n\\xbc\\xbb:\\x13\\xa8\\x9b\\xdc\\x1c\\x12\\xb4?\\x16\\xf3L6\\xed\\x1eW\\x97\\x02\\x80=\\x02\\0\\xb8]\\x88\\x8d\\xc9;\\xdc\\r\\x008\\xd7\\xc0\\x85\\x02%\\0`\\x07>YW)s\\x05\\xa3\\xe2Y\\x97\\xf0\\xb2L.\\x92>\\xa0\\xe8n\\x82m\\x17\\x02\\xc0\\x1a\\xa1@\\xd8\\x9d\\xf6e\\xf1\\xb7\\x87\\x03\\0(B\\x81\\xdc\\x000\\x83|\\xbbnc>7\\x04\\x80da\\xdc\\xfb\\x19\\xe4\\xbb\\x05&\\x0f\\x92\\x89P\\xc4\\xc9I\\xe6\\x8c\\x85\\x01`\\x0eX,j\\xf7\\xe1i\\0 \\r\\x05r\\x01@\\x05\\xbfw9F\\xc5\\xfb\\xf6)\\xea\\x12\\0\\b\\xf7wz\\xc2\\x039L\\xa5\\xde#\\xb8\\x06\\xa0'\\x92<%\\x01`\\x16.\\xd8\\xe1\\xe1\\0 \\r\\x05J\\x14\\x02I\\x9f}\\x07\\xb2\\xdd\\x9c\\x05\\xfd\\xbd!\\xdeWM|\\xcf\\xe4\\xc1\\xb2\\x80|\\xebn.\\b\\0U\\xa4\\xf2>\\x11\\0$\\xa1@n\\x008~~G\\x92y\\xaf\\bE\\xee\\\"\\xad|\\x0f\\xba-`\\x93\\x87\\x88T\\t\\xb1+\\x9e\\x13\\0R\\x94\\xf7\\xa9\\0\\xc0\\x85\\x02\\x12\\0\\xf0\\xf5c\\x1c\\x1e\\xcf\\xa9\\x03\\xfd\\x96\\xdb\\n\\xfe\\x84\\xad\\x0b\\xf2\\xb5\\\"\\xce\\xe7\\xbeg\\xf2P9\\x84/n\\x04\\xf9.\\xc0\\xdb\\0\\xc0-\\xb1\\xad3\\x01\\0\\x17\\n\\xc4\\xe6\\0*\\xf8]\\xa2\\x1b\\x03hc\\xe0\\xbd\\xef@\\xef\\xe4\\x84,=\\xf7=\\x93\\x17\\x84\\0\\x9bG\\x01j\\xf0'\\t?\\t\\0r\\xf4\\x02p\\x96\\x16\\x87\\x02\\xa9I@\\x9c\\xf8\\xd3\\xba\\xdd\\xad\\xc7\\xd5o\\x80\\xdf\\xc1\\xf0\\x85\\x0f5\\xe8;\\x06M\\x1e\\\"\\x8d\\xc7\\xad\\xa4:\\xcd\\xa8\\x17m\\0 \\x0f\\x05r\\xec\\x02`\\x10\\xd0n\\xbd\\xe1w\\xe9\\x9e\\x8f*\\xe3\\xdd\\x90\\xb5\\x97~\\xcf\\xe4\\xc1 \\xb0\\b\\x93K\\x07\\x913\\xb0\\x10@\\x1e\\n\\xe4\\xda\\x06\\\\!\\xbe%\\x19\\xe7\\x01\\xb8}\\xfeSp\\x99\\xb0\\xf4{&/\\0\\x82\\xd8\\xce\\xb8\\x94$\\xda\\x1d\\t\\xbc\\x9c\\xd7\\xffG\\xa9\\xa8SF\\0\\xc0\\x1e\\x86f\\x0bn@y\\0i\\xc3O\\x87<\\x1a\\xe9\\xf7LL\\xbe\\x16\\0j\\\"\\xd4J\\x01\\x80\\xd3\\x83\\x89\\tc\\x1a\\x94C\\xd0<c\\x1f\\x98Y\\xf9\\xaf\\x89\\x01\\x80\\\"f\\xcfY\\n\\xbcE\\x86\\x02\\x87\\x13\\xeai\\0d\\x8d\\xfc\\x9e\\x89\\xc9\\xe5\\0\\x10K\\xb2\\xb1\\xa1\\\\H\\x93\\xe1\\xbck!\\0\\xc0|\\0R2\\x8e\\x05\\xe2h\\xbf\\x86\\xc8\\xef\\x99\\xbcT\\t\\xb5\\x82\\tAW\\xcf\\xa2|*\\0H\\x94?VY}\\xa1@\\x0e\\0\\0On\\xa1\\x8dP\\xe4%\\x12p\\xac\\xfc\\xd7\\0\\xe0\\xff\\xa5\\x0b\\xb8\\xba\\xe3\\x0b\\0@\\xaa\\xfc)\\xca:\\x14\\x02\\0L\\r\\xb6E(\\xb2\\xa6\\x9e\\xe0\\0+\\xff5\\0 ,\\xdc\\x8e<\\x80\\xf6\\xe6{\\xfc\\x93Q\\xf9ML\\f\\0<2\\xc2\\xf3H!%\\0\\x80\\x95\\x7f7\\xe571\\0H\\x03\\x80\\xf6%\\0\\x80\\x95\\x7f\\x03+h11\\0(\\x0e\\0\\xbe\\xa9>\\xff[n\\xec\\xf2\\x02.\\xf0\\xbb\\xbc\\xb4\\x85\\xdf\\xdc\\x81sd\\xac\\x9eS\\xf9s\\0_\\xfd\\xf3L\\xa8\\xe9L\\x9ajE7'\\xd0'\\\\SN\\xae\\xff\\x16\\xfe\\xce5\\xb0\\xdd\\x83\\x87\\x01\\x80\\xfbr4\\xf1{\\xeb(\\xa6\\x9b\\x18:\\xffNM\\xe4\\x19\\x81\\xe7\\x04\\xec=\\0#\\xe5\\xe5\\x0f\\x01@n\\xcb\\x9f\\x02\\0\\x15\\x84\\x07\\xaa\\xf8\\x8eEx\\xadC\\x06\\x90\\xa7\\bYR\\fDl\\xb2\\xd3\\xa4\\x10\\0,B%\\xe4\\xac\\xacd\\x07\\0\\x90\\xe2\\xf9\\xfa\\xe0qB\\xce\\xa5\\xaar\\xc1\\x89\\x9bZ\\xe4[l9\\x94\\xbf\\x02\\x7f+m\\xe3XN\\x89\\xb5n<\\xcf\\xe0\\0\\x9e\\x0b`\\x13\\xe4)p\\xdfAL\\xaf~.\\xaao\\x97Sbs<7\\x93\\x87\\xc4\\xc7\\xaeu9\\xad\\xf2\\x84\\x16\\xc0T\\0\\0\\xa8\\xb9v\\x0b\\xf0\\x94W\\xb8\\xa3\\xb1c\\0\\xa0\\xf2(\\\\L\\xc2o\\x82\\x7f\\xa9\\xd4V\\xf8]\\x1f\\xbf\\x0b\\x94\\x1f\\x13\\x9fR\\x1eD\\xe7yn\\xdc\\xb5kX\\x9f\\xa8\\xdfK\\xdd\\xeb\\xb7\\xae\\xc1\\x17\\0@\\x17\\x88\\x01\\xa5\\x03\\x1f59\\0\\t\\xa9E\\x03\\xb2\\xe2\\x16\\x8a\\x92\\x1a\\xb3\\x1em\\xe0\\xa7\\x1d\\xd7\\xca\\x02\\xb2)\\xbe\\xd4\\xf3\\xda\\x10\\xb8I,l\\x03\\xba\\xfd\\xfe.!\\x86\\xcf9\\xe9g5\\xb7\\xff\\xd9\\x000\\x0b\\x17\\xd1\\\\\\0\\0$\\x1c\\xfa;\\x93\\x83\\x90\\0\\xc0\\x86,Z\\xecpO\\xfcl0\\xb1J/p\\xb7\\x07\\x88\\xaf9\\xc0\\x9e\\x03g\\xd9%3\\x03\\xa8\\xf0!G\\xf2\\xcf\\0\\xe0\\xc1\\0p\\x80n\\xbe|\\x9d\\x11\\x006\\xe1\\xe7\\xd6\\f\\0@\\x91`\\xc4&\\xf0Ne<\\x1c\\xa5\\x94d\\xdc\\xf7D\\xeb:*\\x144\\xa6>#\\xf7\\xa0\\x0f\\x03\\x80\\x07\\x03\\x80$\\xbe\\x9b\\x05\\t\\xc1\\x18\\0X/\\x06\\x80\\x99X\\x98\\x12 \\xc4Vrw~\\xb7\\x17*u\\x07\\xe9\\xd9\\xf9J\\x01^5\\xe8\\x1bw6\\xc8K\\xf4i\\0\\xf0`\\0\\x90 \\xfc(\\xf8\\xfc\\xd3\\x01`\\x0e(\\xc7\\x11\\xa9\\x90\\x13\\xfcn\\xc1]\\x05\\x9e\\xcd\\x04y\\xa6\\x15/ \\xe7\\xe3[\\x14\\x1eG\\t\\x9e\\x7f\\x03\\0\\x03\\x80\\xdb\\x01@b\\x91\\xb5\\xd9\\xf2\\x11)\\xd49\\xe4\\xb4\\x12*CJ\\xc9\\xf1\\xa0\\b\\xa5z\\x05X\\xe4\\x02(\\x03\\0\\x03\\x80W\\0\\0\\xb6\\x90\\xa5\\xe7\\xdb\\xe5*\\x84i\\x95\\xe7\\xa28\\x1d}\\x9f\\xcbY\\xa9\\xb7\\x81M\\x0e~,\\0H\\n2>!\\x07 \\x8d\\xe7cH6\\xdf\\0\\0\\x12\\xcb\\xeezC\\xd3Mk\\xcd\\xe4b\\0\\x90\\xec\\x83K\\x92Bo\\x06\\0\\x9fB\\xcd\\x1f\\x06\\0\\xb5\\xe0y.\\x90\\x7f\\xcaO_ \\xa40\\xc9\\xbc\\x10\\xa5Y\\xe4]\\x18&\\xbc\\x11\\0\\xb0\\x95\\xa4\\x16l\\xca\\xf6\\xe1]\\0\\x80c\\xf1\\xda\\xe3\\x05\\xe5l\\x10k\\xd1\\x9a0\\xe6\\xe0\\x07\\x03\\0\\xb5\\x05\\xb6\\b\\x11\\xfc\\x13\\0\\0{;\\x07\\xd0\\xcdL1\\0\\xb0B\\x9e\\xee\\xc11Ba\\xa9A\\x9e\\x03\\xe4\\xb5\\xd4\\xb8\\xd0\\xca\\xda\\xac\\x1f\\f\\0\\xbe\\xd2\\xd5\\x1a~\\x97\\xab\\xc2\\x17\\0@\\x03|\\xa9p\\n\\0\\xe4\\xea\\xb0[\\\"\\xe2u\\xb7)g\\x0f\\0\\xdf\\x91IY]\\xaf\\xd1\\\\\\xff\\x07\\x03\\xc0\\x04\\xfe\\x1aym\\x0b\\xea\\xa7\\0\\0\\xb6\\x86>\\x05K\\x19\\xa2\\xd2dp\\x8b\\xf1\\xc4f\\r\\b\\xf9\\xa6\\xfc6\\x05r\\x1f#\\xfa\\xad\\xc9T\\xee\\x99\\x000\\x02\\xdd\\x93>*^\\xb8\\xf1\\xc4\\xcbd\\x17>\\xab\\xb3\\xd7\\xa0'\\x9e\\xf5\\x9e\\0@\\x93\\xc7+\\xc9\\xbd\\x05:\\x81\\x8d\\x0f\\x7f\\x8d\\xa4\\x8c\\b\\xab\\xe1\\xba\\xd1bo\\x97\\x16d[\\x8e\\x0b\\xfa\\\\\\xeb\\tQb\\xdck<\\xe4\\xb3\\xf4\\x88/\\xf3\\x02LL\\x90\\xe0\\xe1\\x9eM\\xc0]\\xc7d G\\x86\\x10\\xa2G\\x1eH\\xe9m:\\x9b!h\\xa2\\x8eq'\\x81E\\x89\\xd9J\\xa3\\xb2\\xe7\\\\\\xf3\\x90V\\xb94\\x84\\xa4\\xe74\\xe6\\xc6\\xe3\\x95\\xcd\\xe0\\x9f\\xde\\\\'<_\\x17|JO\\xf8\\xb5R`\\x13\\xb1\\f\\x8e\\x95\\xbb\\x1b\\0b\\xcaa\\x17\\x90s\\xdfa\\x82\\x0f\\xcd\\x91\\x9a]\\x9f\\xe1\\x9a\\xc2'\\x03\\x80\\x17\\b\\xc5H\\xab\\xd9\\xaaj~\\xac\\x98\\xef\\x1c\\x95\\xa3\\x80.#p\\x8cr_\\x05\\0\\xda~\\xfd\\n\\xf8!\\xa0\\xbe\\xef\\x8cB \\xd8~>\\x8b;\\x18c\\x92\\xae\\xb8\\x90\\xa85\\0\\xf8N\\x91X!\\xc9\\xde0w\\x9e\\x03d\\xa3\\xbe\\x9e\\x06\\0\\x1a\\xcb\\xd8G\\0\\0\\xfe\\xfe\\xec\\x01\\xd0\\x19)h\\r\\xbfwm\\x9e\\x9ca7\\0x\\xa8`+\\xb0:\\x16z\\x84\\xdf\\x84\\x195a\\xc5\\x0e\\xe4\\x9e\\xba\\xe7\\xf1\\x8d\\xa2~:\\0,\\x11a\\x80\\xcb\\x07p\\x05\\xfdu\\xeb\\x80\\x04\\x18\\0\\x98he\\x13(\\xe4*\\xb0\\x86\\\\U\\x9a\\xaf\\xce`\\xf4,f\\x9f[\\xdaB\\x9e\\xf1\\xdcZ\\0\\x902\\xfc\\xb8V\\xd9\\xad\\xf03\\xfe{\\xff\\xfa0y\\x90\\xeb/)&\\xc1\\xd6\\xbd&\\x16>\\xb5\\xa7\\xdd0\\x1e\\0\\x15\\x82\\xac7\\0@\\xa5\\f\\x03\\x86\\xc0w\\x9f\\xb4\\xe8k\\xf0\\x8fo?\\xf341a\\xc4\\f\\xbaF1\\xab\\x11y\\x88h\\x98_\\x06\\b\\x8f\\xa7\\xd2\\x9cg|\\x11\\0\\x802\\f\\xd8\\xe0_\\x1a\\xad\\xa7\\x01\\xc0\\x04\\xb2\\xdd\\x05m\\xb1\\xce.\\0\\xc9\\x01\\xfc\\xb3'L\\x1e\\xe2\\xfe\\xa7\\x94\\x7fj(\\xae\\x9a\\x17\\xe5\\0\\0\\xe4\\xbd\\xec\\xb5\\xe7s\\xa1k\\\\!\\x7f\\xef\\x02\\xf7\\xdd^\\x91\\xeb\\xd1\\x14\\x04\\xd5\\xc20)4\\x93\\xc1\\xe4F\\xc9\\xf5\\\"\\xb4\\xe7y\\x13\\0T #\\xc8\\x1c<.\\xeeS\\0\\xa0\\x02Y\\xf2\\xd5}.\\xd2\\\"\\xa3A\\xe1\\xdaW\\xf0\\xbb\\xf6\\xc0\\xc4\\0\\xe0\\xd1\\0\\x80\\x13X\\x95\\xd0\\xfd\\x7f\\x12\\0\\x8c g\\xf9\\x9dA\\xd7\\x04\\xb6\\x80q\\xfd\\x19\\0|8\\0pa@\\xc8\\r\\x0e]c\\xe3X\\xce+\\0`\\x03\\xf9n\\x86\\x96\\x15\\xe8\\xf4,\\x06S\\xa7w\\x03@JfV\\x93K\\xa8_\\b\\0\\\\\\x180\\x81?Q(\\x89\\xc9\\x87\\x0b\\0\\xc0\\x9d\\xa2\\xac9\\x0f\\x07\\0-\\\\\\xc3\\xa2lRH4\\xd4Tn\\xc1IO\\xb8\\x8d\\\\\\xf2\\xa8{!\\0pa@(\\x0bN]\\xe3y\\xbe\\xfa\\x02\\0\\xd0\\x88t\\x0e\\xa4\\xfb\\x1cw\\xc5\\xf5\\xc5\\x94\\x97\\x9b\\x14\\x12w[hR|\\xb6!,\\xc1\\xae\\0\\x9d7\\x01@(\\fh@>\\x9a\\x1c\\x03f\\x9f\\xf9\\xber\\0\\xc0\\xaa\\0\\xf3\\rt\\xa5\\xd2\\xdc\\xd6\\xae\\xc9\\xc5\\x82g\\xc6\\x85\\xdc8\\xb7\\x80g\\x13,\\x1c\\x1f}X\\x05\\xbf\\xbb\\xe4\\xde\\x04\\0\\xa10 \\xe4\\xfeS\\xe7\\x1a@\\xc66|5\\0\\xcc\\n\\xe5\\xac@\\xdf,u\\xf68l`4\\xe1\\x8f\\x91\\x11\\xe8\\xb1X=\\xfc\\xbb\\x85\\xd4\\x10`B\\xf5\\x02\\xf8\\x9a\\x84J\\0\\xc0\\xc9C7e\\x06\\x80P\\x18\\xb0\\x13\\x1eT\\x8cB\\xde\\x05\\0x\\xc49\\xb7\\x05\\xd8%\\xe4\\x8f$\\xb5 &7\\x82@\\xe8\\xe8\\x05/\\xf6\\0\\xba\\x1bp(\\f\\0\\x92\\xef\\xc6\\x02\\0\\x0e\\x03\\x1a\\x06\\x18\\xdf\\0\\0\\xb8@g\\x03YBoNt\\xe3mR\\xd0\\xc3\\xa4#\\x94W\\xba(\\xce\\x05\\xe5c\\xafY\\xe0/g`I\\0p=\\x8dZ`\\xed4\\xdbp8\\f\\x98\\x98\\xbc\\xc7\\x1b\\0\\0[~\\xa95\\xdf\\x13-\\xf8jy\\x80g\\n&\\x05\\xcd\\xbd\\xbd\\xd3\\x02\\xcf\\x89/\\t9\\xb8\\x04[h\\xcb\\x0e\\x13j\\xb6J%r{\\x03\\x0e\\xa0\\x13\\xa8O\\x07\\x80&R\\xf9\\x1bH\\xdf\\xfe3\\0\\xf8 9G@I\\xd8\\x80%\\xd4\\xe1>J-\\xa9\\xab\\xde\\x82\\x9fAg\\xfc9\\xef\\xc1$\\xba8%\\xf2\\x11~4/\\x05\\x80\\xd81\\xe0\\x03\\xa4O\\x0f6\\0\\xf8 \\xd1\\x8c\\x94\\x92\\x10P\\xfar\\t\\x9a\\\"\\x9bY\\x90\\xcf\\x90\\x8c\\xfc\\x02&\\f\\xe0Xn\\x9f\\x0e\\0k\\xa4\\\"/\\x19\\xe2w\\x03\\x80\\x0f\\x0b\\x1b\\xb8\\xedDL\\b\\xc2-\\x9e\\x1a\\xfe\\xddE\\xd0\\x96\\xccv\\x10\\xa6'[\\t\\xf0\\x91(\\xd1\\x02\\xb2\\xd1^O\\x07\\x80#R\\tsl\\xe1\\x19\\0\\xbcL\\xa8>~\\x80\\xdf\\xed\\xa4\\xb3\\xa3\\xb8\\x13\\xb2\\xe8\\xb9f\\xcfqR\\xa1|\\xc6\\x1b\\x06\\x96\\x1c\\x91\\0PGz\\0+\\xe8\\xfa\\xff[\\xc8S>>\\x83\\xcd\\t\\xf8(\\0\\xa0F\\x8ba\\xebk\\xe3\\xa1x\\xcb\\xa8e\\xe9m\\xe1\\x9a\\n\\xbb)\\x93\\xe2\\x8e`-\\xc1\\x1f\\x05\\0\\xae%\\xf2\\xb1\\xda\\x8e`\\r#\\x1a\\x05\\xd3v\\xd8Mp\\xcd\\xde\\xfa\\x06y\\nx\\x1a\\xb0j\\xc0\\x8f\\x04\\x80\\xd2V\\xf1I\\x95c\\x92\\xc1\\x1d\\x18\\x049\\xde\\xbd\\x0ed\\xfc\\x8a\\xd8\\xfb:\\x94\\n\\xd5F\\x84\\fn\\x02\\xb4)\\xf0^m\\xa0\\xac\\x01\\xc0%\\0P\\x82\\x07As\\x1c\\xccb\\xc7\\x95y5\\xa3\\xc8[\\x04h\\xc4\\0@\\x0f\\xe9\\xdb\\x7f\\x18P\\x160\\x86 \\x03\\x80\\x0f\\0\\x805pP \\xd0\\b\\x95\\xd3\\xc7\\xe17\\x82\\xbf^B\\xda\\x98\\x13\\x03\\0s\\xe6\\x10\\xc37\\x11\\xc9\\xe4&i!<\\x91\\xa6\\x12\\0\\x80$\\x01\\xd5\\x11\\x8a\\xd20\\xf1\\xe2\\x99\\xc5\\xaf\\x1f\\n\\0\\x92\\xc5\\x8e\\xcb\\xad\\x17\\x81\\xb5\\xd5x\\x15\\xbdR\\xf9\\xdc\\xdd\\x11)\\0\\xac\\xa0\\x1b\\x95&\\x05\\xf6\\x19\\xac1\\xe86\\xa1\\xfa\\0N7tJ\\0\\x80\\x1ad\\xc59+\\\\\\xb3Mw\\x17\\x15\\x1a\\x8e\\xf1\\xb9q^\\r\\xfc\\xae^\\xf4)\\xfe\\x04\\xef\\xdbYq=\\x90\\xc9T\\xf0^\\xe5\\x97\\xee\\xdf\\xc7\\x02\\xc0\\xee,\\xd6\\x19\\xb9\\xb1\\x13r\\x01\\xa7\\x0f\\x07\\0l\\xf9\\x06\\x85\\xc2\\xf8\\x8e\\xb7\\x0e\\xd9\\x98\\xcc\\xed\\xbf_p\\xf6\\xb8\\r|fM\\0\\x80\\x1a\\xf8\\xed\\xa9\\x1e\\xd2\\xc6q\\xbf\\r\\0\\xee\\xcc\\xa7<E\\xdc\\x19\\x8a&7I\\x0f\\xb2\\xbd\\xe3&\\x01\\0\\x06\\x90\\x15\\xb6\\xccp\\xcd\\x98j\\x03\\x80\\x7f\\x15\\xb0\\x15\\xfe\\x1d\\b\\xcf\\xaeO\\xf8}+\\x05\\xbeQ\\xdc,r\\xa7\\xf8\\xac\\x06\\0\\xc6\\x07\\xc6zw\\x03\\xc0v!\\xd8Q\\0\\x14\\xca\\xd7\\x9c\\xad\\xce\\\\x\\x91\\xb2+`\\0\\xf0\\0\\x91t\\xe6I\\xadV\\b\\0\\xf0v\\xd3\\xf2\\xe3\\x154_\\n\\0\\xd3\\xc5\\xe1\\x0e\\x10!Y\\xc3\\\\#7D$\\xa5.\\xc0\\0\\xe0e\\x96\\xb0\\x85\\xf8$`h\\x07\\xe0lD\\xe9\\xbe\\0\\0j\\x88\\x9f\\xbfW\\xc2\\xf5\\x9f\\x99\\xdc\\x90\\xc4CI\\xa9\\f4\\0\\xf8\\\"\\x008\\xad\\x05\\xb7\\x9d5\\xc2{\\xb7\\x01\\xb5\\xc7\\x1d\\\\x\\x9aN>\\xc9\\xc8o7\\x9c\\x19\\r\\0\\f\\0\\xb8\\x17Z\\xfd\\0\\xc1\\x02t\\xcd\\xc1'\\x03\\x80\\xb6`\\xa7\\x84\\xf5_\\x04\\x9f\\x956\\xeb\\xc4v\\x07\\x1a\\0<,\\x07\\xa0\\xa1\\x81\\x8e\\x05\\0\\xdf\\\"\\x1b\\x04\\xaeq\\x0f\\x7f\\xeb\\x06\\xda\\x87\\x02\\xc0(8\\xba\\x1b\\xdfuL\\xf7\\xdd*\\xf0\\x02b\\xf8\\x01*0V\\xe0G\\x88f\\x17 \\xa5\\x14\\xb8\\x16\\xc4\\x88\\x03q\\x8e7\\xf4\\x02<]\\xa6\\bE\\x95n\\xe1J\\x81\\xe5\\x04B\\x1b\\f\\xf2\\x10\\xd1\\xcc\\x81\\xdb#\\x01\\xe0\\0y\\xa6\\xd8\\0\\xa0\\x9c\\x1c\\n\\xf7\\xdf\\xe75\\xcc\\x02C2+\\x9e\\x97\\x96\\x89\\xd8\\xa4\\x90H&\\xfb\\x0e\\x10_\\b\\xe4\\xee\\0\\fBWr\\xf2\\x84\\0\\xb3\\x01@\\x16\\xf7\\x7f\\x8c\\x04\\x8e]\\xe0)\\x1c\\x8a\\xe75\\x9b\\xf2?C\\xf0>\\xfd@\\xb8\\x8e9\\xea\\0&\\xf4\\xe2}]r-q\\x9d\\x06\\0z\\x19!\\x8ee\\b{_\\x95\\0`\\x8c\\xf5\\xe9\\x85\\\"\\x19\\r6@|\\x0e`\\0y\\x96\\xbcgb\\xd8\\xce\\0@-\\xb1<\\x83xm\\xb4\\x82\\x10\\xd1Zz_\\x9c\\x0f\\xd8\\xc0Ok\\xd5B\\xfa6`\\x07\\xf4\\xf6\\xdfN(\\xf79' \\xd7\\x16\\xe1\\xb7\\x01@J\\xe9q\\x0f\\xb2\\x84]\\xea\\xac@\\x93\\x07\\xc5\\x8bZ\\xa2\\b\\t\\0\\x84\\xce/\\x19?\\xb6dN\\x18}\\x1b\\0H\\xf9\\x07\\xb8\\x10qd\\fH\\x0e\\xbap\\x93\\x97\\xca\\x15\\x94\\xd4%\\x14bU\\x1c\\xcd\\x07\\0\\0\\x14\\x02\\0wo\\xbf3u0\\0x\\x8bBh\\x8e\\xd6\\0@\\x14jXq\\x8f\\x01\\xc0W\\0\\xc0\\xdb\\xdeMi\\x008\\x13\\x86\\xbb\\xa9\\xc3;\\xe5\\xac\\xd3\\xf7\\r\\xf5\\xa8o\\x02\\0\\r\\xf7\\xfe\\xd9jl\\xf2\\xafh\\xda\\xbe}kBZ\\xb5\\xe7\\x82\\x85m\\x07\\xbeH\\x1a\\xf0\\xef\\0H\\xf6\\xff\\xef\\x06\\x80PC\\x91-\\xc0\\xbfr\\xc56\\xe0)g=\\x87\\x01\\xf1K\\xa4B\\x16b\\x83\\x7f\\x1bXp/\\xff\\xd5/\\x96J\\xd8\\xed\\xa0\\x1f\\xff\\xfd\\x89\\xa1\\t\\x17\\xaaL\\x10_{?+\\xbd\\x87\\x05l;\\xf0U\\xc2Q}\\xc1\\x8f\\\"\\xed7)\\x96&~\\xc5#\\xc1\\xafHF\\x9dc\\xccC;\\x07\\xa3\\xe2y\\x95\\x02\\0\\xd7\\x8d\\xd7\\xd2\\xb2m\\xca\\xb8~\\0\\xdb\\x0e|\\x8d\\xb4 \\xef\\xc3\\x1f\\xe1\\x9e\\x16Nm\\x02\\x0b\\x8f\\xc9.\\xb5\\b\\x1b\\x90MCv\\xa9\\xd0\\xb8k\\xa1\\xb6 w\\b\\xcf\\x1c\\xe4\\xb6+k\\x88\\xe3[\\x88i\\xdbu\\x7f\\xcb\\xb6\\x03\\x1f.\\xb3\\xc25\\xac \\x9e\\xcb\\xae\\xf9\\xb1<x\\xa1\\x0e?\\xe7\\xad!\\xdc\\xef\";\n\nfunction file_chunks(param) {\n  var exit = 0;\n  switch (param) {\n    case \"/font.fnt\" : \n    case \"font.fnt\" : \n        exit = 2;\n        break;\n    case \"/font.png\" : \n    case \"font.png\" : \n        exit = 1;\n        break;\n    default:\n      return undefined;\n  }\n  switch (exit) {\n    case 1 : \n        return /* :: */[\n                d_37e5d986c886a357d80b4e7e80cfb0bc,\n                /* :: */[\n                  d_d89d4399cabd0fbbf0c369ca8c93e2a0,\n                  /* :: */[\n                    d_a647e4659c173b8e2a1beed6e11eefcd,\n                    /* [] */0\n                  ]\n                ]\n              ];\n    case 2 : \n        return /* :: */[\n                d_0118d93503fb26f597f0e4924d5b8c0d,\n                /* :: */[\n                  d_096bc231ae663e6b83097c210f8a7ac4,\n                  /* :: */[\n                    d_8f72a8e66d30e2a8b44b5f50ccb81b54,\n                    /* [] */0\n                  ]\n                ]\n              ];\n    \n  }\n}\n\nvar file_list = /* :: */[\n  \"font.png\",\n  /* :: */[\n    \"font.fnt\",\n    /* [] */0\n  ]\n];\n\nfunction size(param) {\n  switch (param) {\n    case \"/font.fnt\" : \n    case \"font.fnt\" : \n        return /* int64 */[\n                /* hi */0,\n                /* lo */11926\n              ];\n    case \"/font.png\" : \n    case \"font.png\" : \n        return /* int64 */[\n                /* hi */0,\n                /* lo */10628\n              ];\n    default:\n      return undefined;\n  }\n}\n\nvar Internal = /* module */[\n  /* d_a647e4659c173b8e2a1beed6e11eefcd */d_a647e4659c173b8e2a1beed6e11eefcd,\n  /* d_d89d4399cabd0fbbf0c369ca8c93e2a0 */d_d89d4399cabd0fbbf0c369ca8c93e2a0,\n  /* d_096bc231ae663e6b83097c210f8a7ac4 */d_096bc231ae663e6b83097c210f8a7ac4,\n  /* d_8f72a8e66d30e2a8b44b5f50ccb81b54 */d_8f72a8e66d30e2a8b44b5f50ccb81b54,\n  /* d_0118d93503fb26f597f0e4924d5b8c0d */d_0118d93503fb26f597f0e4924d5b8c0d,\n  /* d_37e5d986c886a357d80b4e7e80cfb0bc */d_37e5d986c886a357d80b4e7e80cfb0bc,\n  /* file_chunks */file_chunks,\n  /* file_list */file_list,\n  /* size */size\n];\n\nvar size$1 = size;\n\nfunction read(name) {\n  var match = file_chunks(name);\n  if (match !== undefined) {\n    return $$String.concat(\"\", match);\n  }\n  \n}\n\nexports.Internal = Internal;\nexports.file_list = file_list;\nexports.size = size$1;\nexports.read = read;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_DefaultFont.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_DefaultFont.js");
},
d: {"bsb-native/lib/js/string.js":"NM$$bsb$$_$$native$lib$js$string"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Font":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar $$Map = __fastpack_require__(\"bsb-native/lib/js/map.js\");\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar $$String = __fastpack_require__(\"bsb-native/lib/js/string.js\");\nvar Caml_obj = __fastpack_require__(\"bsb-native/lib/js/caml_obj.js\");\nvar Pervasives = __fastpack_require__(\"bsb-native/lib/js/pervasives.js\");\nvar Caml_format = __fastpack_require__(\"bsb-native/lib/js/caml_format.js\");\nvar Reasongl_web = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js\");\nvar Reprocessing_Common = __fastpack_require__(\"./Reprocessing_Common.js\");\nvar Reprocessing_Internal = __fastpack_require__(\"./Reprocessing_Internal.js\");\nvar Reprocessing_DefaultFont = __fastpack_require__(\"./Reprocessing_DefaultFont.js\");\n\nfunction intCompare(i, j) {\n  var match = i === j;\n  if (match) {\n    return 0;\n  } else {\n    var match$1 = i < j;\n    if (match$1) {\n      return -1;\n    } else {\n      return 1;\n    }\n  }\n}\n\nvar IntMap = $$Map.Make(/* module */[/* compare */intCompare]);\n\nfunction compare(param, param$1) {\n  var first = intCompare(param[0], param$1[0]);\n  if (first !== 0) {\n    return first;\n  } else {\n    return intCompare(param[1], param$1[1]);\n  }\n}\n\nvar IntPairMap = $$Map.Make(/* module */[/* compare */compare]);\n\nvar defaultFont = /* record */[/* contents */undefined];\n\nfunction parse_num(_stream, _acc) {\n  while(true) {\n    var acc = _acc;\n    var stream = _stream;\n    var match = Reprocessing_Common.Stream[/* peekch */1](stream);\n    var exit = 0;\n    var c;\n    if (match !== undefined) {\n      var c$1 = match;\n      if (c$1 >= 47) {\n        if (c$1 > 57 || c$1 < 48) {\n          exit = 1;\n        } else {\n          c = c$1;\n          exit = 2;\n        }\n      } else if (c$1 >= 45) {\n        c = c$1;\n        exit = 2;\n      } else {\n        exit = 1;\n      }\n    } else {\n      exit = 1;\n    }\n    switch (exit) {\n      case 1 : \n          try {\n            return /* tuple */[\n                    stream,\n                    Caml_format.caml_float_of_string(acc)\n                  ];\n          }\n          catch (exn){\n            return Pervasives.failwith(\"Could not parse number [\" + (acc + \"].\"));\n          }\n      case 2 : \n          _acc = Reprocessing_Common.append_char(acc, c);\n          _stream = Reprocessing_Common.Stream[/* popch */2](stream);\n          continue ;\n      \n    }\n  };\n}\n\nfunction parse_num$1(stream) {\n  return parse_num(stream, \"\");\n}\n\nfunction parse_string(_stream, _acc) {\n  while(true) {\n    var acc = _acc;\n    var stream = _stream;\n    var match = Reprocessing_Common.Stream[/* peekch */1](stream);\n    if (match !== undefined) {\n      var c = match;\n      if (c !== 34) {\n        _acc = Reprocessing_Common.append_char(acc, c);\n        _stream = Reprocessing_Common.Stream[/* popch */2](stream);\n        continue ;\n      } else {\n        return /* tuple */[\n                Reprocessing_Common.Stream[/* popch */2](stream),\n                acc\n              ];\n      }\n    } else {\n      return Pervasives.failwith(\"Unterminated string.\");\n    }\n  };\n}\n\nfunction parse_string$1(stream) {\n  return parse_string(stream, \"\");\n}\n\nfunction pop_line(_stream) {\n  while(true) {\n    var stream = _stream;\n    var match = Reprocessing_Common.Stream[/* peekch */1](stream);\n    if (match !== undefined) {\n      if (match !== 10) {\n        _stream = Reprocessing_Common.Stream[/* popch */2](stream);\n        continue ;\n      } else {\n        return Reprocessing_Common.Stream[/* popch */2](stream);\n      }\n    } else {\n      return Pervasives.failwith(\"could not pop line\");\n    }\n  };\n}\n\nfunction parse_char_fmt(_stream, _num, _map) {\n  while(true) {\n    var map = _map;\n    var num = _num;\n    var stream = _stream;\n    if (num < 0) {\n      return /* tuple */[\n              stream,\n              map\n            ];\n    } else if (Caml_obj.caml_notequal(Reprocessing_Common.Stream[/* peekn */3](stream, 4), \"char\")) {\n      Pervasives.prerr_string(\"Warning: encountered end of char sequence early when loading font.\\n\");\n      return /* tuple */[\n              stream,\n              map\n            ];\n    } else {\n      var stream$1 = Reprocessing_Common.Stream[/* match_ */6](stream, \"char id=\");\n      var match = parse_num(stream$1, \"\");\n      var stream$2 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match[0]), \"x=\");\n      var match$1 = parse_num(stream$2, \"\");\n      var stream$3 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$1[0]), \"y=\");\n      var match$2 = parse_num(stream$3, \"\");\n      var stream$4 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$2[0]), \"width=\");\n      var match$3 = parse_num(stream$4, \"\");\n      var stream$5 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$3[0]), \"height=\");\n      var match$4 = parse_num(stream$5, \"\");\n      var stream$6 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$4[0]), \"xoffset=\");\n      var match$5 = parse_num(stream$6, \"\");\n      var stream$7 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$5[0]), \"yoffset=\");\n      var match$6 = parse_num(stream$7, \"\");\n      var stream$8 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$6[0]), \"xadvance=\");\n      var match$7 = parse_num(stream$8, \"\");\n      var stream$9 = pop_line(match$7[0]);\n      var new_map = Curry._3(IntMap[/* add */3], match[1] | 0, /* record */[\n            /* x */match$1[1],\n            /* y */match$2[1],\n            /* width */match$3[1],\n            /* height */match$4[1],\n            /* xoffset */match$5[1],\n            /* yoffset */match$6[1],\n            /* xadvance */match$7[1]\n          ], map);\n      _map = new_map;\n      _num = num - 1 | 0;\n      _stream = stream$9;\n      continue ;\n    }\n  };\n}\n\nfunction parse_kern_fmt(_stream, _num, _map) {\n  while(true) {\n    var map = _map;\n    var num = _num;\n    var stream = _stream;\n    if (num === 0) {\n      return /* tuple */[\n              stream,\n              map\n            ];\n    } else {\n      var stream$1 = Reprocessing_Common.Stream[/* match_ */6](stream, \"kerning first=\");\n      var match = parse_num(stream$1, \"\");\n      var stream$2 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match[0]), \"second=\");\n      var match$1 = parse_num(stream$2, \"\");\n      var stream$3 = Reprocessing_Common.Stream[/* match_ */6](Reprocessing_Common.Stream[/* skipWhite */4](match$1[0]), \"amount=\");\n      var match$2 = parse_num(stream$3, \"\");\n      var stream$4 = pop_line(match$2[0]);\n      var new_map = Curry._3(IntPairMap[/* add */3], /* tuple */[\n            match[1] | 0,\n            match$1[1] | 0\n          ], match$2[1], map);\n      _map = new_map;\n      _num = num - 1 | 0;\n      _stream = stream$4;\n      continue ;\n    }\n  };\n}\n\nfunction replaceFilename(path, filename) {\n  var splitStr = Reprocessing_Common.split(path, /* \"/\" */47);\n  var revLst = List.rev(splitStr);\n  var newRevLst = revLst ? /* :: */[\n      filename,\n      revLst[1]\n    ] : /* [] */0;\n  var newLst = List.rev(newRevLst);\n  return $$String.concat(\"/\", newLst);\n}\n\nfunction getCharMapAndKernMap(str) {\n  var stream = Reprocessing_Common.Stream[/* create */8](str + \"\\n\");\n  var match = Reprocessing_Common.Stream[/* peekn */3](stream, 9);\n  var match$1 = match !== undefined ? (\n      match === \"info res=\" ? parse_num(Reprocessing_Common.Stream[/* match_ */6](stream, \"info res=\"), \"\") : /* tuple */[\n          stream,\n          1\n        ]\n    ) : /* tuple */[\n      stream,\n      1\n    ];\n  var stream$1 = pop_line(match$1[0]);\n  var stream$2 = Reprocessing_Common.Stream[/* match_ */6](stream$1, \"common lineHeight=\");\n  var match$2 = parse_num(stream$2, \"\");\n  var stream$3 = pop_line(match$2[0]);\n  var stream$4 = Reprocessing_Common.Stream[/* match_ */6](stream$3, \"page id=0 file=\\\"\");\n  var match$3 = parse_string(stream$4, \"\");\n  var stream$5 = pop_line(match$3[0]);\n  var stream$6 = Reprocessing_Common.Stream[/* match_ */6](stream$5, \"chars count=\");\n  var match$4 = parse_num(stream$6, \"\");\n  var stream$7 = pop_line(match$4[0]);\n  var match$5 = parse_char_fmt(stream$7, match$4[1] | 0, IntMap[/* empty */0]);\n  var stream$8 = Reprocessing_Common.Stream[/* match_ */6](match$5[0], \"kernings count=\");\n  var match$6 = parse_num(stream$8, \"\");\n  var stream$9 = pop_line(match$6[0]);\n  var match$7 = parse_kern_fmt(stream$9, match$6[1] | 0, IntPairMap[/* empty */0]);\n  return /* tuple */[\n          match$5[1],\n          match$7[1],\n          match$3[1],\n          match$1[1],\n          match$2[1]\n        ];\n}\n\nfunction parseFontFormat(env, path, isPixel) {\n  var ret = /* record */[/* contents */undefined];\n  Curry._2(Reasongl_web.Gl[/* File */1][/* readFile */0], path, (function (str) {\n          var match = getCharMapAndKernMap(str);\n          var img_filename = replaceFilename(path, match[2]);\n          ret[0] = /* record */[\n            /* chars */match[0],\n            /* kerning */match[1],\n            /* res */match[3],\n            /* lineHeight */match[4],\n            /* image */Reprocessing_Internal.loadImage(env, img_filename, isPixel)\n          ];\n          return /* () */0;\n        }));\n  return ret;\n}\n\nfunction getChar(fnt, ch) {\n  try {\n    return Curry._2(IntMap[/* find */21], ch, fnt[/* chars */0]);\n  }\n  catch (exn){\n    return Pervasives.failwith(\"Could not find character \" + (String(ch) + \" in font.\"));\n  }\n}\n\nfunction drawChar(env, fnt, image, ch, last, x, y) {\n  var c = getChar(fnt, ch);\n  var kernAmount;\n  if (last !== undefined) {\n    try {\n      kernAmount = Curry._2(IntPairMap[/* find */21], /* tuple */[\n            last,\n            ch\n          ], fnt[/* kerning */1]);\n    }\n    catch (exn){\n      kernAmount = 0;\n    }\n  } else {\n    kernAmount = 0;\n  }\n  if (image !== undefined) {\n    Reprocessing_Internal.drawImageWithMatrixf(image, x + (c[/* xoffset */4] + kernAmount) / fnt[/* res */2], y + c[/* yoffset */5] / fnt[/* res */2], c[/* width */2] / fnt[/* res */2], c[/* height */3] / fnt[/* res */2], c[/* x */0] | 0, c[/* y */1] | 0, c[/* width */2] | 0, c[/* height */3] | 0, env);\n    return (c[/* xadvance */6] + kernAmount) / fnt[/* res */2];\n  } else {\n    return (c[/* xadvance */6] + kernAmount) / fnt[/* res */2];\n  }\n}\n\nfunction drawString(env, fnt, str, x, y) {\n  var fnt$1 = fnt !== undefined ? fnt : defaultFont;\n  var match = fnt$1[0];\n  if (match !== undefined) {\n    var fnt$2 = match;\n    var match$1 = fnt$2[/* image */4][/* glData */0];\n    if (match$1 !== undefined) {\n      var img = match$1;\n      var offset = /* record */[/* contents */x];\n      var lastChar = /* record */[/* contents */undefined];\n      return $$String.iter((function (c) {\n                    var advance = drawChar(env, fnt$2, img, c, lastChar[0], offset[0], y);\n                    offset[0] += advance;\n                    lastChar[0] = c;\n                    return /* () */0;\n                  }), str);\n    } else {\n      console.log(\"loading font.\");\n      return /* () */0;\n    }\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction calcStringWidth(env, fnt, str) {\n  var fnt$1 = fnt !== undefined ? fnt : defaultFont;\n  var match = fnt$1[0];\n  if (match !== undefined) {\n    var fnt$2 = match;\n    var offset = /* record */[/* contents */0];\n    var lastChar = /* record */[/* contents */undefined];\n    $$String.iter((function (c) {\n            offset[0] += drawChar(env, fnt$2, undefined, c, lastChar[0], offset[0], 0);\n            lastChar[0] = c;\n            return /* () */0;\n          }), str);\n    return offset[0];\n  } else {\n    return 0;\n  }\n}\n\nfunction loadDefaultFont(env) {\n  var match = Reprocessing_DefaultFont.read(\"font.fnt\");\n  var data = match !== undefined ? match : Pervasives.failwith(\"Failed to load default font. This shouldn't happen.\");\n  var match$1 = Reprocessing_DefaultFont.read(\"font.png\");\n  var imageData = match$1 !== undefined ? match$1 : Pervasives.failwith(\"Failed to load default font image. This shouldn't happen\");\n  var match$2 = getCharMapAndKernMap(data);\n  defaultFont[0] = /* record */[\n    /* chars */match$2[0],\n    /* kerning */match$2[1],\n    /* res */match$2[3],\n    /* lineHeight */match$2[4],\n    /* image */Reprocessing_Internal.loadImageFromMemory(env, imageData, false)\n  ];\n  return /* () */0;\n}\n\nvar Font = /* module */[\n  /* IntMap */IntMap,\n  /* IntPairMap */IntPairMap,\n  /* defaultFont */defaultFont,\n  /* parse_num */parse_num$1,\n  /* parse_string */parse_string$1,\n  /* pop_line */pop_line,\n  /* parse_char_fmt */parse_char_fmt,\n  /* parse_kern_fmt */parse_kern_fmt,\n  /* replaceFilename */replaceFilename,\n  /* getCharMapAndKernMap */getCharMapAndKernMap,\n  /* parseFontFormat */parseFontFormat,\n  /* getChar */getChar,\n  /* drawChar */drawChar,\n  /* drawString */drawString,\n  /* calcStringWidth */calcStringWidth,\n  /* loadDefaultFont */loadDefaultFont\n];\n\nvar Internal = 0;\n\nexports.Internal = Internal;\nexports.intCompare = intCompare;\nexports.Font = Font;\n/* IntMap Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Font.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Font.js");
},
d: {"bsb-native/lib/js/map.js":"NM$$bsb$$_$$native$lib$js$map","bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","bsb-native/lib/js/string.js":"NM$$bsb$$_$$native$lib$js$string","bsb-native/lib/js/caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","bsb-native/lib/js/pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","bsb-native/lib/js/caml_format.js":"NM$$bsb$$_$$native$lib$js$caml_format","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js":"NM$$Reasongl$lib$js$src$web$reasongl_web","./Reprocessing_Common.js":"NM$$reprocessing$lib$js$src$Reprocessing_Common","./Reprocessing_Internal.js":"NM$$reprocessing$lib$js$src$Reprocessing_Internal","./Reprocessing_DefaultFont.js":"NM$$reprocessing$lib$js$src$Reprocessing_DefaultFont"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Draw":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Pervasives = __fastpack_require__(\"bsb-native/lib/js/pervasives.js\");\nvar RGLConstants = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/RGLConstants.js\");\nvar Reasongl_web = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js\");\nvar Reprocessing_Env = __fastpack_require__(\"./Reprocessing_Env.js\");\nvar Reprocessing_Font = __fastpack_require__(\"./Reprocessing_Font.js\");\nvar Reprocessing_Matrix = __fastpack_require__(\"./Reprocessing_Matrix.js\");\nvar Reprocessing_Internal = __fastpack_require__(\"./Reprocessing_Internal.js\");\nvar Reprocessing_Constants = __fastpack_require__(\"./Reprocessing_Constants.js\");\n\nfunction translate(x, y, env) {\n  return Reprocessing_Matrix.matmatmul(env[/* matrix */16], Reprocessing_Matrix.createTranslation(x, y));\n}\n\nfunction rotate(theta, env) {\n  return Reprocessing_Matrix.matmatmul(env[/* matrix */16], Reprocessing_Matrix.createRotation(theta));\n}\n\nfunction scale(x, y, env) {\n  return Reprocessing_Matrix.matmatmul(env[/* matrix */16], Reprocessing_Matrix.createScaling(x, y));\n}\n\nfunction shear(x, y, env) {\n  return Reprocessing_Matrix.matmatmul(env[/* matrix */16], Reprocessing_Matrix.createShearing(x, y));\n}\n\nfunction fill(color, env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */color,\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction noFill(env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */undefined,\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction tint(color, env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */color,\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction noTint(env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */undefined,\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction stroke(color, env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */color,\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction noStroke(env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */undefined,\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction strokeWeight(weight, env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */weight,\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction strokeCap(cap, env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */cap,\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */init[/* rectMode */5]\n  ];\n  return /* () */0;\n}\n\nfunction rectMode(rm, env) {\n  var init = env[/* style */13];\n  env[/* style */13] = /* record */[\n    /* strokeColor */init[/* strokeColor */0],\n    /* strokeWeight */init[/* strokeWeight */1],\n    /* strokeCap */init[/* strokeCap */2],\n    /* fillColor */init[/* fillColor */3],\n    /* tintColor */init[/* tintColor */4],\n    /* rectMode */rm\n  ];\n  return /* () */0;\n}\n\nfunction pushStyle(env) {\n  env[/* styleStack */14] = /* :: */[\n    env[/* style */13],\n    env[/* styleStack */14]\n  ];\n  return /* () */0;\n}\n\nfunction popStyle(env) {\n  var match = env[/* styleStack */14];\n  if (match) {\n    env[/* style */13] = match[0];\n    env[/* styleStack */14] = match[1];\n    return /* () */0;\n  } else {\n    return Pervasives.failwith(\"Too many `popStyle` without enough `pushStyle`.\");\n  }\n}\n\nfunction pushMatrix(env) {\n  var copy = Reprocessing_Matrix.createIdentity(/* () */0);\n  Reprocessing_Matrix.copyInto(env[/* matrix */16], copy);\n  env[/* matrixStack */17] = /* :: */[\n    copy,\n    env[/* matrixStack */17]\n  ];\n  return /* () */0;\n}\n\nfunction popMatrix(env) {\n  var match = env[/* matrixStack */17];\n  if (match) {\n    env[/* matrix */16] = match[0];\n    env[/* matrixStack */17] = match[1];\n    return /* () */0;\n  } else {\n    return Pervasives.failwith(\"Too many `popMatrix` without enough `pushMatrix`.\");\n  }\n}\n\nfunction loadImage(filename, $staropt$star, env) {\n  var isPixel = $staropt$star !== undefined ? $staropt$star : false;\n  return Reprocessing_Internal.loadImage(env, filename, isPixel);\n}\n\nfunction subImage(img, param, width, height, param$1, subw, subh, env) {\n  var match = img[/* glData */0];\n  if (match !== undefined) {\n    return Reprocessing_Internal.drawImageWithMatrix(match, param[0], param[1], width, height, param$1[0], param$1[1], subw, subh, env);\n  } else {\n    console.log(\"image not ready yet, just doing nothing :D\");\n    return /* () */0;\n  }\n}\n\nfunction subImagef(img, param, width, height, param$1, subw, subh, env) {\n  var match = img[/* glData */0];\n  if (match !== undefined) {\n    return Reprocessing_Internal.drawImageWithMatrixf(match, param[0], param[1], width, height, param$1[0], param$1[1], subw, subh, env);\n  } else {\n    console.log(\"image not ready yet, just doing nothing :D\");\n    return /* () */0;\n  }\n}\n\nfunction imagef(img, param, width, height, env) {\n  var match = img[/* glData */0];\n  if (match !== undefined) {\n    var img$1 = match;\n    var imgw = img$1[/* width */3];\n    var imgh = img$1[/* height */2];\n    var imgwf = imgw;\n    var imghf = imgh;\n    var exit = 0;\n    var w;\n    var h;\n    if (width !== undefined) {\n      var w$1 = width;\n      w = w$1;\n      if (height !== undefined) {\n        h = height;\n        exit = 1;\n      } else {\n        h = imghf;\n        exit = 1;\n      }\n    } else {\n      w = imgwf;\n      if (height !== undefined) {\n        h = height;\n        exit = 1;\n      } else {\n        h = imghf;\n        exit = 1;\n      }\n    }\n    if (exit === 1) {\n      return Reprocessing_Internal.drawImageWithMatrixf(img$1, param[0], param[1], w, h, 0, 0, imgw, imgh, env);\n    }\n    \n  } else {\n    console.log(\"image not ready yet, just doing nothing :D\");\n    return /* () */0;\n  }\n}\n\nfunction image(img, param, width, height, env) {\n  var match = img[/* glData */0];\n  if (match !== undefined) {\n    var img$1 = match;\n    var imgw = img$1[/* width */3];\n    var imgh = img$1[/* height */2];\n    var exit = 0;\n    var w;\n    var h;\n    if (width !== undefined) {\n      var w$1 = width;\n      w = w$1;\n      if (height !== undefined) {\n        h = height;\n        exit = 1;\n      } else {\n        h = imgh;\n        exit = 1;\n      }\n    } else {\n      w = imgw;\n      if (height !== undefined) {\n        h = height;\n        exit = 1;\n      } else {\n        h = imgh;\n        exit = 1;\n      }\n    }\n    if (exit === 1) {\n      return Reprocessing_Internal.drawImageWithMatrix(img$1, param[0], param[1], w, h, 0, 0, imgw, imgh, env);\n    }\n    \n  } else {\n    console.log(\"image not ready yet, just doing nothing :D\");\n    return /* () */0;\n  }\n}\n\nfunction linef(p1, p2, env) {\n  var match = env[/* style */13][/* strokeColor */0];\n  var color = match !== undefined ? match : Reprocessing_Constants.black;\n  var width = env[/* style */13][/* strokeWeight */1];\n  var radius = width / 2;\n  var project = env[/* style */13][/* strokeCap */2] === /* Project */2;\n  Reprocessing_Internal.drawLineWithMatrix(p1, p2, env[/* matrix */16], color, width, project, env);\n  if (env[/* style */13][/* strokeCap */2] === /* Round */0) {\n    Reprocessing_Internal.drawEllipse(env, p1, radius, radius, env[/* matrix */16], color);\n    return Reprocessing_Internal.drawEllipse(env, p2, radius, radius, env[/* matrix */16], color);\n  } else {\n    return 0;\n  }\n}\n\nfunction line(param, param$1, env) {\n  return linef(/* tuple */[\n              param[0],\n              param[1]\n            ], /* tuple */[\n              param$1[0],\n              param$1[1]\n            ], env);\n}\n\nfunction ellipsef(center, radx, rady, env) {\n  var match = env[/* style */13][/* fillColor */3];\n  if (match !== undefined) {\n    Reprocessing_Internal.drawEllipse(env, center, radx, rady, env[/* matrix */16], match);\n  }\n  var match$1 = env[/* style */13][/* strokeColor */0];\n  if (match$1 !== undefined) {\n    return Reprocessing_Internal.drawArcStroke(env, center, radx, rady, 0, Reprocessing_Constants.tau, true, false, env[/* matrix */16], match$1, env[/* style */13][/* strokeWeight */1]);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction ellipse(param, radx, rady, env) {\n  return ellipsef(/* tuple */[\n              param[0],\n              param[1]\n            ], radx, rady, env);\n}\n\nfunction quadf(p1, p2, p3, p4, env) {\n  var partial_arg = env[/* matrix */16];\n  var transform = function (param) {\n    return Reprocessing_Matrix.matptmul(partial_arg, param);\n  };\n  var tp1 = Curry._1(transform, p1);\n  var tp2 = Curry._1(transform, p2);\n  var tp3 = Curry._1(transform, p3);\n  var tp4 = Curry._1(transform, p4);\n  var match = env[/* style */13][/* fillColor */3];\n  if (match !== undefined) {\n    Reprocessing_Internal.addRectToGlobalBatch(env, tp3, tp4, tp2, tp1, match);\n  }\n  var match$1 = env[/* style */13][/* strokeColor */0];\n  if (match$1 !== undefined) {\n    var color = match$1;\n    var width = env[/* style */13][/* strokeWeight */1];\n    var matrix = env[/* matrix */16];\n    Reprocessing_Internal.drawLineWithMatrix(p1, p2, matrix, color, width, false, env);\n    Reprocessing_Internal.drawLineWithMatrix(p2, p3, matrix, color, width, false, env);\n    Reprocessing_Internal.drawLineWithMatrix(p3, p4, matrix, color, width, false, env);\n    Reprocessing_Internal.drawLineWithMatrix(p1, p4, matrix, color, width, false, env);\n    var r = width / 2;\n    Reprocessing_Internal.drawEllipse(env, p1, r, r, matrix, color);\n    Reprocessing_Internal.drawEllipse(env, p2, r, r, matrix, color);\n    Reprocessing_Internal.drawEllipse(env, p3, r, r, matrix, color);\n    return Reprocessing_Internal.drawEllipse(env, p4, r, r, matrix, color);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction quad(param, param$1, param$2, param$3, env) {\n  return quadf(/* tuple */[\n              param[0],\n              param[1]\n            ], /* tuple */[\n              param$1[0],\n              param$1[1]\n            ], /* tuple */[\n              param$2[0],\n              param$2[1]\n            ], /* tuple */[\n              param$3[0],\n              param$3[1]\n            ], env);\n}\n\nfunction rectf(param, width, height, env) {\n  var y = param[1];\n  var x = param[0];\n  var match = env[/* style */13][/* rectMode */5];\n  switch (match) {\n    case 0 : \n        return quadf(/* tuple */[\n                    x,\n                    y\n                  ], /* tuple */[\n                    x + width,\n                    y\n                  ], /* tuple */[\n                    x + width,\n                    y + height\n                  ], /* tuple */[\n                    x,\n                    y + height\n                  ], env);\n    case 1 : \n        var x$1 = x - width / 2;\n        var y$1 = y - height / 2;\n        return quadf(/* tuple */[\n                    x$1,\n                    y$1\n                  ], /* tuple */[\n                    x$1 + width,\n                    y$1\n                  ], /* tuple */[\n                    x$1 + width,\n                    y$1 + height\n                  ], /* tuple */[\n                    x$1,\n                    y$1 + height\n                  ], env);\n    case 2 : \n        var x$2 = x - width;\n        var y$2 = y - height;\n        var width$1 = width * 2;\n        var height$1 = height * 2;\n        return quadf(/* tuple */[\n                    x$2,\n                    y$2\n                  ], /* tuple */[\n                    x$2 + width$1,\n                    y$2\n                  ], /* tuple */[\n                    x$2 + width$1,\n                    y$2 + height$1\n                  ], /* tuple */[\n                    x$2,\n                    y$2 + height$1\n                  ], env);\n    \n  }\n}\n\nfunction rect(param, width, height, env) {\n  return rectf(/* tuple */[\n              param[0],\n              param[1]\n            ], width, height, env);\n}\n\nfunction bezierPoint(param, param$1, param$2, param$3, t) {\n  return /* tuple */[\n          Math.pow(1 - t, 3) * param[0] + 3 * Math.pow(1 - t, 2) * t * param$1[0] + 3 * (1 - t) * Math.pow(t, 2) * param$2[0] + Math.pow(t, 3) * param$3[0],\n          Math.pow(1 - t, 3) * param[1] + 3 * Math.pow(1 - t, 2) * t * param$1[1] + 3 * (1 - t) * Math.pow(t, 2) * param$2[1] + Math.pow(t, 3) * param$3[1]\n        ];\n}\n\nfunction bezierTangent(param, param$1, param$2, param$3, t) {\n  var yy3 = param$2[1];\n  var xx3 = param$2[0];\n  var yy2 = param$1[1];\n  var xx2 = param$1[0];\n  return /* tuple */[\n          -3 * Math.pow(1 - t, 2) * param[0] + 3 * Math.pow(1 - t, 2) * xx2 - 6 * t * (1 - t) * xx2 - 3 * Math.pow(t, 2) * xx3 + 6 * t * (1 - t) * xx3 + 3 * Math.pow(t, 2) * param$3[0],\n          -3 * Math.pow(1 - t, 2) * param[1] + 3 * Math.pow(1 - t, 2) * yy2 - 6 * t * (1 - t) * yy2 - 3 * Math.pow(t, 2) * yy3 + 6 * t * (1 - t) * yy3 + 3 * Math.pow(t, 2) * param$3[1]\n        ];\n}\n\nfunction bezier(param, param$1, param$2, param$3, env) {\n  var yy4 = param$3[1];\n  var xx4 = param$3[0];\n  var yy3 = param$2[1];\n  var xx3 = param$2[0];\n  var yy2 = param$1[1];\n  var xx2 = param$1[0];\n  var yy1 = param[1];\n  var xx1 = param[0];\n  for(var i = 0; i <= 19; ++i){\n    var match = bezierPoint(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], i / 20.0);\n    var y1 = match[1];\n    var x1 = match[0];\n    var match$1 = bezierPoint(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], (i + 1 | 0) / 20.0);\n    var y2 = match$1[1];\n    var x2 = match$1[0];\n    var match$2 = bezierTangent(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], i / 20.0);\n    var match$3 = bezierTangent(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], (i + 1 | 0) / 20.0);\n    var a1 = Math.atan2(match$2[1], match$2[0]) - Reprocessing_Constants.half_pi;\n    var a2 = Math.atan2(match$3[1], match$3[0]) - Reprocessing_Constants.half_pi;\n    var strokeWeightf = env[/* style */13][/* strokeWeight */1];\n    quadf(/* tuple */[\n          x1 + Math.cos(a1) * strokeWeightf / 2,\n          y1 + Math.sin(a1) * strokeWeightf / 2\n        ], /* tuple */[\n          x1 - Math.cos(a1) * strokeWeightf / 2,\n          y1 - Math.sin(a1) * strokeWeightf / 2\n        ], /* tuple */[\n          x2 - Math.cos(a2) * strokeWeightf / 2,\n          y2 - Math.sin(a2) * strokeWeightf / 2\n        ], /* tuple */[\n          x2 + Math.cos(a2) * strokeWeightf / 2,\n          y2 + Math.sin(a2) * strokeWeightf / 2\n        ], env);\n  }\n  return /* () */0;\n}\n\nfunction curvePoint(param, param$1, param$2, param$3, t) {\n  var yy3 = param$2[1];\n  var xx3 = param$2[0];\n  var yy2 = param$1[1];\n  var xx2 = param$1[0];\n  var mx0 = (1 - 0.5) * (xx3 - param[0]);\n  var my0 = (1 - 0.5) * (yy3 - param[1]);\n  var mx1 = (1 - 0.5) * (param$3[0] - xx2);\n  var my1 = (1 - 0.5) * (param$3[1] - yy2);\n  return /* tuple */[\n          (2 * Math.pow(t, 3) - 3 * Math.pow(t, 2) + 1) * xx2 + (Math.pow(t, 3) - 2 * Math.pow(t, 2) + t) * mx0 + (-2 * Math.pow(t, 3) + 3 * Math.pow(t, 2)) * xx3 + (Math.pow(t, 3) - Math.pow(t, 2)) * mx1,\n          (2 * Math.pow(t, 3) - 3 * Math.pow(t, 2) + 1) * yy2 + (Math.pow(t, 3) - 2 * Math.pow(t, 2) + t) * my0 + (-2 * Math.pow(t, 3) + 3 * Math.pow(t, 2)) * yy3 + (Math.pow(t, 3) - Math.pow(t, 2)) * my1\n        ];\n}\n\nfunction curveTangent(param, param$1, param$2, param$3, t) {\n  var yy3 = param$2[1];\n  var xx3 = param$2[0];\n  var yy2 = param$1[1];\n  var xx2 = param$1[0];\n  var mx0 = (1 - 0.5) * (xx3 - param[0]);\n  var my0 = (1 - 0.5) * (yy3 - param[1]);\n  var mx1 = (1 - 0.5) * (param$3[0] - xx2);\n  var my1 = (1 - 0.5) * (param$3[1] - yy2);\n  return /* tuple */[\n          (6 * Math.pow(t, 2) - 6 * t) * xx2 + (3 * Math.pow(t, 2) - 4 * t + 1) * mx0 + (-6 * Math.pow(t, 2) + 6 * t) * xx3 + (3 * Math.pow(t, 2) - 2 * t) * mx1,\n          (6 * Math.pow(t, 2) - 6 * t) * yy2 + (3 * Math.pow(t, 2) - 4 * t + 1) * my0 + (-6 * Math.pow(t, 2) + 6 * t) * yy3 + (3 * Math.pow(t, 2) - 2 * t) * my1\n        ];\n}\n\nfunction curve(param, param$1, param$2, param$3, env) {\n  var yy4 = param$3[1];\n  var xx4 = param$3[0];\n  var yy3 = param$2[1];\n  var xx3 = param$2[0];\n  var yy2 = param$1[1];\n  var xx2 = param$1[0];\n  var yy1 = param[1];\n  var xx1 = param[0];\n  for(var i = 0; i <= 19; ++i){\n    var match = curvePoint(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], i / 20.0);\n    var y1 = match[1];\n    var x1 = match[0];\n    var match$1 = curvePoint(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], (i + 1 | 0) / 20.0);\n    var y2 = match$1[1];\n    var x2 = match$1[0];\n    var match$2 = curveTangent(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], i / 20.0);\n    var match$3 = curveTangent(/* tuple */[\n          xx1,\n          yy1\n        ], /* tuple */[\n          xx2,\n          yy2\n        ], /* tuple */[\n          xx3,\n          yy3\n        ], /* tuple */[\n          xx4,\n          yy4\n        ], (i + 1 | 0) / 20.0);\n    var a1 = Math.atan2(match$2[1], match$2[0]) - Reprocessing_Constants.half_pi;\n    var a2 = Math.atan2(match$3[1], match$3[0]) - Reprocessing_Constants.half_pi;\n    var strokeWeightf = env[/* style */13][/* strokeWeight */1];\n    quadf(/* tuple */[\n          x1 + Math.cos(a1) * strokeWeightf / 2,\n          y1 + Math.sin(a1) * strokeWeightf / 2\n        ], /* tuple */[\n          x1 - Math.cos(a1) * strokeWeightf / 2,\n          y1 - Math.sin(a1) * strokeWeightf / 2\n        ], /* tuple */[\n          x2 - Math.cos(a2) * strokeWeightf / 2,\n          y2 - Math.sin(a2) * strokeWeightf / 2\n        ], /* tuple */[\n          x2 + Math.cos(a2) * strokeWeightf / 2,\n          y2 + Math.sin(a2) * strokeWeightf / 2\n        ], env);\n  }\n  return /* () */0;\n}\n\nfunction pixelf(param, color, env) {\n  var y = param[1];\n  var x = param[0];\n  var w = env[/* style */13][/* strokeWeight */1];\n  return Reprocessing_Internal.addRectToGlobalBatch(env, /* tuple */[\n              x + w,\n              y + w\n            ], /* tuple */[\n              x,\n              y + w\n            ], /* tuple */[\n              x + w,\n              y\n            ], /* tuple */[\n              x,\n              y\n            ], color);\n}\n\nfunction pixel(param, color, env) {\n  return pixelf(/* tuple */[\n              param[0],\n              param[1]\n            ], color, env);\n}\n\nfunction trianglef(p1, p2, p3, env) {\n  var partial_arg = env[/* matrix */16];\n  var transform = function (param) {\n    return Reprocessing_Matrix.matptmul(partial_arg, param);\n  };\n  var tp1 = Curry._1(transform, p1);\n  var tp2 = Curry._1(transform, p2);\n  var tp3 = Curry._1(transform, p3);\n  var match = env[/* style */13][/* fillColor */3];\n  if (match !== undefined) {\n    Reprocessing_Internal.drawTriangle(env, tp1, tp2, tp3, match);\n  }\n  var match$1 = env[/* style */13][/* strokeColor */0];\n  if (match$1 !== undefined) {\n    var color = match$1;\n    var width = env[/* style */13][/* strokeWeight */1];\n    var matrix = env[/* matrix */16];\n    Reprocessing_Internal.drawLineWithMatrix(p1, p2, matrix, color, width, false, env);\n    Reprocessing_Internal.drawLineWithMatrix(p2, p3, matrix, color, width, false, env);\n    Reprocessing_Internal.drawLineWithMatrix(p1, p3, matrix, color, width, false, env);\n    var r = width / 2;\n    Reprocessing_Internal.drawEllipse(env, p1, r, r, matrix, color);\n    Reprocessing_Internal.drawEllipse(env, p2, r, r, matrix, color);\n    return Reprocessing_Internal.drawEllipse(env, p3, r, r, matrix, color);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction triangle(param, param$1, param$2, env) {\n  return trianglef(/* tuple */[\n              param[0],\n              param[1]\n            ], /* tuple */[\n              param$1[0],\n              param$1[1]\n            ], /* tuple */[\n              param$2[0],\n              param$2[1]\n            ], env);\n}\n\nfunction arcf(center, radx, rady, start, stop, isOpen, isPie, env) {\n  var match = env[/* style */13][/* fillColor */3];\n  if (match !== undefined) {\n    Reprocessing_Internal.drawArc(env, center, radx, rady, start, stop, isPie, env[/* matrix */16], match);\n  }\n  var match$1 = env[/* style */13][/* strokeColor */0];\n  if (match$1 !== undefined) {\n    return Reprocessing_Internal.drawArcStroke(env, center, radx, rady, start, stop, isOpen, isPie, env[/* matrix */16], match$1, env[/* style */13][/* strokeWeight */1]);\n  } else {\n    return /* () */0;\n  }\n}\n\nfunction arc(param, radx, rady, start, stop, isOpen, isPie, env) {\n  return arcf(/* tuple */[\n              param[0],\n              param[1]\n            ], radx, rady, start, stop, isOpen, isPie, env);\n}\n\nfunction loadFont(filename, $staropt$star, env) {\n  var isPixel = $staropt$star !== undefined ? $staropt$star : false;\n  return Reprocessing_Font.Font[/* parseFontFormat */10](env, filename, isPixel);\n}\n\nfunction text(font, body, param, env) {\n  return Reprocessing_Font.Font[/* drawString */13](env, font, body, param[0], param[1]);\n}\n\nfunction textWidth(font, body, env) {\n  return Reprocessing_Font.Font[/* calcStringWidth */14](env, font, body) | 0;\n}\n\nfunction clear(env) {\n  return Curry._2(Reasongl_web.Gl[/* clear */45], env[/* gl */2], RGLConstants.color_buffer_bit | RGLConstants.depth_buffer_bit);\n}\n\nfunction background(color, env) {\n  clear(env);\n  var w = Reprocessing_Env.width(env);\n  var h = Reprocessing_Env.height(env);\n  return Reprocessing_Internal.addRectToGlobalBatch(env, /* tuple */[\n              w,\n              h\n            ], /* tuple */[\n              0,\n              h\n            ], /* tuple */[\n              w,\n              0\n            ], /* tuple */[\n              0,\n              0\n            ], color);\n}\n\nvar createImage = Reprocessing_Internal.createImage;\n\nvar withImage = Reprocessing_Internal.drawOnImage;\n\nfunction isImageDrawnTo(image) {\n  return image[/* drawnTo */1];\n}\n\nvar clearImage = Reprocessing_Internal.clearImage;\n\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.shear = shear;\nexports.fill = fill;\nexports.noFill = noFill;\nexports.tint = tint;\nexports.noTint = noTint;\nexports.stroke = stroke;\nexports.noStroke = noStroke;\nexports.strokeWeight = strokeWeight;\nexports.strokeCap = strokeCap;\nexports.rectMode = rectMode;\nexports.pushStyle = pushStyle;\nexports.popStyle = popStyle;\nexports.pushMatrix = pushMatrix;\nexports.popMatrix = popMatrix;\nexports.loadImage = loadImage;\nexports.imagef = imagef;\nexports.image = image;\nexports.subImage = subImage;\nexports.subImagef = subImagef;\nexports.rectf = rectf;\nexports.rect = rect;\nexports.curve = curve;\nexports.linef = linef;\nexports.line = line;\nexports.ellipsef = ellipsef;\nexports.ellipse = ellipse;\nexports.quadf = quadf;\nexports.quad = quad;\nexports.pixelf = pixelf;\nexports.pixel = pixel;\nexports.trianglef = trianglef;\nexports.triangle = triangle;\nexports.bezier = bezier;\nexports.arcf = arcf;\nexports.arc = arc;\nexports.loadFont = loadFont;\nexports.text = text;\nexports.textWidth = textWidth;\nexports.clear = clear;\nexports.background = background;\nexports.withImage = withImage;\nexports.createImage = createImage;\nexports.isImageDrawnTo = isImageDrawnTo;\nexports.clearImage = clearImage;\n/* Reasongl_web Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Draw.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Draw.js");
},
d: {"bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","bsb-native/lib/js/pervasives.js":"NM$$bsb$$_$$native$lib$js$pervasives","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/RGLConstants.js":"NM$$Reasongl$lib$js$src$RGLConstants","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js":"NM$$Reasongl$lib$js$src$web$reasongl_web","./Reprocessing_Env.js":"NM$$reprocessing$lib$js$src$Reprocessing_Env","./Reprocessing_Font.js":"NM$$reprocessing$lib$js$src$Reprocessing_Font","./Reprocessing_Matrix.js":"NM$$reprocessing$lib$js$src$Reprocessing_Matrix","./Reprocessing_Internal.js":"NM$$reprocessing$lib$js$src$Reprocessing_Internal","./Reprocessing_Constants.js":"NM$$reprocessing$lib$js$src$Reprocessing_Constants"}
},
"lib$js$src$DrawStuff":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Common = __fastpack_require__(\"./Common.js\");\nvar $$String = __fastpack_require__(\"bsb-native/lib/js/string.js\");\nvar Caml_primitive = __fastpack_require__(\"bsb-native/lib/js/caml_primitive.js\");\nvar Reprocessing_Env = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Env.js\");\nvar Reprocessing_Draw = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Draw.js\");\nvar Reprocessing_Utils = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js\");\nvar Reprocessing_Constants = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Constants.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nfunction darken(color, percentage) {\n  var p = percentage / 100;\n  return /* record */[\n          /* r */color[/* r */0] * (1 - p),\n          /* g */color[/* g */1] * (1 - p),\n          /* b */color[/* b */2] * (1 - p),\n          /* a */color[/* a */3]\n        ];\n}\n\nfunction niceRect(pos, color, width, height, env) {\n  Reprocessing_Draw.fill(color, env);\n  Reprocessing_Draw.stroke(darken(color, 20), env);\n  Reprocessing_Draw.strokeWeight(10, env);\n  Reprocessing_Draw.rectf(Common.Point[/* toPair */2](pos), width + 10, height + 10, env);\n  Reprocessing_Draw.fill(color, env);\n  Reprocessing_Draw.stroke(color, env);\n  return Reprocessing_Draw.rectf(Common.Point[/* toPair */2](Common.Point[/* + */9](pos, Common.Point[/* create */1](5, 5))), width, height, env);\n}\n\nfunction actionLabel(actionName, pos, font, env) {\n  var w = Reprocessing_Draw.textWidth(font, actionName, env);\n  Reprocessing_Draw.pushStyle(env);\n  Reprocessing_Draw.fill(Reprocessing_Constants.green, env);\n  Reprocessing_Draw.stroke(darken(Reprocessing_Constants.green, 20), env);\n  Reprocessing_Draw.strokeWeight(10, env);\n  Reprocessing_Draw.rectf(Common.Point[/* toPair */2](Common.Point[/* + */9](pos, Common.Point[/* create */1](0, -35))), w + 15 | 0, 40, env);\n  Reprocessing_Draw.fill(Reprocessing_Constants.green, env);\n  Reprocessing_Draw.stroke(Reprocessing_Constants.green, env);\n  Reprocessing_Draw.rectf(Common.Point[/* toPair */2](Common.Point[/* + */9](pos, Common.Point[/* create */1](5, -30))), w + 5 | 0, 30, env);\n  Reprocessing_Draw.tint(Reprocessing_Constants.black, env);\n  Reprocessing_Draw.text(font, actionName, /* tuple */[\n        (pos[/* x */0] | 0) + 10 | 0,\n        pos[/* y */1] | 0\n      ], env);\n  return Reprocessing_Draw.popStyle(env);\n}\n\nfunction placeholderUncentered(name, pos, width, height, env) {\n  Reprocessing_Draw.fill(Reprocessing_Constants.red, env);\n  Reprocessing_Draw.noStroke(env);\n  Reprocessing_Draw.rectf(Common.Point[/* toPair */2](pos), width, height, env);\n  return Reprocessing_Draw.text(undefined, name, /* tuple */[\n              pos[/* x */0] | 0,\n              pos[/* y */1] | 0\n            ], env);\n}\n\nfunction sprite(t, name, pos, $staropt$star, $staropt$star$1, env) {\n  var flipped = $staropt$star !== undefined ? $staropt$star : false;\n  var scale = $staropt$star$1 !== undefined ? $staropt$star$1 : 1.0;\n  var exit = 0;\n  var val;\n  try {\n    val = Curry._2(Common.StringMap[/* find */21], name, t[/* map */1]);\n    exit = 1;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return placeholderUncentered(name, Common.Point[/* - */10](pos, Common.Point[/* create */1](50, 50)), 100, 100, env);\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    var h = val[/* h */3];\n    var w = val[/* w */2];\n    var width = w * scale * (\n      flipped ? -1 : 1\n    );\n    var height = h * scale;\n    return Reprocessing_Draw.subImagef(t[/* sheet */0], Common.Point[/* toPair */2](Common.Point[/* - */10](pos, Common.Point[/* create */1](width / 2, height / 2))), width, height, /* tuple */[\n                val[/* x */0],\n                val[/* y */1]\n              ], w, h, env);\n  }\n  \n}\n\nfunction spriteUncentered(t, name, pos, $staropt$star, $staropt$star$1, env) {\n  var flipped = $staropt$star !== undefined ? $staropt$star : false;\n  var scale = $staropt$star$1 !== undefined ? $staropt$star$1 : 1.0;\n  var exit = 0;\n  var val;\n  try {\n    val = Curry._2(Common.StringMap[/* find */21], name, t[/* map */1]);\n    exit = 1;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return placeholderUncentered(name, pos, 100, 100, env);\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    var h = val[/* h */3];\n    var w = val[/* w */2];\n    var width = w * scale * (\n      flipped ? -1 : 1\n    );\n    var height = h * scale;\n    return Reprocessing_Draw.subImagef(t[/* sheet */0], Common.Point[/* toPair */2](pos), width, height, /* tuple */[\n                val[/* x */0],\n                val[/* y */1]\n              ], w, h, env);\n  }\n  \n}\n\nfunction box(env) {\n  return niceRect(Common.Point[/* create */1](40, Reprocessing_Env.height(env) - 150 - 40 - 10 - 20), Reprocessing_Utils.color(100, 100, 255, 255), Reprocessing_Env.width(env) - 2 * 40 - 10, 150, env);\n}\n\nfunction face(x, assetName, label, sprites, font, env) {\n  var top = Reprocessing_Env.height(env) - 150 + 10 - 20;\n  sprite(sprites, assetName, Common.Point[/* create */1](x, top), undefined, 0.6, env);\n  var tw = Reprocessing_Draw.textWidth(font, label, env) / 2 | 0;\n  return Reprocessing_Draw.text(font, label, /* tuple */[\n              (x | 0) - tw | 0,\n              top + 80 | 0\n            ], env);\n}\n\nfunction text(x, content, percentScrolled, font, env) {\n  var top = Reprocessing_Env.height(env) - 150 - 10 + 150 / 2 - List.length(content) * (40 / 2) - 20;\n  var numChars = percentScrolled >= 1.0 ? 10000 : List.fold_left((function (acc, s) {\n            return acc + s.length | 0;\n          }), 0, content);\n  var _row = 0;\n  var _charsLeft = numChars * percentScrolled | 0;\n  var _content = content;\n  while(true) {\n    var content$1 = _content;\n    var charsLeft = _charsLeft;\n    var row = _row;\n    if (content$1 && charsLeft > 0) {\n      var s = content$1[0];\n      var len = s.length;\n      var body = $$String.sub(s, 0, charsLeft < len ? charsLeft : len);\n      Reprocessing_Draw.text(font, body, /* tuple */[\n            x | 0,\n            top + row * 40 | 0\n          ], env);\n      _content = content$1[1];\n      _charsLeft = charsLeft - len | 0;\n      _row = row + 1 | 0;\n      continue ;\n    } else {\n      return /* () */0;\n    }\n  };\n}\n\nfunction next(time, font, env) {\n  var top = Reprocessing_Env.height(env) - (40 + 10 + 20 - 5 | 0) | 0;\n  Reprocessing_Draw.pushStyle(env);\n  Reprocessing_Draw.tint(/* record */[\n        /* r */Reprocessing_Constants.white[/* r */0],\n        /* g */Reprocessing_Constants.white[/* g */1],\n        /* b */Reprocessing_Constants.white[/* b */2],\n        /* a */Caml_primitive.caml_float_min(1.0, time / 1.0)\n      ], env);\n  Reprocessing_Draw.text(font, \"Click to continue\", /* tuple */[\n        (Reprocessing_Env.width(env) / 2 | 0) - 50 | 0,\n        top\n      ], env);\n  return Reprocessing_Draw.popStyle(env);\n}\n\nvar Dialog = /* module */[\n  /* height */150,\n  /* padding */40,\n  /* windowFix */10,\n  /* bottomBuffer */20,\n  /* box */box,\n  /* face */face,\n  /* text */text,\n  /* next */next\n];\n\nexports.darken = darken;\nexports.niceRect = niceRect;\nexports.actionLabel = actionLabel;\nexports.placeholderUncentered = placeholderUncentered;\nexports.sprite = sprite;\nexports.spriteUncentered = spriteUncentered;\nexports.Dialog = Dialog;\n/* Common Not a pure module */\n\n//# sourceURL=fpack:///lib/js/src/DrawStuff.js\n//# sourceURL=fpack:///lib/js/src/DrawStuff.js");
},
d: {"bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","./Common.js":"lib$js$src$Common","bsb-native/lib/js/string.js":"NM$$bsb$$_$$native$lib$js$string","bsb-native/lib/js/caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Env.js":"NM$$reprocessing$lib$js$src$Reprocessing_Env","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Draw.js":"NM$$reprocessing$lib$js$src$Reprocessing_Draw","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Utils.js":"NM$$reprocessing$lib$js$src$Reprocessing_Utils","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Constants.js":"NM$$reprocessing$lib$js$src$Reprocessing_Constants","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$sys":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_sys = __fastpack_require__(\"./caml_sys.js\");\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\n\nvar match = Caml_sys.caml_sys_get_argv(/* () */0);\n\nvar big_endian = false;\n\nvar unix = true;\n\nvar win32 = false;\n\nvar cygwin = false;\n\nvar max_array_length = (2147483647);\n\nvar max_string_length = (2147483647);\n\nvar interactive = /* record */[/* contents */false];\n\nfunction set_signal(sig_num, sig_beh) {\n  return /* () */0;\n}\n\nvar Break = Caml_exceptions.create(\"Sys.Break\");\n\nfunction catch_break(on) {\n  return /* () */0;\n}\n\nvar argv = match[1];\n\nvar executable_name = match[0];\n\nvar os_type = \"Unix\";\n\nvar word_size = 32;\n\nvar sigabrt = -1;\n\nvar sigalrm = -2;\n\nvar sigfpe = -3;\n\nvar sighup = -4;\n\nvar sigill = -5;\n\nvar sigint = -6;\n\nvar sigkill = -7;\n\nvar sigpipe = -8;\n\nvar sigquit = -9;\n\nvar sigsegv = -10;\n\nvar sigterm = -11;\n\nvar sigusr1 = -12;\n\nvar sigusr2 = -13;\n\nvar sigchld = -14;\n\nvar sigcont = -15;\n\nvar sigstop = -16;\n\nvar sigtstp = -17;\n\nvar sigttin = -18;\n\nvar sigttou = -19;\n\nvar sigvtalrm = -20;\n\nvar sigprof = -21;\n\nvar ocaml_version = \"4.02.3+dev1-2015-07-10\";\n\nexports.argv = argv;\nexports.executable_name = executable_name;\nexports.interactive = interactive;\nexports.os_type = os_type;\nexports.unix = unix;\nexports.win32 = win32;\nexports.cygwin = cygwin;\nexports.word_size = word_size;\nexports.big_endian = big_endian;\nexports.max_string_length = max_string_length;\nexports.max_array_length = max_array_length;\nexports.set_signal = set_signal;\nexports.sigabrt = sigabrt;\nexports.sigalrm = sigalrm;\nexports.sigfpe = sigfpe;\nexports.sighup = sighup;\nexports.sigill = sigill;\nexports.sigint = sigint;\nexports.sigkill = sigkill;\nexports.sigpipe = sigpipe;\nexports.sigquit = sigquit;\nexports.sigsegv = sigsegv;\nexports.sigterm = sigterm;\nexports.sigusr1 = sigusr1;\nexports.sigusr2 = sigusr2;\nexports.sigchld = sigchld;\nexports.sigcont = sigcont;\nexports.sigstop = sigstop;\nexports.sigtstp = sigtstp;\nexports.sigttin = sigttin;\nexports.sigttou = sigttou;\nexports.sigvtalrm = sigvtalrm;\nexports.sigprof = sigprof;\nexports.Break = Break;\nexports.catch_break = catch_break;\nexports.ocaml_version = ocaml_version;\n/* max_array_length Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/sys.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/sys.js");
},
d: {"./caml_sys.js":"NM$$bsb$$_$$native$lib$js$caml_sys","./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$caml_queue":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\n\nfunction create(param) {\n  return /* record */[\n          /* length */0,\n          /* tail */undefined\n        ];\n}\n\nfunction push(x, q) {\n  if (q[/* length */0] === 0) {\n    var cell = [];\n    cell[0] = x;\n    cell[1] = cell;\n    q[/* length */0] = 1;\n    q[/* tail */1] = cell;\n    return /* () */0;\n  } else {\n    var tail = q[/* tail */1];\n    var head = tail[/* next */1];\n    var cell$1 = /* record */[\n      /* content */x,\n      /* next */head\n    ];\n    q[/* length */0] = q[/* length */0] + 1 | 0;\n    tail[/* next */1] = cell$1;\n    q[/* tail */1] = cell$1;\n    return /* () */0;\n  }\n}\n\nfunction unsafe_pop(q) {\n  q[/* length */0] = q[/* length */0] - 1 | 0;\n  var tail = q[/* tail */1];\n  var head = tail[/* next */1];\n  if (head === tail) {\n    q[/* tail */1] = undefined;\n  } else {\n    tail[/* next */1] = head[/* next */1];\n  }\n  return head[/* content */0];\n}\n\nfunction is_empty(q) {\n  return q[/* length */0] === 0;\n}\n\nexports.create = create;\nexports.push = push;\nexports.unsafe_pop = unsafe_pop;\nexports.is_empty = is_empty;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_queue.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_queue.js");
},
d: {}
},
"NM$$bsb$$_$$native$lib$js$caml_hash_primitive":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_int32 = __fastpack_require__(\"./caml_int32.js\");\n\nfunction rotl32(x, n) {\n  return (x << n) | (x >>> (32 - n | 0));\n}\n\nfunction caml_hash_mix_int(h, d) {\n  var d$1 = d;\n  d$1 = Caml_int32.imul(d$1, 3432918353);\n  d$1 = rotl32(d$1, 15);\n  d$1 = Caml_int32.imul(d$1, 461845907);\n  var h$1 = h ^ d$1;\n  h$1 = rotl32(h$1, 13);\n  return (h$1 + (h$1 << 2) | 0) + 3864292196 | 0;\n}\n\nfunction caml_hash_final_mix(h) {\n  var h$1 = h ^ (h >>> 16);\n  h$1 = Caml_int32.imul(h$1, 2246822507);\n  h$1 = h$1 ^ (h$1 >>> 13);\n  h$1 = Caml_int32.imul(h$1, 3266489909);\n  return h$1 ^ (h$1 >>> 16);\n}\n\nfunction caml_hash_mix_string(h, s) {\n  var len = s.length;\n  var block = (len / 4 | 0) - 1 | 0;\n  var hash = h;\n  for(var i = 0; i <= block; ++i){\n    var j = (i << 2);\n    var w = s.charCodeAt(j) | (s.charCodeAt(j + 1 | 0) << 8) | (s.charCodeAt(j + 2 | 0) << 16) | (s.charCodeAt(j + 3 | 0) << 24);\n    hash = caml_hash_mix_int(hash, w);\n  }\n  var modulo = len & 3;\n  if (modulo !== 0) {\n    var w$1 = modulo === 3 ? (s.charCodeAt(len - 1 | 0) << 16) | (s.charCodeAt(len - 2 | 0) << 8) | s.charCodeAt(len - 3 | 0) : (\n        modulo === 2 ? (s.charCodeAt(len - 1 | 0) << 8) | s.charCodeAt(len - 2 | 0) : s.charCodeAt(len - 1 | 0)\n      );\n    hash = caml_hash_mix_int(hash, w$1);\n  }\n  hash = hash ^ len;\n  return hash;\n}\n\nexports.caml_hash_mix_int = caml_hash_mix_int;\nexports.caml_hash_mix_string = caml_hash_mix_string;\nexports.caml_hash_final_mix = caml_hash_final_mix;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_hash_primitive.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_hash_primitive.js");
},
d: {"./caml_int32.js":"NM$$bsb$$_$$native$lib$js$caml_int32"}
},
"NM$$bsb$$_$$native$lib$js$caml_hash":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_queue = __fastpack_require__(\"./caml_queue.js\");\nvar Caml_hash_primitive = __fastpack_require__(\"./caml_hash_primitive.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction caml_hash(count, _limit, seed, obj) {\n  var hash = seed;\n  if (typeof obj === \"number\") {\n    var u = obj | 0;\n    hash = Caml_hash_primitive.caml_hash_mix_int(hash, (u + u | 0) + 1 | 0);\n    return Caml_hash_primitive.caml_hash_final_mix(hash);\n  } else if (typeof obj === \"string\") {\n    hash = Caml_hash_primitive.caml_hash_mix_string(hash, obj);\n    return Caml_hash_primitive.caml_hash_final_mix(hash);\n  } else {\n    var queue = /* record */[\n      /* length */0,\n      /* tail */undefined\n    ];\n    var num = count;\n    Caml_queue.push(obj, queue);\n    num = num - 1 | 0;\n    while(queue[/* length */0] !== 0 && num > 0) {\n      var obj$1 = Caml_queue.unsafe_pop(queue);\n      if (typeof obj$1 === \"number\") {\n        var u$1 = obj$1 | 0;\n        hash = Caml_hash_primitive.caml_hash_mix_int(hash, (u$1 + u$1 | 0) + 1 | 0);\n        num = num - 1 | 0;\n      } else if (typeof obj$1 === \"string\") {\n        hash = Caml_hash_primitive.caml_hash_mix_string(hash, obj$1);\n        num = num - 1 | 0;\n      } else if (typeof obj$1 !== \"boolean\") {\n        if (typeof obj$1 !== \"undefined\") {\n          if (typeof obj$1 === \"symbol\") {\n            throw [\n                  Caml_builtin_exceptions.assert_failure,\n                  /* tuple */[\n                    \"caml_hash.ml\",\n                    72,\n                    8\n                  ]\n                ];\n          } else if (typeof obj$1 !== \"function\") {\n            var size = obj$1.length;\n            if (size !== undefined) {\n              var obj_tag = obj$1.tag | 0;\n              var tag = (size << 10) | obj_tag;\n              if (tag === 248) {\n                hash = Caml_hash_primitive.caml_hash_mix_int(hash, obj$1[1]);\n              } else {\n                hash = Caml_hash_primitive.caml_hash_mix_int(hash, tag);\n                var v = size - 1 | 0;\n                var block = v < num ? v : num;\n                for(var i = 0; i <= block; ++i){\n                  Caml_queue.push(obj$1[i], queue);\n                }\n              }\n            }\n            \n          }\n          \n        }\n        \n      }\n      \n    };\n    return Caml_hash_primitive.caml_hash_final_mix(hash);\n  }\n}\n\nexports.caml_hash = caml_hash;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_hash.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/caml_hash.js");
},
d: {"./caml_queue.js":"NM$$bsb$$_$$native$lib$js$caml_queue","./caml_hash_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_hash_primitive","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$marshal":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Caml_string = __fastpack_require__(\"./caml_string.js\");\nvar Caml_missing_polyfill = __fastpack_require__(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction to_buffer(buff, ofs, len, v, flags) {\n  if (ofs < 0 || len < 0 || ofs > (buff.length - len | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Marshal.to_buffer: substring out of bounds\"\n        ];\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_output_value_to_buffer\");\n  }\n}\n\nfunction data_size(buff, ofs) {\n  if (ofs < 0 || ofs > (buff.length - 20 | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Marshal.data_size\"\n        ];\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_marshal_data_size\");\n  }\n}\n\nfunction total_size(buff, ofs) {\n  return 20 + data_size(buff, ofs) | 0;\n}\n\nfunction from_bytes(buff, ofs) {\n  if (ofs < 0 || ofs > (buff.length - 20 | 0)) {\n    throw [\n          Caml_builtin_exceptions.invalid_argument,\n          \"Marshal.from_bytes\"\n        ];\n  } else {\n    var len = Caml_missing_polyfill.not_implemented(\"caml_marshal_data_size\");\n    if (ofs > (buff.length - (20 + len | 0) | 0)) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Marshal.from_bytes\"\n          ];\n    } else {\n      return Caml_missing_polyfill.not_implemented(\"caml_input_value_from_string\");\n    }\n  }\n}\n\nfunction from_string(buff, ofs) {\n  return from_bytes(Caml_string.bytes_of_string(buff), ofs);\n}\n\nfunction to_channel(prim, prim$1, prim$2) {\n  return Caml_missing_polyfill.not_implemented(\"caml_output_value\");\n}\n\nfunction from_channel(prim) {\n  return Caml_missing_polyfill.not_implemented(\"caml_input_value\");\n}\n\nvar header_size = 20;\n\nexports.to_channel = to_channel;\nexports.to_buffer = to_buffer;\nexports.from_channel = from_channel;\nexports.from_bytes = from_bytes;\nexports.from_string = from_string;\nexports.header_size = header_size;\nexports.data_size = data_size;\nexports.total_size = total_size;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/marshal.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/marshal.js");
},
d: {"./caml_string.js":"NM$$bsb$$_$$native$lib$js$caml_string","./caml_missing_polyfill.js":"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$obj":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Marshal = __fastpack_require__(\"./marshal.js\");\nvar Caml_array = __fastpack_require__(\"./caml_array.js\");\nvar Caml_missing_polyfill = __fastpack_require__(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction is_block(a) {\n  return typeof a !== \"number\";\n}\n\nvar double_field = Caml_array.caml_array_get;\n\nvar set_double_field = Caml_array.caml_array_set;\n\nfunction marshal(obj) {\n  return Caml_missing_polyfill.not_implemented(\"caml_output_value_to_string\");\n}\n\nfunction unmarshal(str, pos) {\n  return /* tuple */[\n          Marshal.from_bytes(str, pos),\n          pos + Marshal.total_size(str, pos) | 0\n        ];\n}\n\nfunction extension_slot(x) {\n  var slot = typeof x !== \"number\" && (x.tag | 0) !== 248 && x.length >= 1 ? x[0] : x;\n  var name;\n  if (typeof slot !== \"number\" && slot.tag === 248) {\n    name = slot[0];\n  } else {\n    throw Caml_builtin_exceptions.not_found;\n  }\n  if (name.tag === 252) {\n    return slot;\n  } else {\n    throw Caml_builtin_exceptions.not_found;\n  }\n}\n\nfunction extension_name(x) {\n  try {\n    var slot = extension_slot(x);\n    return slot[0];\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Obj.extension_name\"\n          ];\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction extension_id(x) {\n  try {\n    var slot = extension_slot(x);\n    return slot[1];\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Obj.extension_id\"\n          ];\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction extension_slot$1(x) {\n  try {\n    return extension_slot(x);\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      throw [\n            Caml_builtin_exceptions.invalid_argument,\n            \"Obj.extension_slot\"\n          ];\n    } else {\n      throw exn;\n    }\n  }\n}\n\nvar first_non_constant_constructor_tag = 0;\n\nvar last_non_constant_constructor_tag = 245;\n\nvar lazy_tag = 246;\n\nvar closure_tag = 247;\n\nvar object_tag = 248;\n\nvar infix_tag = 249;\n\nvar forward_tag = 250;\n\nvar no_scan_tag = 251;\n\nvar abstract_tag = 251;\n\nvar string_tag = 252;\n\nvar double_tag = 253;\n\nvar double_array_tag = 254;\n\nvar custom_tag = 255;\n\nvar final_tag = 255;\n\nvar int_tag = 1000;\n\nvar out_of_heap_tag = 1001;\n\nvar unaligned_tag = 1002;\n\nexports.is_block = is_block;\nexports.double_field = double_field;\nexports.set_double_field = set_double_field;\nexports.first_non_constant_constructor_tag = first_non_constant_constructor_tag;\nexports.last_non_constant_constructor_tag = last_non_constant_constructor_tag;\nexports.lazy_tag = lazy_tag;\nexports.closure_tag = closure_tag;\nexports.object_tag = object_tag;\nexports.infix_tag = infix_tag;\nexports.forward_tag = forward_tag;\nexports.no_scan_tag = no_scan_tag;\nexports.abstract_tag = abstract_tag;\nexports.string_tag = string_tag;\nexports.double_tag = double_tag;\nexports.double_array_tag = double_array_tag;\nexports.custom_tag = custom_tag;\nexports.final_tag = final_tag;\nexports.int_tag = int_tag;\nexports.out_of_heap_tag = out_of_heap_tag;\nexports.unaligned_tag = unaligned_tag;\nexports.extension_name = extension_name;\nexports.extension_id = extension_id;\nexports.extension_slot = extension_slot$1;\nexports.marshal = marshal;\nexports.unmarshal = unmarshal;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/obj.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/obj.js");
},
d: {"./marshal.js":"NM$$bsb$$_$$native$lib$js$marshal","./caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array","./caml_missing_polyfill.js":"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$camlinternalLazy":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar Obj = __fastpack_require__(\"./obj.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Caml_obj = __fastpack_require__(\"./caml_obj.js\");\nvar Caml_exceptions = __fastpack_require__(\"./caml_exceptions.js\");\n\nvar Undefined = Caml_exceptions.create(\"CamlinternalLazy.Undefined\");\n\nfunction raise_undefined(param) {\n  throw Undefined;\n}\n\nfunction force_lazy_block(blk) {\n  var closure = blk[0];\n  blk[0] = raise_undefined;\n  try {\n    var result = Curry._1(closure, /* () */0);\n    blk[0] = result;\n    Caml_obj.caml_obj_set_tag(blk, Obj.forward_tag);\n    return result;\n  }\n  catch (e){\n    blk[0] = (function (param) {\n        throw e;\n      });\n    throw e;\n  }\n}\n\nfunction force_val_lazy_block(blk) {\n  var closure = blk[0];\n  blk[0] = raise_undefined;\n  var result = Curry._1(closure, /* () */0);\n  blk[0] = result;\n  Caml_obj.caml_obj_set_tag(blk, Obj.forward_tag);\n  return result;\n}\n\nfunction force(lzv) {\n  var t = lzv.tag | 0;\n  if (t === Obj.forward_tag) {\n    return lzv[0];\n  } else if (t !== Obj.lazy_tag) {\n    return lzv;\n  } else {\n    return force_lazy_block(lzv);\n  }\n}\n\nfunction force_val(lzv) {\n  var t = lzv.tag | 0;\n  if (t === Obj.forward_tag) {\n    return lzv[0];\n  } else if (t !== Obj.lazy_tag) {\n    return lzv;\n  } else {\n    return force_val_lazy_block(lzv);\n  }\n}\n\nexports.Undefined = Undefined;\nexports.force_lazy_block = force_lazy_block;\nexports.force_val_lazy_block = force_val_lazy_block;\nexports.force = force;\nexports.force_val = force_val;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/camlinternalLazy.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/camlinternalLazy.js");
},
d: {"./obj.js":"NM$$bsb$$_$$native$lib$js$obj","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","./caml_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_exceptions"}
},
"NM$$bsb$$_$$native$lib$js$hashtbl":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("'use strict';\n\nvar $$Array = __fastpack_require__(\"./array.js\");\nvar Block = __fastpack_require__(\"./block.js\");\nvar Curry = __fastpack_require__(\"./curry.js\");\nvar Random = __fastpack_require__(\"./random.js\");\nvar Caml_obj = __fastpack_require__(\"./caml_obj.js\");\nvar Caml_hash = __fastpack_require__(\"./caml_hash.js\");\nvar Caml_array = __fastpack_require__(\"./caml_array.js\");\nvar Caml_primitive = __fastpack_require__(\"./caml_primitive.js\");\nvar CamlinternalLazy = __fastpack_require__(\"./camlinternalLazy.js\");\nvar Caml_missing_polyfill = __fastpack_require__(\"./caml_missing_polyfill.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"./caml_builtin_exceptions.js\");\n\nfunction hash(x) {\n  return Caml_hash.caml_hash(10, 100, 0, x);\n}\n\nfunction hash_param(n1, n2, x) {\n  return Caml_hash.caml_hash(n1, n2, 0, x);\n}\n\nfunction seeded_hash(seed, x) {\n  return Caml_hash.caml_hash(10, 100, seed, x);\n}\n\nvar randomized = /* record */[/* contents */false];\n\nfunction randomize(param) {\n  randomized[0] = true;\n  return /* () */0;\n}\n\nvar prng = Block.__(246, [(function (param) {\n        return Random.State[/* make_self_init */1](/* () */0);\n      })]);\n\nfunction power_2_above(_x, n) {\n  while(true) {\n    var x = _x;\n    if (x >= n || (x << 1) < x) {\n      return x;\n    } else {\n      _x = (x << 1);\n      continue ;\n    }\n  };\n}\n\nfunction create($staropt$star, initial_size) {\n  var random = $staropt$star !== undefined ? $staropt$star : randomized[0];\n  var s = power_2_above(16, initial_size);\n  var seed;\n  if (random) {\n    var tag = prng.tag | 0;\n    seed = Random.State[/* bits */3](tag === 250 ? prng[0] : (\n            tag === 246 ? CamlinternalLazy.force_lazy_block(prng) : prng\n          ));\n  } else {\n    seed = 0;\n  }\n  return /* record */[\n          /* size */0,\n          /* data */Caml_array.caml_make_vect(s, /* Empty */0),\n          /* seed */seed,\n          /* initial_size */s\n        ];\n}\n\nfunction clear(h) {\n  h[/* size */0] = 0;\n  var len = h[/* data */1].length;\n  for(var i = 0 ,i_finish = len - 1 | 0; i <= i_finish; ++i){\n    Caml_array.caml_array_set(h[/* data */1], i, /* Empty */0);\n  }\n  return /* () */0;\n}\n\nfunction reset(h) {\n  var len = h[/* data */1].length;\n  if (h.length < 4 || len === h[/* initial_size */3]) {\n    return clear(h);\n  } else {\n    h[/* size */0] = 0;\n    h[/* data */1] = Caml_array.caml_make_vect(h[/* initial_size */3], /* Empty */0);\n    return /* () */0;\n  }\n}\n\nfunction copy(h) {\n  return /* record */[\n          /* size */h[/* size */0],\n          /* data */$$Array.copy(h[/* data */1]),\n          /* seed */h[/* seed */2],\n          /* initial_size */h[/* initial_size */3]\n        ];\n}\n\nfunction length(h) {\n  return h[/* size */0];\n}\n\nfunction resize(indexfun, h) {\n  var odata = h[/* data */1];\n  var osize = odata.length;\n  var nsize = (osize << 1);\n  if (nsize >= osize) {\n    var ndata = Caml_array.caml_make_vect(nsize, /* Empty */0);\n    h[/* data */1] = ndata;\n    var insert_bucket = function (param) {\n      if (param) {\n        var key = param[0];\n        insert_bucket(param[2]);\n        var nidx = Curry._2(indexfun, h, key);\n        return Caml_array.caml_array_set(ndata, nidx, /* Cons */[\n                    key,\n                    param[1],\n                    Caml_array.caml_array_get(ndata, nidx)\n                  ]);\n      } else {\n        return /* () */0;\n      }\n    };\n    for(var i = 0 ,i_finish = osize - 1 | 0; i <= i_finish; ++i){\n      insert_bucket(Caml_array.caml_array_get(odata, i));\n    }\n    return /* () */0;\n  } else {\n    return 0;\n  }\n}\n\nfunction key_index(h, key) {\n  if (h.length >= 3) {\n    return Caml_hash.caml_hash(10, 100, h[/* seed */2], key) & (h[/* data */1].length - 1 | 0);\n  } else {\n    return Caml_missing_polyfill.not_implemented(\"caml_hash_univ_param\") % h[/* data */1].length;\n  }\n}\n\nfunction add(h, key, info) {\n  var i = key_index(h, key);\n  var bucket_002 = Caml_array.caml_array_get(h[/* data */1], i);\n  var bucket = /* Cons */[\n    key,\n    info,\n    bucket_002\n  ];\n  Caml_array.caml_array_set(h[/* data */1], i, bucket);\n  h[/* size */0] = h[/* size */0] + 1 | 0;\n  if (h[/* size */0] > (h[/* data */1].length << 1)) {\n    return resize(key_index, h);\n  } else {\n    return 0;\n  }\n}\n\nfunction remove(h, key) {\n  var remove_bucket = function (param) {\n    if (param) {\n      var next = param[2];\n      var k = param[0];\n      if (Caml_obj.caml_equal(k, key)) {\n        h[/* size */0] = h[/* size */0] - 1 | 0;\n        return next;\n      } else {\n        return /* Cons */[\n                k,\n                param[1],\n                remove_bucket(next)\n              ];\n      }\n    } else {\n      return /* Empty */0;\n    }\n  };\n  var i = key_index(h, key);\n  return Caml_array.caml_array_set(h[/* data */1], i, remove_bucket(Caml_array.caml_array_get(h[/* data */1], i)));\n}\n\nfunction find(h, key) {\n  var match = Caml_array.caml_array_get(h[/* data */1], key_index(h, key));\n  if (match) {\n    if (Caml_obj.caml_equal(key, match[0])) {\n      return match[1];\n    } else {\n      var rest1 = match[2];\n      if (rest1) {\n        if (Caml_obj.caml_equal(key, rest1[0])) {\n          return rest1[1];\n        } else {\n          var rest2 = rest1[2];\n          if (rest2) {\n            if (Caml_obj.caml_equal(key, rest2[0])) {\n              return rest2[1];\n            } else {\n              var key$1 = key;\n              var _param = rest2[2];\n              while(true) {\n                var param = _param;\n                if (param) {\n                  if (Caml_obj.caml_equal(key$1, param[0])) {\n                    return param[1];\n                  } else {\n                    _param = param[2];\n                    continue ;\n                  }\n                } else {\n                  throw Caml_builtin_exceptions.not_found;\n                }\n              };\n            }\n          } else {\n            throw Caml_builtin_exceptions.not_found;\n          }\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    }\n  } else {\n    throw Caml_builtin_exceptions.not_found;\n  }\n}\n\nfunction find_all(h, key) {\n  var find_in_bucket = function (_param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        var rest = param[2];\n        if (Caml_obj.caml_equal(param[0], key)) {\n          return /* :: */[\n                  param[1],\n                  find_in_bucket(rest)\n                ];\n        } else {\n          _param = rest;\n          continue ;\n        }\n      } else {\n        return /* [] */0;\n      }\n    };\n  };\n  return find_in_bucket(Caml_array.caml_array_get(h[/* data */1], key_index(h, key)));\n}\n\nfunction replace(h, key, info) {\n  var replace_bucket = function (param) {\n    if (param) {\n      var next = param[2];\n      var k = param[0];\n      if (Caml_obj.caml_equal(k, key)) {\n        return /* Cons */[\n                key,\n                info,\n                next\n              ];\n      } else {\n        return /* Cons */[\n                k,\n                param[1],\n                replace_bucket(next)\n              ];\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n  var i = key_index(h, key);\n  var l = Caml_array.caml_array_get(h[/* data */1], i);\n  try {\n    return Caml_array.caml_array_set(h[/* data */1], i, replace_bucket(l));\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      Caml_array.caml_array_set(h[/* data */1], i, /* Cons */[\n            key,\n            info,\n            l\n          ]);\n      h[/* size */0] = h[/* size */0] + 1 | 0;\n      if (h[/* size */0] > (h[/* data */1].length << 1)) {\n        return resize(key_index, h);\n      } else {\n        return 0;\n      }\n    } else {\n      throw exn;\n    }\n  }\n}\n\nfunction mem(h, key) {\n  var _param = Caml_array.caml_array_get(h[/* data */1], key_index(h, key));\n  while(true) {\n    var param = _param;\n    if (param) {\n      if (Caml_obj.caml_equal(param[0], key)) {\n        return true;\n      } else {\n        _param = param[2];\n        continue ;\n      }\n    } else {\n      return false;\n    }\n  };\n}\n\nfunction iter(f, h) {\n  var do_bucket = function (_param) {\n    while(true) {\n      var param = _param;\n      if (param) {\n        Curry._2(f, param[0], param[1]);\n        _param = param[2];\n        continue ;\n      } else {\n        return /* () */0;\n      }\n    };\n  };\n  var d = h[/* data */1];\n  for(var i = 0 ,i_finish = d.length - 1 | 0; i <= i_finish; ++i){\n    do_bucket(Caml_array.caml_array_get(d, i));\n  }\n  return /* () */0;\n}\n\nfunction fold(f, h, init) {\n  var do_bucket = function (_b, _accu) {\n    while(true) {\n      var accu = _accu;\n      var b = _b;\n      if (b) {\n        _accu = Curry._3(f, b[0], b[1], accu);\n        _b = b[2];\n        continue ;\n      } else {\n        return accu;\n      }\n    };\n  };\n  var d = h[/* data */1];\n  var accu = init;\n  for(var i = 0 ,i_finish = d.length - 1 | 0; i <= i_finish; ++i){\n    accu = do_bucket(Caml_array.caml_array_get(d, i), accu);\n  }\n  return accu;\n}\n\nfunction bucket_length(_accu, _param) {\n  while(true) {\n    var param = _param;\n    var accu = _accu;\n    if (param) {\n      _param = param[2];\n      _accu = accu + 1 | 0;\n      continue ;\n    } else {\n      return accu;\n    }\n  };\n}\n\nfunction stats(h) {\n  var mbl = $$Array.fold_left((function (m, b) {\n          return Caml_primitive.caml_int_max(m, bucket_length(0, b));\n        }), 0, h[/* data */1]);\n  var histo = Caml_array.caml_make_vect(mbl + 1 | 0, 0);\n  $$Array.iter((function (b) {\n          var l = bucket_length(0, b);\n          return Caml_array.caml_array_set(histo, l, Caml_array.caml_array_get(histo, l) + 1 | 0);\n        }), h[/* data */1]);\n  return /* record */[\n          /* num_bindings */h[/* size */0],\n          /* num_buckets */h[/* data */1].length,\n          /* max_bucket_length */mbl,\n          /* bucket_histogram */histo\n        ];\n}\n\nfunction MakeSeeded(H) {\n  var key_index = function (h, key) {\n    return Curry._2(H[/* hash */1], h[/* seed */2], key) & (h[/* data */1].length - 1 | 0);\n  };\n  var add = function (h, key, info) {\n    var i = key_index(h, key);\n    var bucket_002 = Caml_array.caml_array_get(h[/* data */1], i);\n    var bucket = /* Cons */[\n      key,\n      info,\n      bucket_002\n    ];\n    Caml_array.caml_array_set(h[/* data */1], i, bucket);\n    h[/* size */0] = h[/* size */0] + 1 | 0;\n    if (h[/* size */0] > (h[/* data */1].length << 1)) {\n      return resize(key_index, h);\n    } else {\n      return 0;\n    }\n  };\n  var remove = function (h, key) {\n    var remove_bucket = function (param) {\n      if (param) {\n        var next = param[2];\n        var k = param[0];\n        if (Curry._2(H[/* equal */0], k, key)) {\n          h[/* size */0] = h[/* size */0] - 1 | 0;\n          return next;\n        } else {\n          return /* Cons */[\n                  k,\n                  param[1],\n                  remove_bucket(next)\n                ];\n        }\n      } else {\n        return /* Empty */0;\n      }\n    };\n    var i = key_index(h, key);\n    return Caml_array.caml_array_set(h[/* data */1], i, remove_bucket(Caml_array.caml_array_get(h[/* data */1], i)));\n  };\n  var find = function (h, key) {\n    var match = Caml_array.caml_array_get(h[/* data */1], key_index(h, key));\n    if (match) {\n      var rest1 = match[2];\n      if (Curry._2(H[/* equal */0], key, match[0])) {\n        return match[1];\n      } else if (rest1) {\n        var rest2 = rest1[2];\n        if (Curry._2(H[/* equal */0], key, rest1[0])) {\n          return rest1[1];\n        } else if (rest2) {\n          if (Curry._2(H[/* equal */0], key, rest2[0])) {\n            return rest2[1];\n          } else {\n            var key$1 = key;\n            var _param = rest2[2];\n            while(true) {\n              var param = _param;\n              if (param) {\n                if (Curry._2(H[/* equal */0], key$1, param[0])) {\n                  return param[1];\n                } else {\n                  _param = param[2];\n                  continue ;\n                }\n              } else {\n                throw Caml_builtin_exceptions.not_found;\n              }\n            };\n          }\n        } else {\n          throw Caml_builtin_exceptions.not_found;\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n  var find_all = function (h, key) {\n    var find_in_bucket = function (_param) {\n      while(true) {\n        var param = _param;\n        if (param) {\n          var rest = param[2];\n          if (Curry._2(H[/* equal */0], param[0], key)) {\n            return /* :: */[\n                    param[1],\n                    find_in_bucket(rest)\n                  ];\n          } else {\n            _param = rest;\n            continue ;\n          }\n        } else {\n          return /* [] */0;\n        }\n      };\n    };\n    return find_in_bucket(Caml_array.caml_array_get(h[/* data */1], key_index(h, key)));\n  };\n  var replace = function (h, key, info) {\n    var replace_bucket = function (param) {\n      if (param) {\n        var next = param[2];\n        var k = param[0];\n        if (Curry._2(H[/* equal */0], k, key)) {\n          return /* Cons */[\n                  key,\n                  info,\n                  next\n                ];\n        } else {\n          return /* Cons */[\n                  k,\n                  param[1],\n                  replace_bucket(next)\n                ];\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n    var i = key_index(h, key);\n    var l = Caml_array.caml_array_get(h[/* data */1], i);\n    try {\n      return Caml_array.caml_array_set(h[/* data */1], i, replace_bucket(l));\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        Caml_array.caml_array_set(h[/* data */1], i, /* Cons */[\n              key,\n              info,\n              l\n            ]);\n        h[/* size */0] = h[/* size */0] + 1 | 0;\n        if (h[/* size */0] > (h[/* data */1].length << 1)) {\n          return resize(key_index, h);\n        } else {\n          return 0;\n        }\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var mem = function (h, key) {\n    var _param = Caml_array.caml_array_get(h[/* data */1], key_index(h, key));\n    while(true) {\n      var param = _param;\n      if (param) {\n        if (Curry._2(H[/* equal */0], param[0], key)) {\n          return true;\n        } else {\n          _param = param[2];\n          continue ;\n        }\n      } else {\n        return false;\n      }\n    };\n  };\n  return /* module */[\n          /* create */create,\n          /* clear */clear,\n          /* reset */reset,\n          /* copy */copy,\n          /* add */add,\n          /* remove */remove,\n          /* find */find,\n          /* find_all */find_all,\n          /* replace */replace,\n          /* mem */mem,\n          /* iter */iter,\n          /* fold */fold,\n          /* length */length,\n          /* stats */stats\n        ];\n}\n\nfunction Make(H) {\n  var equal = H[/* equal */0];\n  var key_index = function (h, key) {\n    return Curry._1(H[/* hash */1], key) & (h[/* data */1].length - 1 | 0);\n  };\n  var add = function (h, key, info) {\n    var i = key_index(h, key);\n    var bucket_002 = Caml_array.caml_array_get(h[/* data */1], i);\n    var bucket = /* Cons */[\n      key,\n      info,\n      bucket_002\n    ];\n    Caml_array.caml_array_set(h[/* data */1], i, bucket);\n    h[/* size */0] = h[/* size */0] + 1 | 0;\n    if (h[/* size */0] > (h[/* data */1].length << 1)) {\n      return resize(key_index, h);\n    } else {\n      return 0;\n    }\n  };\n  var remove = function (h, key) {\n    var remove_bucket = function (param) {\n      if (param) {\n        var next = param[2];\n        var k = param[0];\n        if (Curry._2(equal, k, key)) {\n          h[/* size */0] = h[/* size */0] - 1 | 0;\n          return next;\n        } else {\n          return /* Cons */[\n                  k,\n                  param[1],\n                  remove_bucket(next)\n                ];\n        }\n      } else {\n        return /* Empty */0;\n      }\n    };\n    var i = key_index(h, key);\n    return Caml_array.caml_array_set(h[/* data */1], i, remove_bucket(Caml_array.caml_array_get(h[/* data */1], i)));\n  };\n  var find = function (h, key) {\n    var match = Caml_array.caml_array_get(h[/* data */1], key_index(h, key));\n    if (match) {\n      var rest1 = match[2];\n      if (Curry._2(equal, key, match[0])) {\n        return match[1];\n      } else if (rest1) {\n        var rest2 = rest1[2];\n        if (Curry._2(equal, key, rest1[0])) {\n          return rest1[1];\n        } else if (rest2) {\n          if (Curry._2(equal, key, rest2[0])) {\n            return rest2[1];\n          } else {\n            var key$1 = key;\n            var _param = rest2[2];\n            while(true) {\n              var param = _param;\n              if (param) {\n                if (Curry._2(equal, key$1, param[0])) {\n                  return param[1];\n                } else {\n                  _param = param[2];\n                  continue ;\n                }\n              } else {\n                throw Caml_builtin_exceptions.not_found;\n              }\n            };\n          }\n        } else {\n          throw Caml_builtin_exceptions.not_found;\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    } else {\n      throw Caml_builtin_exceptions.not_found;\n    }\n  };\n  var find_all = function (h, key) {\n    var find_in_bucket = function (_param) {\n      while(true) {\n        var param = _param;\n        if (param) {\n          var rest = param[2];\n          if (Curry._2(equal, param[0], key)) {\n            return /* :: */[\n                    param[1],\n                    find_in_bucket(rest)\n                  ];\n          } else {\n            _param = rest;\n            continue ;\n          }\n        } else {\n          return /* [] */0;\n        }\n      };\n    };\n    return find_in_bucket(Caml_array.caml_array_get(h[/* data */1], key_index(h, key)));\n  };\n  var replace = function (h, key, info) {\n    var replace_bucket = function (param) {\n      if (param) {\n        var next = param[2];\n        var k = param[0];\n        if (Curry._2(equal, k, key)) {\n          return /* Cons */[\n                  key,\n                  info,\n                  next\n                ];\n        } else {\n          return /* Cons */[\n                  k,\n                  param[1],\n                  replace_bucket(next)\n                ];\n        }\n      } else {\n        throw Caml_builtin_exceptions.not_found;\n      }\n    };\n    var i = key_index(h, key);\n    var l = Caml_array.caml_array_get(h[/* data */1], i);\n    try {\n      return Caml_array.caml_array_set(h[/* data */1], i, replace_bucket(l));\n    }\n    catch (exn){\n      if (exn === Caml_builtin_exceptions.not_found) {\n        Caml_array.caml_array_set(h[/* data */1], i, /* Cons */[\n              key,\n              info,\n              l\n            ]);\n        h[/* size */0] = h[/* size */0] + 1 | 0;\n        if (h[/* size */0] > (h[/* data */1].length << 1)) {\n          return resize(key_index, h);\n        } else {\n          return 0;\n        }\n      } else {\n        throw exn;\n      }\n    }\n  };\n  var mem = function (h, key) {\n    var _param = Caml_array.caml_array_get(h[/* data */1], key_index(h, key));\n    while(true) {\n      var param = _param;\n      if (param) {\n        if (Curry._2(equal, param[0], key)) {\n          return true;\n        } else {\n          _param = param[2];\n          continue ;\n        }\n      } else {\n        return false;\n      }\n    };\n  };\n  var create$1 = function (sz) {\n    return create(false, sz);\n  };\n  return /* module */[\n          /* create */create$1,\n          /* clear */clear,\n          /* reset */reset,\n          /* copy */copy,\n          /* add */add,\n          /* remove */remove,\n          /* find */find,\n          /* find_all */find_all,\n          /* replace */replace,\n          /* mem */mem,\n          /* iter */iter,\n          /* fold */fold,\n          /* length */length,\n          /* stats */stats\n        ];\n}\n\nvar seeded_hash_param = Caml_hash.caml_hash;\n\nexports.create = create;\nexports.clear = clear;\nexports.reset = reset;\nexports.copy = copy;\nexports.add = add;\nexports.find = find;\nexports.find_all = find_all;\nexports.mem = mem;\nexports.remove = remove;\nexports.replace = replace;\nexports.iter = iter;\nexports.fold = fold;\nexports.length = length;\nexports.randomize = randomize;\nexports.stats = stats;\nexports.Make = Make;\nexports.MakeSeeded = MakeSeeded;\nexports.hash = hash;\nexports.seeded_hash = seeded_hash;\nexports.hash_param = hash_param;\nexports.seeded_hash_param = seeded_hash_param;\n/* Random Not a pure module */\n\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/hashtbl.js\n//# sourceURL=fpack:///node_modules/bsb-native/lib/js/hashtbl.js");
},
d: {"./array.js":"NM$$bsb$$_$$native$lib$js$array","./block.js":"NM$$bsb$$_$$native$lib$js$block","./curry.js":"NM$$bsb$$_$$native$lib$js$curry","./random.js":"NM$$bsb$$_$$native$lib$js$random","./caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","./caml_hash.js":"NM$$bsb$$_$$native$lib$js$caml_hash","./caml_array.js":"NM$$bsb$$_$$native$lib$js$caml_array","./caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","./camlinternalLazy.js":"NM$$bsb$$_$$native$lib$js$camlinternalLazy","./caml_missing_polyfill.js":"NM$$bsb$$_$$native$lib$js$caml_missing_polyfill","./caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"NM$$reprocessing$lib$js$src$Reprocessing_Hotreload":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\n\nfunction checkRebuild(param, param$1) {\n  return false;\n}\n\nvar NoHotreloading = /* module */[/* checkRebuild */checkRebuild];\n\nexports.NoHotreloading = NoHotreloading;\nexports.checkRebuild = checkRebuild;\n/* No side effect */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Hotreload.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing_Hotreload.js");
},
d: {}
},
"NM$$reprocessing$lib$js$src$Reprocessing":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Sys = __fastpack_require__(\"bsb-native/lib/js/sys.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Random = __fastpack_require__(\"bsb-native/lib/js/random.js\");\nvar Hashtbl = __fastpack_require__(\"bsb-native/lib/js/hashtbl.js\");\nvar Js_primitive = __fastpack_require__(\"bsb-native/lib/js/js_primitive.js\");\nvar RGLConstants = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/RGLConstants.js\");\nvar Reasongl_web = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js\");\nvar Reprocessing_Env = __fastpack_require__(\"./Reprocessing_Env.js\");\nvar Reprocessing_Draw = __fastpack_require__(\"./Reprocessing_Draw.js\");\nvar Reprocessing_Font = __fastpack_require__(\"./Reprocessing_Font.js\");\nvar Reprocessing_Utils = __fastpack_require__(\"./Reprocessing_Utils.js\");\nvar Reprocessing_Common = __fastpack_require__(\"./Reprocessing_Common.js\");\nvar Reprocessing_Matrix = __fastpack_require__(\"./Reprocessing_Matrix.js\");\nvar Reprocessing_Internal = __fastpack_require__(\"./Reprocessing_Internal.js\");\nvar Reprocessing_Constants = __fastpack_require__(\"./Reprocessing_Constants.js\");\nvar Reprocessing_Hotreload = __fastpack_require__(\"./Reprocessing_Hotreload.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nvar hotreloadData = Hashtbl.create(undefined, 10);\n\nfunction unwrapOrDefault($$default, opt) {\n  if (opt !== undefined) {\n    return Js_primitive.valFromOption(opt);\n  } else {\n    return $$default;\n  }\n}\n\nfunction identity(a, param) {\n  return a;\n}\n\nvar defaultScreen = \"reprocessing-default\";\n\nvar currentScreen = /* record */[/* contents */defaultScreen];\n\nfunction setScreenId(id) {\n  currentScreen[0] = id;\n  return /* () */0;\n}\n\nfunction clearScreenId(param) {\n  currentScreen[0] = defaultScreen;\n  return /* () */0;\n}\n\nvar pauseFns = Hashtbl.create(undefined, 10);\n\nfunction playPause(id, play) {\n  var exit = 0;\n  var fn;\n  try {\n    fn = Hashtbl.find(pauseFns, id);\n    exit = 1;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return undefined;\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    return Curry._1(fn, play);\n  }\n  \n}\n\nfunction hotreload($staropt$star, filename) {\n  var screen = $staropt$star !== undefined ? $staropt$star : defaultScreen;\n  Hashtbl.replace(hotreloadData, screen, /* record */[\n        /* started */false,\n        /* justHotReloaded */false,\n        /* filename */filename,\n        /* previousInitialStateHash */0,\n        /* draw */identity,\n        /* setup */(function (param) {\n            return /* () */0;\n          }),\n        /* mouseMove */identity,\n        /* mouseDragged */identity,\n        /* mouseDown */identity,\n        /* mouseUp */identity,\n        /* keyPressed */identity,\n        /* keyReleased */identity,\n        /* keyTyped */identity\n      ]);\n  return Reprocessing_Hotreload.checkRebuild(true, filename);\n}\n\nfunction run(setup, screen, draw, mouseMove, mouseDragged, mouseDown, mouseUp, keyPressed, keyReleased, keyTyped, param) {\n  var screen$1 = screen !== undefined ? screen : currentScreen[0];\n  var fns;\n  var exit = 0;\n  var hr;\n  try {\n    hr = Hashtbl.find(hotreloadData, screen$1);\n    exit = 1;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      fns = /* record */[\n        /* started */false,\n        /* justHotReloaded */false,\n        /* filename */\"\",\n        /* previousInitialStateHash */0,\n        /* draw */unwrapOrDefault(identity, draw),\n        /* setup */setup,\n        /* mouseMove */unwrapOrDefault(identity, mouseMove),\n        /* mouseDragged */unwrapOrDefault(identity, mouseDragged),\n        /* mouseDown */unwrapOrDefault(identity, mouseDown),\n        /* mouseUp */unwrapOrDefault(identity, mouseUp),\n        /* keyPressed */unwrapOrDefault(identity, keyPressed),\n        /* keyReleased */unwrapOrDefault(identity, keyReleased),\n        /* keyTyped */unwrapOrDefault(identity, keyTyped)\n      ];\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    hr[/* justHotReloaded */1] = true;\n    hr[/* draw */4] = unwrapOrDefault(identity, draw);\n    hr[/* setup */5] = setup;\n    hr[/* keyPressed */10] = unwrapOrDefault(identity, keyPressed);\n    hr[/* keyReleased */11] = unwrapOrDefault(identity, keyReleased);\n    hr[/* keyTyped */12] = unwrapOrDefault(identity, keyTyped);\n    hr[/* mouseMove */6] = unwrapOrDefault(identity, mouseMove);\n    hr[/* mouseDragged */7] = unwrapOrDefault(identity, mouseDragged);\n    hr[/* mouseDown */8] = unwrapOrDefault(identity, mouseDown);\n    hr[/* mouseUp */9] = unwrapOrDefault(identity, mouseUp);\n    console.log(\"Successfully changed functions\");\n    fns = hr;\n  }\n  if (fns[/* started */0]) {\n    return 0;\n  } else {\n    fns[/* started */0] = true;\n    Random.self_init(/* () */0);\n    Reprocessing_Utils.noiseSeed(Random.$$int(Reprocessing_Utils.pow(2, 29)));\n    var env = Reprocessing_Internal.createCanvas(Curry._2(Reasongl_web.Gl[/* Window */2][/* init */5], screen$1, Sys.argv), 200, 200);\n    Reprocessing_Font.Font[/* loadDefaultFont */15](env);\n    var userState = /* record */[/* contents */Curry._1(setup, env)];\n    fns[/* previousInitialStateHash */3] = Hashtbl.hash(userState[0]);\n    var width = Curry._1(Reasongl_web.Gl[/* Window */2][/* getWidth */0], env[/* window */1]);\n    var height = Curry._1(Reasongl_web.Gl[/* Window */2][/* getHeight */1], env[/* window */1]);\n    var data = Reasongl_web.Gl[/* readPixels_RGBA */30](env[/* gl */2], 0, 0, width, height);\n    var textureBuffer = Curry._1(Reasongl_web.Gl[/* createTexture */17], env[/* gl */2]);\n    Curry._3(Reasongl_web.Gl[/* bindTexture */19], env[/* gl */2], RGLConstants.texture_2d, textureBuffer);\n    Reasongl_web.Gl[/* texImage2D_RGBA */41](env[/* gl */2], RGLConstants.texture_2d, 0, width, height, 0, data);\n    Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_mag_filter, RGLConstants.linear);\n    Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_min_filter, RGLConstants.linear);\n    Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_wrap_s, RGLConstants.clamp_to_edge);\n    Curry._4(Reasongl_web.Gl[/* texParameteri */20], env[/* gl */2], RGLConstants.texture_2d, RGLConstants.texture_wrap_t, RGLConstants.clamp_to_edge);\n    var reDrawPreviousBufferOnSecondFrame = function (param) {\n      var x1 = 0 + width | 0;\n      var y1 = 0;\n      var x2 = 0;\n      var y2 = 0;\n      var x3 = 0 + width | 0;\n      var y3 = 0 + height | 0;\n      var x4 = 0;\n      var y4 = 0 + height | 0;\n      var verticesColorAndTexture = /* array */[\n        x1,\n        y1,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1,\n        1.0,\n        1.0,\n        x2,\n        y2,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1,\n        0.0,\n        1.0,\n        x3,\n        y3,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1,\n        1.0,\n        0.0,\n        x4,\n        y4,\n        0.0,\n        0.0,\n        0.0,\n        0.0,\n        1,\n        0.0,\n        0.0\n      ];\n      return Reprocessing_Internal.drawGeometry(Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* of_array */1], /* Float32 */1, verticesColorAndTexture), Curry._2(Reasongl_web.Gl[/* Bigarray */28][/* of_array */1], /* Uint16 */3, /* array */[\n                      0,\n                      1,\n                      2,\n                      1,\n                      2,\n                      3\n                    ]), RGLConstants.triangles, 6, textureBuffer, env);\n    };\n    var playPauseFn = Reasongl_web.Gl[/* render */5](env[/* window */1], (function (param, param$1, x, y) {\n            env[/* mouse */12][/* pos */0] = /* tuple */[\n              x,\n              y\n            ];\n            env[/* mouse */12][/* pressed */2] = true;\n            userState[0] = Curry._2(fns[/* mouseDown */8], userState[0], env);\n            return /* () */0;\n          }), (function (param, param$1, x, y) {\n            env[/* mouse */12][/* pos */0] = /* tuple */[\n              x,\n              y\n            ];\n            env[/* mouse */12][/* pressed */2] = false;\n            userState[0] = Curry._2(fns[/* mouseUp */9], userState[0], env);\n            return /* () */0;\n          }), (function (x, y) {\n            env[/* mouse */12][/* pos */0] = /* tuple */[\n              x,\n              y\n            ];\n            if (env[/* mouse */12][/* pressed */2]) {\n              userState[0] = Curry._2(fns[/* mouseDragged */7], userState[0], env);\n              return /* () */0;\n            } else {\n              userState[0] = Curry._2(fns[/* mouseMove */6], userState[0], env);\n              return /* () */0;\n            }\n          }), (function (keycode, repeat) {\n            env[/* keyboard */11][/* keyCode */0] = keycode;\n            if (!repeat) {\n              userState[0] = Curry._2(fns[/* keyPressed */10], userState[0], env);\n              env[/* keyboard */11][/* pressed */1] = Curry._2(Reprocessing_Common.KeySet[/* add */3], keycode, env[/* keyboard */11][/* pressed */1]);\n              env[/* keyboard */11][/* down */3] = Curry._2(Reprocessing_Common.KeySet[/* add */3], keycode, env[/* keyboard */11][/* down */3]);\n            }\n            userState[0] = Curry._2(fns[/* keyTyped */12], userState[0], env);\n            return /* () */0;\n          }), (function (keycode) {\n            env[/* keyboard */11][/* keyCode */0] = keycode;\n            env[/* keyboard */11][/* released */2] = Curry._2(Reprocessing_Common.KeySet[/* add */3], keycode, env[/* keyboard */11][/* released */2]);\n            env[/* keyboard */11][/* down */3] = Curry._2(Reprocessing_Common.KeySet[/* remove */5], keycode, env[/* keyboard */11][/* down */3]);\n            userState[0] = Curry._2(fns[/* keyReleased */11], userState[0], env);\n            return /* () */0;\n          }), (function (param) {\n            if (env[/* size */18][/* resizeable */2]) {\n              var height = Curry._1(Reasongl_web.Gl[/* Window */2][/* getHeight */1], env[/* window */1]);\n              var width = Curry._1(Reasongl_web.Gl[/* Window */2][/* getWidth */0], env[/* window */1]);\n              return Reprocessing_Internal.resetSize(env, width, height);\n            } else {\n              return Reprocessing_Env.size(Reprocessing_Env.width(env), Reprocessing_Env.height(env), env);\n            }\n          }), (function (f) {\n            if (env[/* frame */15][/* count */0] === 2) {\n              reDrawPreviousBufferOnSecondFrame(/* () */0);\n              var height = Curry._1(Reasongl_web.Gl[/* Window */2][/* getHeight */1], env[/* window */1]);\n              var width = Curry._1(Reasongl_web.Gl[/* Window */2][/* getWidth */0], env[/* window */1]);\n              Curry._3(Reasongl_web.Gl[/* Window */2][/* setWindowSize */6], env[/* window */1], width, height);\n            }\n            if (fns[/* filename */2] !== \"\") {\n              Reprocessing_Hotreload.checkRebuild(false, fns[/* filename */2]);\n            }\n            if (fns[/* justHotReloaded */1]) {\n              fns[/* justHotReloaded */1] = false;\n            }\n            userState[0] = Curry._2(fns[/* draw */4], userState[0], env);\n            var f$1 = f;\n            var env$1 = env;\n            var rate = 1000 / f$1 | 0;\n            env$1[/* mouse */12][/* prevPos */1] = env$1[/* mouse */12][/* pos */0];\n            env$1[/* frame */15] = /* record */[\n              /* count */env$1[/* frame */15][/* count */0] + 1 | 0,\n              /* rate */rate,\n              /* deltaTime */f$1 / 1000\n            ];\n            env$1[/* keyboard */11][/* released */2] = Reprocessing_Common.KeySet[/* empty */0];\n            env$1[/* keyboard */11][/* pressed */1] = Reprocessing_Common.KeySet[/* empty */0];\n            Reprocessing_Matrix.copyInto(Reprocessing_Matrix.identity, env$1[/* matrix */16]);\n            if (env$1[/* batch */10][/* elementPtr */3] > 0) {\n              return Reprocessing_Internal.flushGlobalBatch(env$1);\n            } else {\n              return 0;\n            }\n          }), /* () */0);\n    return Hashtbl.replace(pauseFns, screen$1, playPauseFn);\n  }\n}\n\nvar Draw = 0;\n\nvar Env = 0;\n\nvar Events = 0;\n\nvar Utils = 0;\n\nvar Constants = 0;\n\nexports.Draw = Draw;\nexports.Env = Env;\nexports.Events = Events;\nexports.Utils = Utils;\nexports.Constants = Constants;\nexports.hotreload = hotreload;\nexports.setScreenId = setScreenId;\nexports.clearScreenId = clearScreenId;\nexports.playPause = playPause;\nexports.run = run;\n/* hotreloadData Not a pure module */\n\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing.js\n//# sourceURL=fpack:///node_modules/reprocessing/lib/js/src/Reprocessing.js");
},
d: {"bsb-native/lib/js/sys.js":"NM$$bsb$$_$$native$lib$js$sys","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","bsb-native/lib/js/random.js":"NM$$bsb$$_$$native$lib$js$random","bsb-native/lib/js/hashtbl.js":"NM$$bsb$$_$$native$lib$js$hashtbl","bsb-native/lib/js/js_primitive.js":"NM$$bsb$$_$$native$lib$js$js_primitive","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/RGLConstants.js":"NM$$Reasongl$lib$js$src$RGLConstants","/Users/schmave/Documents/git/ludum-dare-44/node_modules/Reasongl/lib/js/src/web/reasongl_web.js":"NM$$Reasongl$lib$js$src$web$reasongl_web","./Reprocessing_Env.js":"NM$$reprocessing$lib$js$src$Reprocessing_Env","./Reprocessing_Draw.js":"NM$$reprocessing$lib$js$src$Reprocessing_Draw","./Reprocessing_Font.js":"NM$$reprocessing$lib$js$src$Reprocessing_Font","./Reprocessing_Utils.js":"NM$$reprocessing$lib$js$src$Reprocessing_Utils","./Reprocessing_Common.js":"NM$$reprocessing$lib$js$src$Reprocessing_Common","./Reprocessing_Matrix.js":"NM$$reprocessing$lib$js$src$Reprocessing_Matrix","./Reprocessing_Internal.js":"NM$$reprocessing$lib$js$src$Reprocessing_Internal","./Reprocessing_Constants.js":"NM$$reprocessing$lib$js$src$Reprocessing_Constants","./Reprocessing_Hotreload.js":"NM$$reprocessing$lib$js$src$Reprocessing_Hotreload","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"lib$js$src$index":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("// Generated by BUCKLESCRIPT VERSION 4.0.7000, PLEASE EDIT WITH CARE\n'use strict';\n\nvar List = __fastpack_require__(\"bsb-native/lib/js/list.js\");\nvar Curry = __fastpack_require__(\"bsb-native/lib/js/curry.js\");\nvar Assets = __fastpack_require__(\"./Assets.js\");\nvar Common = __fastpack_require__(\"./Common.js\");\nvar Dialog = __fastpack_require__(\"./Dialog.js\");\nvar Caml_obj = __fastpack_require__(\"bsb-native/lib/js/caml_obj.js\");\nvar DrawStuff = __fastpack_require__(\"./DrawStuff.js\");\nvar Reprocessing = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing.js\");\nvar Caml_primitive = __fastpack_require__(\"bsb-native/lib/js/caml_primitive.js\");\nvar Reprocessing_Env = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Env.js\");\nvar Reprocessing_Draw = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Draw.js\");\nvar Reprocessing_Constants = __fastpack_require__(\"/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Constants.js\");\nvar Caml_builtin_exceptions = __fastpack_require__(\"bsb-native/lib/js/caml_builtin_exceptions.js\");\n\nvar bgWidth = 1205 * 0.75 | 0;\n\nvar bgHeight = 667 * 0.75 | 0;\n\nfunction getRoom(kind, rooms) {\n  switch (kind) {\n    case 0 : \n        return rooms[/* office */0];\n    case 1 : \n        return rooms[/* lobby */1];\n    case 2 : \n        return rooms[/* hallway */3];\n    case 3 : \n        return rooms[/* cellar */2];\n    \n  }\n}\n\nfunction updateRoomList(kind, update, rooms) {\n  switch (kind) {\n    case 0 : \n        return /* record */[\n                /* office */Curry._1(update, rooms[/* office */0]),\n                /* lobby */rooms[/* lobby */1],\n                /* cellar */rooms[/* cellar */2],\n                /* hallway */rooms[/* hallway */3]\n              ];\n    case 1 : \n        return /* record */[\n                /* office */rooms[/* office */0],\n                /* lobby */Curry._1(update, rooms[/* lobby */1]),\n                /* cellar */rooms[/* cellar */2],\n                /* hallway */rooms[/* hallway */3]\n              ];\n    case 2 : \n        return /* record */[\n                /* office */rooms[/* office */0],\n                /* lobby */rooms[/* lobby */1],\n                /* cellar */rooms[/* cellar */2],\n                /* hallway */Curry._1(update, rooms[/* hallway */3])\n              ];\n    case 3 : \n        return /* record */[\n                /* office */rooms[/* office */0],\n                /* lobby */rooms[/* lobby */1],\n                /* cellar */Curry._1(update, rooms[/* cellar */2]),\n                /* hallway */rooms[/* hallway */3]\n              ];\n    \n  }\n}\n\nfunction removeItemFromRoom(kind, itemKind, rooms) {\n  return updateRoomList(kind, List.filter((function (i) {\n                    return i[/* kind */0] !== itemKind;\n                  })), rooms);\n}\n\nfunction addItemToRoom(kind, item, rooms) {\n  return updateRoomList(kind, (function (l) {\n                return /* :: */[\n                        item,\n                        l\n                      ];\n              }), rooms);\n}\n\nfunction getRoomAssetName(kind) {\n  switch (kind) {\n    case 0 : \n        return \"office\";\n    case 1 : \n        return \"lobby\";\n    case 2 : \n        return \"hallway\";\n    case 3 : \n        return \"cellar\";\n    \n  }\n}\n\nfunction empty(s) {\n  return s;\n}\n\nfunction print(text, s) {\n  console.log(text);\n  return s;\n}\n\nfunction walkTo(destination, cb, state) {\n  return /* record */[\n          /* position */state[/* position */0],\n          /* destination */destination,\n          /* facingRight */state[/* facingRight */2],\n          /* destinationReachedTrigger */cb,\n          /* flags */state[/* flags */4],\n          /* isBob */state[/* isBob */5],\n          /* sprites */state[/* sprites */6],\n          /* font */state[/* font */7],\n          /* currentRoom */state[/* currentRoom */8],\n          /* mouse */state[/* mouse */9],\n          /* rooms */state[/* rooms */10],\n          /* elapsedTime */state[/* elapsedTime */11],\n          /* holding */state[/* holding */12],\n          /* inventory */state[/* inventory */13],\n          /* altInventory */state[/* altInventory */14],\n          /* dialog */state[/* dialog */15],\n          /* dialogTimer */state[/* dialogTimer */16],\n          /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n        ];\n}\n\nfunction walkToMouse(cb, state) {\n  var destination_000 = /* x */state[/* mouse */9][/* pos */3][/* x */0];\n  var destination_001 = /* y */Caml_primitive.caml_float_min(Caml_primitive.caml_float_max(300, state[/* mouse */9][/* pos */3][/* y */1]), bgHeight);\n  var destination = /* record */[\n    destination_000,\n    destination_001\n  ];\n  return /* record */[\n          /* position */state[/* position */0],\n          /* destination */destination,\n          /* facingRight */state[/* facingRight */2],\n          /* destinationReachedTrigger */cb,\n          /* flags */state[/* flags */4],\n          /* isBob */state[/* isBob */5],\n          /* sprites */state[/* sprites */6],\n          /* font */state[/* font */7],\n          /* currentRoom */state[/* currentRoom */8],\n          /* mouse */state[/* mouse */9],\n          /* rooms */state[/* rooms */10],\n          /* elapsedTime */state[/* elapsedTime */11],\n          /* holding */state[/* holding */12],\n          /* inventory */state[/* inventory */13],\n          /* altInventory */state[/* altInventory */14],\n          /* dialog */state[/* dialog */15],\n          /* dialogTimer */state[/* dialogTimer */16],\n          /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n        ];\n}\n\nfunction dialog(dialog$1, cb, state) {\n  return /* record */[\n          /* position */state[/* position */0],\n          /* destination */state[/* destination */1],\n          /* facingRight */state[/* facingRight */2],\n          /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n          /* flags */state[/* flags */4],\n          /* isBob */state[/* isBob */5],\n          /* sprites */state[/* sprites */6],\n          /* font */state[/* font */7],\n          /* currentRoom */state[/* currentRoom */8],\n          /* mouse */state[/* mouse */9],\n          /* rooms */state[/* rooms */10],\n          /* elapsedTime */state[/* elapsedTime */11],\n          /* holding */state[/* holding */12],\n          /* inventory */state[/* inventory */13],\n          /* altInventory */state[/* altInventory */14],\n          /* dialog */dialog$1,\n          /* dialogTimer */0,\n          /* dialogOverTrigger */cb\n        ];\n}\n\nfunction charDialog(dialogItem, cb, state) {\n  var match = state[/* isBob */5];\n  return dialog(Curry._1(dialogItem, match ? Dialog.People[/* bob */2] : Dialog.People[/* bernard */3]), cb, state);\n}\n\nfunction changeRoom(pos, room, cb, state) {\n  var tmp;\n  if (pos !== undefined) {\n    var p = pos;\n    tmp = /* record */[\n      /* position */p,\n      /* destination */p,\n      /* facingRight */state[/* facingRight */2],\n      /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n      /* flags */state[/* flags */4],\n      /* isBob */state[/* isBob */5],\n      /* sprites */state[/* sprites */6],\n      /* font */state[/* font */7],\n      /* currentRoom */room,\n      /* mouse */state[/* mouse */9],\n      /* rooms */state[/* rooms */10],\n      /* elapsedTime */state[/* elapsedTime */11],\n      /* holding */state[/* holding */12],\n      /* inventory */state[/* inventory */13],\n      /* altInventory */state[/* altInventory */14],\n      /* dialog */state[/* dialog */15],\n      /* dialogTimer */state[/* dialogTimer */16],\n      /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n    ];\n  } else {\n    tmp = /* record */[\n      /* position */state[/* position */0],\n      /* destination */state[/* destination */1],\n      /* facingRight */state[/* facingRight */2],\n      /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n      /* flags */state[/* flags */4],\n      /* isBob */state[/* isBob */5],\n      /* sprites */state[/* sprites */6],\n      /* font */state[/* font */7],\n      /* currentRoom */room,\n      /* mouse */state[/* mouse */9],\n      /* rooms */state[/* rooms */10],\n      /* elapsedTime */state[/* elapsedTime */11],\n      /* holding */state[/* holding */12],\n      /* inventory */state[/* inventory */13],\n      /* altInventory */state[/* altInventory */14],\n      /* dialog */state[/* dialog */15],\n      /* dialogTimer */state[/* dialogTimer */16],\n      /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n    ];\n  }\n  return Curry._1(cb, tmp);\n}\n\nfunction addToInventory(item, cb, state) {\n  return Curry._1(cb, /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory : :: */[\n                item,\n                state[/* inventory */13]\n              ],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16],\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ]);\n}\n\nfunction removeFromInventory(item, cb, state) {\n  return Curry._1(cb, /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */List.filter((function (i) {\n                        return i[/* kind */0] !== item;\n                      }))(state[/* inventory */13]),\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16],\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ]);\n}\n\nfunction removeFromRoom(kind, cb, state) {\n  return Curry._1(cb, /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */removeItemFromRoom(state[/* currentRoom */8], kind, state[/* rooms */10]),\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */state[/* inventory */13],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16],\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ]);\n}\n\nfunction addToRoom(item, cb, state) {\n  return Curry._1(cb, /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */addItemToRoom(state[/* currentRoom */8], item, state[/* rooms */10]),\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */state[/* inventory */13],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16],\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ]);\n}\n\nfunction ifHaveItem(itemKind, first, second, state) {\n  if (List.exists((function (i) {\n            return i[/* kind */0] === itemKind;\n          }), state[/* inventory */13])) {\n    return Curry._1(first, state);\n  } else {\n    return Curry._1(second, state);\n  }\n}\n\nfunction ifFlag(flag, first, second, state) {\n  var exit = 0;\n  var val;\n  try {\n    val = Curry._2(Common.StringMap[/* find */21], flag, state[/* flags */4]);\n    exit = 1;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return Curry._1(second, state);\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    return Curry._1(first, state);\n  }\n  \n}\n\nfunction switchFlag(lst, $$default, state) {\n  var exit = 0;\n  var val;\n  try {\n    val = List.find((function (param) {\n            return Curry._2(Common.StringMap[/* mem */2], param[0], state[/* flags */4]);\n          }), lst);\n    exit = 1;\n  }\n  catch (exn){\n    if (exn === Caml_builtin_exceptions.not_found) {\n      return Curry._1($$default, state);\n    } else {\n      throw exn;\n    }\n  }\n  if (exit === 1) {\n    return Curry._1(val[1], state);\n  }\n  \n}\n\nfunction ifBob(first, second, state) {\n  var match = state[/* isBob */5];\n  if (match) {\n    return Curry._1(first, state);\n  } else {\n    return Curry._1(second, state);\n  }\n}\n\nfunction flag(flag$1, cb, state) {\n  return Curry._1(cb, /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */Curry._3(Common.StringMap[/* add */3], flag$1, /* () */0, state[/* flags */4]),\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */state[/* inventory */13],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16],\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ]);\n}\n\nfunction swap(cb, state) {\n  var inventory = state[/* altInventory */14];\n  var altInventory = state[/* inventory */13];\n  return Curry._1(cb, /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */!state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */inventory,\n              /* altInventory */altInventory,\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16],\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ]);\n}\n\nvar Action = /* module */[\n  /* empty */empty,\n  /* print */print,\n  /* walkTo */walkTo,\n  /* walkToMouse */walkToMouse,\n  /* dialog */dialog,\n  /* charDialog */charDialog,\n  /* changeRoom */changeRoom,\n  /* addToInventory */addToInventory,\n  /* removeFromInventory */removeFromInventory,\n  /* removeFromRoom */removeFromRoom,\n  /* addToRoom */addToRoom,\n  /* ifHaveItem */ifHaveItem,\n  /* ifFlag */ifFlag,\n  /* switchFlag */switchFlag,\n  /* ifBob */ifBob,\n  /* flag */flag,\n  /* swap */swap\n];\n\nvar houseKeys = /* record */[\n  /* kind : Keys */5,\n  /* label */\"House keys\",\n  /* img */\"keys_png\",\n  /* useWith */(function (itemKind, state) {\n      var match = state[/* currentRoom */8];\n      if (itemKind !== 8) {\n        return undefined;\n      } else if (match !== 0) {\n        return /* tuple */[\n                \"unlock\",\n                (function (param) {\n                    return walkToMouse((function (param) {\n                                  return dialog(Dialog.keyDoesntFit, empty, param);\n                                }), param);\n                  })\n              ];\n      } else {\n        return /* tuple */[\n                \"unlock\",\n                (function (param) {\n                    return walkToMouse((function (param) {\n                                  return dialog(Dialog.timeToGoToWork, (function (param) {\n                                                return changeRoom(undefined, /* Lobby */1, empty, param);\n                                              }), param);\n                                }), param);\n                  })\n              ];\n      }\n    })\n];\n\nvar device = /* record */[\n  /* kind : Device */7,\n  /* label */\"Swapping device\",\n  /* img */\"device\",\n  /* useWith */(function (param, param$1) {\n      return undefined;\n    })\n];\n\nvar partial_arg_000 = /* tuple */[\n  \"finished_game\",\n  (function (param) {\n      return dialog(Dialog.stillHere, empty, param);\n    })\n];\n\nvar partial_arg_001 = /* :: */[\n  /* tuple */[\n    \"got_device\",\n    (function (param) {\n        return dialog(Dialog.bernardBeforeSwap, (function (param) {\n                      return flag(\"talked_about_tattoo\", empty, param);\n                    }), param);\n      })\n  ],\n  /* :: */[\n    /* tuple */[\n      \"tried_cellar\",\n      (function (param) {\n          return dialog(Dialog.bernardSwapExplanation1, (function (param) {\n                        return addToInventory(device, (function (param) {\n                                      return dialog(Dialog.bernardSwapExplanation2, (function (param) {\n                                                    return flag(\"got_device\", empty, param);\n                                                  }), param);\n                                    }), param);\n                      }), param);\n        })\n    ],\n    /* [] */0\n  ]\n];\n\nvar partial_arg = /* :: */[\n  partial_arg_000,\n  partial_arg_001\n];\n\nfunction partial_arg$1(param) {\n  return switchFlag(partial_arg, (function (param) {\n                return dialog(Dialog.bernardGoGetChampagne, (function (param) {\n                              return flag(\"spoke_to_bernard\", empty, param);\n                            }), param);\n              }), param);\n}\n\nvar bernard_001 = /* pos */Common.Point[/* create */1](730, 200);\n\nvar bernard_005 = /* img */\"dude_two_full_body\";\n\nfunction bernard_006(param) {\n  return walkToMouse(partial_arg$1, param);\n}\n\nvar bernard = /* record */[\n  /* kind : Bernard */2,\n  bernard_001,\n  /* width */100,\n  /* height */220,\n  /* actionLabel */\"talk\",\n  bernard_005,\n  bernard_006\n];\n\nvar bob_001 = /* pos */Common.Point[/* create */1](730, 200);\n\nvar bob_005 = /* img */\"main_dude_full_body\";\n\nfunction bob_006(param) {\n  return walkToMouse((function (param) {\n                return ifFlag(\"got_champagne\", (function (param) {\n                              return dialog(Dialog.bernardTalkBeforeSwapBack, empty, param);\n                            }), (function (param) {\n                              return flag(\"talked_about_tattoo\", (function (param) {\n                                            return dialog(Dialog.hurryUp, empty, param);\n                                          }), param);\n                            }), param);\n              }), param);\n}\n\nvar bob = /* record */[\n  /* kind : Bob */3,\n  bob_001,\n  /* width */100,\n  /* height */220,\n  /* actionLabel */\"talk\",\n  bob_005,\n  bob_006\n];\n\ndevice[/* useWith */3] = (function (itemKind, _state) {\n    var exit = 0;\n    switch (itemKind) {\n      case 2 : \n          return /* tuple */[\n                  \"swap\",\n                  (function (param) {\n                      return walkToMouse((function (param) {\n                                    return swap((function (param) {\n                                                  return removeFromRoom(/* Bernard */2, (function (param) {\n                                                                return addToRoom(bob, empty, param);\n                                                              }), param);\n                                                }), param);\n                                  }), param);\n                    })\n                ];\n      case 3 : \n          var partial_arg_000 = /* tuple */[\n            \"talked_about_tattoo\",\n            (function (param) {\n                return swap((function (param) {\n                              return removeFromRoom(/* Bob */3, (function (param) {\n                                            return addToRoom(bernard, (function (param) {\n                                                          return dialog(Dialog.bernardAfterSwap, (function (param) {\n                                                                        return removeFromInventory(/* Device */7, (function (param) {\n                                                                                      return flag(\"finished_game\", empty, param);\n                                                                                    }), param);\n                                                                      }), param);\n                                                        }), param);\n                                          }), param);\n                            }), param);\n              })\n          ];\n          var partial_arg_001 = /* :: */[\n            /* tuple */[\n              \"got_champagne\",\n              (function (param) {\n                  return dialog(Dialog.bernardSwapBackDidntTalkAboutTattoo, (function (param) {\n                                return swap((function (param) {\n                                              return removeFromRoom(/* Bob */3, (function (param) {\n                                                            return addToRoom(bernard, (function (param) {\n                                                                          return dialog(Dialog.bernardAfterSwap, (function (param) {\n                                                                                        return removeFromInventory(/* Device */7, (function (param) {\n                                                                                                      return flag(\"finished_game\", empty, param);\n                                                                                                    }), param);\n                                                                                      }), param);\n                                                                        }), param);\n                                                          }), param);\n                                            }), param);\n                              }), param);\n                })\n            ],\n            /* [] */0\n          ];\n          var partial_arg = /* :: */[\n            partial_arg_000,\n            partial_arg_001\n          ];\n          var partial_arg$1 = function (param) {\n            return switchFlag(partial_arg, (function (param) {\n                          return dialog(Dialog.hurryUp, empty, param);\n                        }), param);\n          };\n          return /* tuple */[\n                  \"swap\",\n                  (function (param) {\n                      return walkToMouse(partial_arg$1, param);\n                    })\n                ];\n      case 0 : \n      case 4 : \n          exit = 1;\n          break;\n      case 1 : \n      case 5 : \n      case 6 : \n      case 7 : \n      case 8 : \n      case 9 : \n      case 10 : \n          return undefined;\n      \n    }\n    if (exit === 1) {\n      return /* tuple */[\n              \"swap\",\n              (function (param) {\n                  return charDialog(Dialog.swapPresident, empty, param);\n                })\n            ];\n    }\n    \n  });\n\nvar champagne = /* record */[\n  /* kind : Champagne */6,\n  /* label */\"Champagne\",\n  /* img */\"champagne_png\",\n  /* useWith */(function (itemKind, _state) {\n      var exit = 0;\n      switch (itemKind) {\n        case 0 : \n        case 3 : \n        case 4 : \n            exit = 1;\n            break;\n        case 1 : \n        case 2 : \n        case 5 : \n        case 6 : \n        case 7 : \n        case 8 : \n        case 9 : \n        case 10 : \n            return undefined;\n        \n      }\n      if (exit === 1) {\n        return /* tuple */[\n                \"give\",\n                (function (param) {\n                    return dialog(Dialog.shouldSwapBack, empty, param);\n                  })\n              ];\n      }\n      \n    })\n];\n\nvar Items = /* module */[\n  /* houseKeys */houseKeys,\n  /* device */device,\n  /* bernard */bernard,\n  /* bob */bob,\n  /* champagne */champagne\n];\n\nfunction createRooms(param) {\n  var partial_arg = Common.Point[/* create */1](520, 250);\n  var partial_arg$1 = function (param) {\n    return changeRoom(partial_arg, /* Hallway */2, empty, param);\n  };\n  var partial_arg$2 = function (param) {\n    return walkToMouse(partial_arg$1, param);\n  };\n  var partial_arg$3 = Common.Point[/* create */1](320, 270);\n  var partial_arg$4 = function (param) {\n    return changeRoom(partial_arg$3, /* Hallway */2, empty, param);\n  };\n  var partial_arg$5 = Dialog.Cellar[/* champagne */11];\n  var partial_arg$6 = function (param) {\n    return dialog(partial_arg$5, (function (param) {\n                  return flag(\"got_champagne\", (function (param) {\n                                return addToInventory(champagne, (function (param) {\n                                              return removeFromRoom(/* Champagne */6, empty, param);\n                                            }), param);\n                              }), param);\n                }), param);\n  };\n  var partial_arg$7 = Dialog.Cellar[/* bottle1 */0];\n  var partial_arg$8 = Dialog.Cellar[/* bottle4 */3];\n  var partial_arg$9 = Dialog.Cellar[/* bottle5 */4];\n  var partial_arg$10 = Dialog.Cellar[/* bottle6 */5];\n  var partial_arg$11 = Dialog.Cellar[/* bottle7 */6];\n  var partial_arg$12 = Common.Point[/* create */1](620, 300);\n  var partial_arg$13 = function (param) {\n    return changeRoom(partial_arg$12, /* Lobby */1, empty, param);\n  };\n  var partial_arg$14 = Common.Point[/* create */1](150, 400);\n  var partial_arg$15 = function (param) {\n    return changeRoom(partial_arg$14, /* Cellar */3, empty, param);\n  };\n  var partial_arg$16 = function (param) {\n    return ifBob((function (param) {\n                  return dialog(Dialog.cellarDoorNo, (function (param) {\n                                return flag(\"tried_cellar\", empty, param);\n                              }), param);\n                }), partial_arg$15, param);\n  };\n  return /* record */[\n          /* office : :: */[\n            /* record */[\n              /* kind : Door */8,\n              /* pos */Common.Point[/* create */1](90, 230),\n              /* width */100,\n              /* height */220,\n              /* actionLabel */\"open\",\n              /* img */undefined,\n              /* action */(function (param) {\n                  return walkToMouse((function (param) {\n                                return ifHaveItem(/* Keys */5, (function (param) {\n                                              return dialog(Dialog.doorLocked, empty, param);\n                                            }), (function (param) {\n                                              return dialog(Dialog.keysUnderPhone, empty, param);\n                                            }), param);\n                              }), param);\n                })\n            ],\n            /* :: */[\n              /* record */[\n                /* kind : Phone */10,\n                /* pos */Common.Point[/* create */1](450, 265),\n                /* width */70,\n                /* height */70,\n                /* actionLabel */\"answer\",\n                /* img */undefined,\n                /* action */(function (param) {\n                    return walkToMouse((function (param) {\n                                  return ifFlag(\"talked_to_boss\", (function (param) {\n                                                return dialog(Dialog.noPhone, empty, param);\n                                              }), (function (param) {\n                                                return dialog(Dialog.bossPhoneCall, (function (param) {\n                                                              return addToInventory(houseKeys, (function (param) {\n                                                                            return flag(\"talked_to_boss\", empty, param);\n                                                                          }), param);\n                                                            }), param);\n                                              }), param);\n                                }), param);\n                  })\n              ],\n              /* [] */0\n            ]\n          ],\n          /* lobby : :: */[\n            bernard,\n            /* :: */[\n              /* record */[\n                /* kind : President */0,\n                /* pos */Common.Point[/* create */1](350, 170),\n                /* width */100,\n                /* height */220,\n                /* actionLabel */\"talk\",\n                /* img */\"old_man_full_body\",\n                /* action */(function (param) {\n                    return walkToMouse((function (param) {\n                                  return ifBob((function (param) {\n                                                return ifFlag(\"finished_game\", (function (param) {\n                                                              return dialog(Dialog.presidentBye, empty, param);\n                                                            }), (function (param) {\n                                                              return dialog(Dialog.bobHiToPresident, empty, param);\n                                                            }), param);\n                                              }), (function (param) {\n                                                return dialog(Dialog.bernardHiToPresident, empty, param);\n                                              }), param);\n                                }), param);\n                  })\n              ],\n              /* :: */[\n                /* record */[\n                  /* kind : Person */4,\n                  /* pos */Common.Point[/* create */1](220, 170),\n                  /* width */100,\n                  /* height */220,\n                  /* actionLabel */\"talk\",\n                  /* img */\"lady_full_body\",\n                  /* action */(function (param) {\n                      return walkToMouse((function (param) {\n                                    return ifBob((function (param) {\n                                                  return dialog(Dialog.bobHiToLady, empty, param);\n                                                }), (function (param) {\n                                                  return dialog(Dialog.bernardHiToLady, empty, param);\n                                                }), param);\n                                  }), param);\n                    })\n                ],\n                /* :: */[\n                  /* record */[\n                    /* kind : Door */8,\n                    /* pos */Common.Point[/* create */1](120, 150),\n                    /* width */100,\n                    /* height */220,\n                    /* actionLabel */\"open\",\n                    /* img */undefined,\n                    /* action */(function (param) {\n                        return walkToMouse((function (param) {\n                                      return ifBob((function (param) {\n                                                    return dialog(Dialog.bannedDoor, empty, param);\n                                                  }), (function (param) {\n                                                    return dialog(Dialog.bannedDoorBernard, empty, param);\n                                                  }), param);\n                                    }), param);\n                      })\n                  ],\n                  /* :: */[\n                    /* record */[\n                      /* kind : Other */9,\n                      /* pos */Common.Point[/* create */1](600, 100),\n                      /* width */130,\n                      /* height */240,\n                      /* actionLabel */\"enter\",\n                      /* img */undefined,\n                      /* action */(function (param) {\n                          return ifFlag(\"spoke_to_bernard\", partial_arg$2, (function (param) {\n                                        return dialog(Dialog.shouldTalkToSomePeople, empty, param);\n                                      }), param);\n                        })\n                    ],\n                    /* :: */[\n                      /* record */[\n                        /* kind : Door */8,\n                        /* pos */Common.Point[/* create */1](475, 195),\n                        /* width */70,\n                        /* height */140,\n                        /* actionLabel */\"open\",\n                        /* img */undefined,\n                        /* action */(function (param) {\n                            return walkToMouse((function (param) {\n                                          return charDialog(Dialog.broomCloset, empty, param);\n                                        }), param);\n                          })\n                      ],\n                      /* [] */0\n                    ]\n                  ]\n                ]\n              ]\n            ]\n          ],\n          /* cellar : :: */[\n            /* record */[\n              /* kind : Door */8,\n              /* pos */Common.Point[/* create */1](80, 190),\n              /* width */100,\n              /* height */260,\n              /* actionLabel */\"return\",\n              /* img */undefined,\n              /* action */(function (param) {\n                  return walkToMouse(partial_arg$4, param);\n                })\n            ],\n            /* :: */[\n              /* record */[\n                /* kind : Door */8,\n                /* pos */Common.Point[/* create */1](760, 290),\n                /* width */70,\n                /* height */170,\n                /* actionLabel */\"open\",\n                /* img */undefined,\n                /* action */(function (param) {\n                    return walkToMouse((function (param) {\n                                  return charDialog(Dialog.lockedDoor, empty, param);\n                                }), param);\n                  })\n              ],\n              /* :: */[\n                /* record */[\n                  /* kind : Champagne */6,\n                  /* pos */Common.Point[/* create */1](430, 175),\n                  /* width */50,\n                  /* height */110,\n                  /* actionLabel */\"get\",\n                  /* img */\"champagne_png\",\n                  /* action */(function (param) {\n                      return walkToMouse(partial_arg$6, param);\n                    })\n                ],\n                /* :: */[\n                  /* record */[\n                    /* kind : Bottles */1,\n                    /* pos */Common.Point[/* create */1](560, 160),\n                    /* width */70,\n                    /* height */200,\n                    /* actionLabel */\"inspect\",\n                    /* img */undefined,\n                    /* action */(function (param) {\n                        return dialog(partial_arg$7, empty, param);\n                      })\n                  ],\n                  /* :: */[\n                    /* record */[\n                      /* kind : Bottles */1,\n                      /* pos */Common.Point[/* create */1](290, 170),\n                      /* width */60,\n                      /* height */190,\n                      /* actionLabel */\"inspect\",\n                      /* img */undefined,\n                      /* action */(function (param) {\n                          return dialog(partial_arg$8, empty, param);\n                        })\n                    ],\n                    /* :: */[\n                      /* record */[\n                        /* kind : Bottles */1,\n                        /* pos */Common.Point[/* create */1](375, 165),\n                        /* width */50,\n                        /* height */105,\n                        /* actionLabel */\"inspect\",\n                        /* img */undefined,\n                        /* action */(function (param) {\n                            return dialog(partial_arg$9, empty, param);\n                          })\n                      ],\n                      /* :: */[\n                        /* record */[\n                          /* kind : Bottles */1,\n                          /* pos */Common.Point[/* create */1](485, 165),\n                          /* width */50,\n                          /* height */105,\n                          /* actionLabel */\"inspect\",\n                          /* img */undefined,\n                          /* action */(function (param) {\n                              return dialog(partial_arg$10, empty, param);\n                            })\n                        ],\n                        /* :: */[\n                          /* record */[\n                            /* kind : Bottles */1,\n                            /* pos */Common.Point[/* create */1](370, 290),\n                            /* width */170,\n                            /* height */70,\n                            /* actionLabel */\"inspect\",\n                            /* img */undefined,\n                            /* action */(function (param) {\n                                return dialog(partial_arg$11, empty, param);\n                              })\n                          ],\n                          /* [] */0\n                        ]\n                      ]\n                    ]\n                  ]\n                ]\n              ]\n            ]\n          ],\n          /* hallway : :: */[\n            /* record */[\n              /* kind : Other */9,\n              /* pos */Common.Point[/* create */1](450, 130),\n              /* width */90,\n              /* height */120,\n              /* actionLabel */\"return\",\n              /* img */undefined,\n              /* action */(function (param) {\n                  return walkToMouse(partial_arg$13, param);\n                })\n            ],\n            /* :: */[\n              /* record */[\n                /* kind : Other */9,\n                /* pos */Common.Point[/* create */1](285, 60),\n                /* width */40,\n                /* height */220,\n                /* actionLabel */\"go down\",\n                /* img */undefined,\n                /* action */(function (param) {\n                    return walkToMouse(partial_arg$16, param);\n                  })\n              ],\n              /* :: */[\n                /* record */[\n                  /* kind : Other */9,\n                  /* pos */Common.Point[/* create */1](355, 135),\n                  /* width */40,\n                  /* height */120,\n                  /* actionLabel */\"open\",\n                  /* img */undefined,\n                  /* action */(function (param) {\n                      return walkToMouse((function (param) {\n                                    return charDialog(Dialog.paintingDoor, empty, param);\n                                  }), param);\n                    })\n                ],\n                /* :: */[\n                  /* record */[\n                    /* kind : Door */8,\n                    /* pos */Common.Point[/* create */1](120, 50),\n                    /* width */100,\n                    /* height */290,\n                    /* actionLabel */\"open\",\n                    /* img */undefined,\n                    /* action */(function (param) {\n                        return walkToMouse((function (param) {\n                                      return charDialog(Dialog.lockedDoor, empty, param);\n                                    }), param);\n                      })\n                  ],\n                  /* [] */0\n                ]\n              ]\n            ]\n          ]\n        ];\n}\n\nfunction setup(spritesheetData, env) {\n  Reprocessing_Env.size(bgWidth, bgHeight + 140 | 0, env);\n  var pos = Common.Point[/* create */1](400, 400);\n  return /* record */[\n          /* position */pos,\n          /* destination */pos,\n          /* facingRight */false,\n          /* destinationReachedTrigger */undefined,\n          /* flags */Common.StringMap[/* empty */0],\n          /* isBob */true,\n          /* sprites */Common.Sprite[/* create */0](Reprocessing_Draw.loadImage(\"assets/spritesheet/sprites.png\", undefined, env), spritesheetData),\n          /* font */Reprocessing_Draw.loadFont(\"assets/tragicmarker_2x.fnt\", undefined, env),\n          /* currentRoom : Office */0,\n          /* mouse : record */[\n            /* down */false,\n            /* up */false,\n            /* pressed */false,\n            /* pos */Common.Point[/* fromIntPair */4](Reprocessing_Env.mouse(env))\n          ],\n          /* rooms */createRooms(/* () */0),\n          /* elapsedTime */0,\n          /* holding */undefined,\n          /* inventory : [] */0,\n          /* altInventory : :: */[\n            device,\n            /* [] */0\n          ],\n          /* dialog : [] */0,\n          /* dialogTimer */0,\n          /* dialogOverTrigger */undefined\n        ];\n}\n\nfunction handleWorldMouse(state, env) {\n  var mouse = state[/* mouse */9][/* pos */3];\n  var processItems = function (_items, held, state) {\n    while(true) {\n      var items = _items;\n      if (items) {\n        var match = items[0];\n        var match$1 = match[/* pos */1];\n        var y = match$1[/* y */1];\n        var x = match$1[/* x */0];\n        if (mouse[/* x */0] >= x && mouse[/* y */1] >= y && mouse[/* x */0] <= x + match[/* width */2] && mouse[/* y */1] <= y + match[/* height */3]) {\n          if (held !== undefined) {\n            var match$2 = Curry._2(held[/* useWith */3], match[/* kind */0], state);\n            if (match$2 !== undefined) {\n              var match$3 = match$2;\n              DrawStuff.actionLabel(match$3[0], mouse, state[/* font */7], env);\n              var match$4 = state[/* mouse */9][/* up */1];\n              return /* tuple */[\n                      true,\n                      match$4 ? Curry._1(match$3[1], state) : state\n                    ];\n            } else {\n              return /* tuple */[\n                      true,\n                      state\n                    ];\n            }\n          } else {\n            DrawStuff.actionLabel(match[/* actionLabel */4], mouse, state[/* font */7], env);\n            if (state[/* mouse */9][/* up */1]) {\n              return /* tuple */[\n                      true,\n                      Curry._1(match[/* action */6], state)\n                    ];\n            } else {\n              return /* tuple */[\n                      true,\n                      state\n                    ];\n            }\n          }\n        } else {\n          _items = items[1];\n          continue ;\n        }\n      } else {\n        return /* tuple */[\n                false,\n                state\n              ];\n      }\n    };\n  };\n  var match = processItems(getRoom(state[/* currentRoom */8], state[/* rooms */10]), state[/* holding */12], state);\n  var state$1 = match[1];\n  var state$2;\n  if (mouse[/* y */1] > 300 && !match[0] && state$1[/* holding */12] === undefined) {\n    if (Caml_obj.caml_equal(state$1[/* destination */1], state$1[/* position */0])) {\n      DrawStuff.actionLabel(\"walk\", mouse, state$1[/* font */7], env);\n    }\n    var match$1 = state$1[/* mouse */9][/* up */1];\n    state$2 = match$1 ? walkToMouse(empty, state$1) : state$1;\n  } else {\n    state$2 = state$1;\n  }\n  var match$2 = state$2[/* mouse */9][/* up */1];\n  if (match$2) {\n    return /* record */[\n            /* position */state$2[/* position */0],\n            /* destination */state$2[/* destination */1],\n            /* facingRight */state$2[/* facingRight */2],\n            /* destinationReachedTrigger */state$2[/* destinationReachedTrigger */3],\n            /* flags */state$2[/* flags */4],\n            /* isBob */state$2[/* isBob */5],\n            /* sprites */state$2[/* sprites */6],\n            /* font */state$2[/* font */7],\n            /* currentRoom */state$2[/* currentRoom */8],\n            /* mouse */state$2[/* mouse */9],\n            /* rooms */state$2[/* rooms */10],\n            /* elapsedTime */state$2[/* elapsedTime */11],\n            /* holding */undefined,\n            /* inventory */state$2[/* inventory */13],\n            /* altInventory */state$2[/* altInventory */14],\n            /* dialog */state$2[/* dialog */15],\n            /* dialogTimer */state$2[/* dialogTimer */16],\n            /* dialogOverTrigger */state$2[/* dialogOverTrigger */17]\n          ];\n  } else {\n    return state$2;\n  }\n}\n\nfunction draw(state, env) {\n  var init = state[/* mouse */9];\n  var state_000 = /* position */state[/* position */0];\n  var state_001 = /* destination */state[/* destination */1];\n  var state_002 = /* facingRight */state[/* facingRight */2];\n  var state_003 = /* destinationReachedTrigger */state[/* destinationReachedTrigger */3];\n  var state_004 = /* flags */state[/* flags */4];\n  var state_005 = /* isBob */state[/* isBob */5];\n  var state_006 = /* sprites */state[/* sprites */6];\n  var state_007 = /* font */state[/* font */7];\n  var state_008 = /* currentRoom */state[/* currentRoom */8];\n  var state_009 = /* mouse : record */[\n    /* down */init[/* down */0],\n    /* up */init[/* up */1],\n    /* pressed */init[/* pressed */2],\n    /* pos */Common.Point[/* fromIntPair */4](Reprocessing_Env.mouse(env))\n  ];\n  var state_010 = /* rooms */state[/* rooms */10];\n  var state_011 = /* elapsedTime */state[/* elapsedTime */11];\n  var state_012 = /* holding */state[/* holding */12];\n  var state_013 = /* inventory */state[/* inventory */13];\n  var state_014 = /* altInventory */state[/* altInventory */14];\n  var state_015 = /* dialog */state[/* dialog */15];\n  var state_016 = /* dialogTimer */state[/* dialogTimer */16];\n  var state_017 = /* dialogOverTrigger */state[/* dialogOverTrigger */17];\n  var state$1 = /* record */[\n    state_000,\n    state_001,\n    state_002,\n    state_003,\n    state_004,\n    state_005,\n    state_006,\n    state_007,\n    state_008,\n    state_009,\n    state_010,\n    state_011,\n    state_012,\n    state_013,\n    state_014,\n    state_015,\n    state_016,\n    state_017\n  ];\n  var state$2 = Reprocessing_Env.keyPressed(/* R */42, env) ? /* record */[\n      state_000,\n      state_001,\n      state_002,\n      state_003,\n      state_004,\n      state_005,\n      state_006,\n      state_007,\n      state_008,\n      state_009,\n      /* rooms */createRooms(/* () */0),\n      state_011,\n      state_012,\n      state_013,\n      state_014,\n      state_015,\n      state_016,\n      state_017\n    ] : state$1;\n  var state$3 = Reprocessing_Env.keyPressed(/* T */44, env) ? /* record */[\n      /* position */state$2[/* position */0],\n      /* destination */state$2[/* destination */1],\n      /* facingRight */state$2[/* facingRight */2],\n      /* destinationReachedTrigger */state$2[/* destinationReachedTrigger */3],\n      /* flags */state$2[/* flags */4],\n      /* isBob */false,\n      /* sprites */state$2[/* sprites */6],\n      /* font */state$2[/* font */7],\n      /* currentRoom : Cellar */3,\n      /* mouse */state$2[/* mouse */9],\n      /* rooms */state$2[/* rooms */10],\n      /* elapsedTime */state$2[/* elapsedTime */11],\n      /* holding */state$2[/* holding */12],\n      /* inventory */state$2[/* inventory */13],\n      /* altInventory */state$2[/* altInventory */14],\n      /* dialog */state$2[/* dialog */15],\n      /* dialogTimer */state$2[/* dialogTimer */16],\n      /* dialogOverTrigger */state$2[/* dialogOverTrigger */17]\n    ] : state$2;\n  Reprocessing_Draw.background(Reprocessing_Constants.white, env);\n  DrawStuff.sprite(state$3[/* sprites */6], getRoomAssetName(state$3[/* currentRoom */8]), Common.Point[/* create */1](bgWidth / 2, bgHeight / 2), undefined, 0.75, env);\n  List.iter((function (param) {\n          var img = param[/* img */5];\n          var pos = param[/* pos */1];\n          if (img !== undefined) {\n            return DrawStuff.spriteUncentered(state$3[/* sprites */6], img, pos, undefined, 0.7, env);\n          } else {\n            return /* () */0;\n          }\n        }), getRoom(state$3[/* currentRoom */8], state$3[/* rooms */10]));\n  var match = state$3[/* isBob */5];\n  var num = match ? \"one\" : \"two\";\n  var spriteBody;\n  if (Caml_obj.caml_equal(state$3[/* position */0], state$3[/* destination */1])) {\n    spriteBody = \"body_\" + (num + \"_stand\");\n  } else {\n    var match$1 = (state$3[/* elapsedTime */11] / 0.1 | 0) % 4;\n    switch (match$1) {\n      case 1 : \n          spriteBody = \"body_\" + (num + \"_walk_one\");\n          break;\n      case 0 : \n      case 2 : \n          spriteBody = \"body_\" + (num + \"_stand\");\n          break;\n      default:\n        spriteBody = \"body_\" + (num + \"_walk_two\");\n    }\n  }\n  DrawStuff.sprite(state$3[/* sprites */6], spriteBody, state$3[/* position */0], state$3[/* facingRight */2], 0.8, env);\n  var match$2 = state$3[/* isBob */5];\n  DrawStuff.sprite(state$3[/* sprites */6], match$2 ? \"dude\" : \"dude_two_png\", Common.Point[/* + */9](state$3[/* position */0], Common.Point[/* create */1](0, -100)), state$3[/* facingRight */2], 0.6, env);\n  var invSlotsf = 8;\n  var invPadding = (Reprocessing_Env.width(env) - 80 * invSlotsf) / (invSlotsf + 1);\n  var invTop = Reprocessing_Env.height(env) - 140;\n  var invItemTop = invTop + invPadding;\n  Reprocessing_Draw.pushStyle(env);\n  Reprocessing_Draw.fill(Reprocessing_Constants.white, env);\n  Reprocessing_Draw.stroke(Reprocessing_Constants.black, env);\n  Reprocessing_Draw.strokeWeight(4, env);\n  Reprocessing_Draw.rectf(/* tuple */[\n        -5,\n        invTop\n      ], Reprocessing_Env.width(env) + 10, 140, env);\n  for(var i = 0; i <= 7; ++i){\n    Reprocessing_Draw.rectf(/* tuple */[\n          i * (80 + invPadding) + invPadding,\n          invItemTop\n        ], 80, 80, env);\n  }\n  Reprocessing_Draw.popStyle(env);\n  List.iteri((function (i, param) {\n          var pos = Common.Point[/* create */1](i * (80 + invPadding) + invPadding + 80 / 2, invItemTop + 80 / 2);\n          return DrawStuff.sprite(state$3[/* sprites */6], param[/* img */2], pos, undefined, 0.5, env);\n        }), state$3[/* inventory */13]);\n  var match$3 = state$3[/* holding */12];\n  if (match$3 !== undefined) {\n    DrawStuff.sprite(state$3[/* sprites */6], match$3[/* img */2], state$3[/* mouse */9][/* pos */3], undefined, 0.5, env);\n  }\n  var match$4 = Caml_obj.caml_equal(state$3[/* position */0], state$3[/* destination */1]);\n  var match$5 = state$3[/* destinationReachedTrigger */3];\n  var state$4 = match$4 && match$5 !== undefined ? Curry._1(match$5, /* record */[\n          /* position */state$3[/* position */0],\n          /* destination */state$3[/* destination */1],\n          /* facingRight */state$3[/* facingRight */2],\n          /* destinationReachedTrigger */undefined,\n          /* flags */state$3[/* flags */4],\n          /* isBob */state$3[/* isBob */5],\n          /* sprites */state$3[/* sprites */6],\n          /* font */state$3[/* font */7],\n          /* currentRoom */state$3[/* currentRoom */8],\n          /* mouse */state$3[/* mouse */9],\n          /* rooms */state$3[/* rooms */10],\n          /* elapsedTime */state$3[/* elapsedTime */11],\n          /* holding */state$3[/* holding */12],\n          /* inventory */state$3[/* inventory */13],\n          /* altInventory */state$3[/* altInventory */14],\n          /* dialog */state$3[/* dialog */15],\n          /* dialogTimer */state$3[/* dialogTimer */16],\n          /* dialogOverTrigger */state$3[/* dialogOverTrigger */17]\n        ]) : state$3;\n  var dialogClick = function (state, tl) {\n    if (state[/* mouse */9][/* up */1] && state[/* dialogTimer */16] <= 0.7) {\n      return /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */state[/* inventory */13],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */0.7,\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ];\n    } else if (state[/* mouse */9][/* up */1] && tl === /* [] */0) {\n      var newState_000 = /* position */state[/* position */0];\n      var newState_001 = /* destination */state[/* destination */1];\n      var newState_002 = /* facingRight */state[/* facingRight */2];\n      var newState_003 = /* destinationReachedTrigger */state[/* destinationReachedTrigger */3];\n      var newState_004 = /* flags */state[/* flags */4];\n      var newState_005 = /* isBob */state[/* isBob */5];\n      var newState_006 = /* sprites */state[/* sprites */6];\n      var newState_007 = /* font */state[/* font */7];\n      var newState_008 = /* currentRoom */state[/* currentRoom */8];\n      var newState_009 = /* mouse */state[/* mouse */9];\n      var newState_010 = /* rooms */state[/* rooms */10];\n      var newState_011 = /* elapsedTime */state[/* elapsedTime */11];\n      var newState_012 = /* holding */state[/* holding */12];\n      var newState_013 = /* inventory */state[/* inventory */13];\n      var newState_014 = /* altInventory */state[/* altInventory */14];\n      var newState = /* record */[\n        newState_000,\n        newState_001,\n        newState_002,\n        newState_003,\n        newState_004,\n        newState_005,\n        newState_006,\n        newState_007,\n        newState_008,\n        newState_009,\n        newState_010,\n        newState_011,\n        newState_012,\n        newState_013,\n        newState_014,\n        /* dialog : [] */0,\n        /* dialogTimer */0,\n        /* dialogOverTrigger */undefined\n      ];\n      var match = state[/* dialogOverTrigger */17];\n      if (match !== undefined) {\n        return Curry._1(match, newState);\n      } else {\n        return newState;\n      }\n    } else if (state[/* mouse */9][/* up */1]) {\n      return /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */state[/* inventory */13],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */tl,\n              /* dialogTimer */0,\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ];\n    } else {\n      return /* record */[\n              /* position */state[/* position */0],\n              /* destination */state[/* destination */1],\n              /* facingRight */state[/* facingRight */2],\n              /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n              /* flags */state[/* flags */4],\n              /* isBob */state[/* isBob */5],\n              /* sprites */state[/* sprites */6],\n              /* font */state[/* font */7],\n              /* currentRoom */state[/* currentRoom */8],\n              /* mouse */state[/* mouse */9],\n              /* rooms */state[/* rooms */10],\n              /* elapsedTime */state[/* elapsedTime */11],\n              /* holding */state[/* holding */12],\n              /* inventory */state[/* inventory */13],\n              /* altInventory */state[/* altInventory */14],\n              /* dialog */state[/* dialog */15],\n              /* dialogTimer */state[/* dialogTimer */16] + Reprocessing_Env.deltaTime(env),\n              /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n            ];\n    }\n  };\n  var hoveringInventoryItem = function (mouse, _i, _items) {\n    while(true) {\n      var items = _items;\n      var i = _i;\n      if (items) {\n        var rectPos = Common.Point[/* create */1](i * (80 + invPadding) + invPadding, invItemTop);\n        if (mouse[/* x */0] >= rectPos[/* x */0] && mouse[/* y */1] >= rectPos[/* y */1] && mouse[/* x */0] <= rectPos[/* x */0] + 80 && mouse[/* y */1] <= rectPos[/* y */1] + 80) {\n          return items[0];\n        } else {\n          _items = items[1];\n          _i = i + 1 | 0;\n          continue ;\n        }\n      } else {\n        return undefined;\n      }\n    };\n  };\n  var match$6 = state$4[/* mouse */9][/* pos */3][/* y */1] > Reprocessing_Env.height(env) - 140;\n  var match$7 = state$4[/* dialog */15];\n  var state$5;\n  var exit = 0;\n  if (match$6) {\n    if (match$7) {\n      exit = 1;\n    } else {\n      var match$8 = hoveringInventoryItem(state$4[/* mouse */9][/* pos */3], 0, state$4[/* inventory */13]);\n      if (match$8 !== undefined) {\n        var item = match$8;\n        DrawStuff.actionLabel(item[/* label */1], state$4[/* mouse */9][/* pos */3], state$4[/* font */7], env);\n        var match$9 = state$4[/* mouse */9][/* down */0];\n        state$5 = match$9 ? /* record */[\n            /* position */state$4[/* position */0],\n            /* destination */state$4[/* destination */1],\n            /* facingRight */state$4[/* facingRight */2],\n            /* destinationReachedTrigger */state$4[/* destinationReachedTrigger */3],\n            /* flags */state$4[/* flags */4],\n            /* isBob */state$4[/* isBob */5],\n            /* sprites */state$4[/* sprites */6],\n            /* font */state$4[/* font */7],\n            /* currentRoom */state$4[/* currentRoom */8],\n            /* mouse */state$4[/* mouse */9],\n            /* rooms */state$4[/* rooms */10],\n            /* elapsedTime */state$4[/* elapsedTime */11],\n            /* holding */item,\n            /* inventory */state$4[/* inventory */13],\n            /* altInventory */state$4[/* altInventory */14],\n            /* dialog */state$4[/* dialog */15],\n            /* dialogTimer */state$4[/* dialogTimer */16],\n            /* dialogOverTrigger */state$4[/* dialogOverTrigger */17]\n          ] : state$4;\n      } else {\n        state$5 = state$4;\n      }\n    }\n  } else if (match$7) {\n    exit = 1;\n  } else {\n    state$5 = handleWorldMouse(state$4, env);\n  }\n  if (exit === 1) {\n    var match$10 = match$7[0];\n    var label = match$10[/* label */1];\n    var assetName = match$10[/* assetName */0];\n    DrawStuff.Dialog[/* box */4](env);\n    if (match$10[/* character */2]) {\n      DrawStuff.Dialog[/* face */5]((Reprocessing_Env.width(env) - 120 | 0) - 10 | 0, assetName, label, state$4[/* sprites */6], state$4[/* font */7], env);\n      DrawStuff.Dialog[/* text */6](120, match$10[/* content */3], state$4[/* dialogTimer */16] / 0.7, state$4[/* font */7], env);\n      if (state$4[/* dialogTimer */16] > 0.7 + 1) {\n        DrawStuff.Dialog[/* next */7](state$4[/* dialogTimer */16] - 0.7 - 1.5, state$4[/* font */7], env);\n      }\n      state$5 = dialogClick(state$4, match$7[1]);\n    } else {\n      DrawStuff.Dialog[/* face */5](120, assetName, label, state$4[/* sprites */6], state$4[/* font */7], env);\n      DrawStuff.Dialog[/* text */6](200, match$10[/* content */3], state$4[/* dialogTimer */16] / 0.7, state$4[/* font */7], env);\n      if (state$4[/* dialogTimer */16] > 0.7 + 1) {\n        DrawStuff.Dialog[/* next */7](state$4[/* dialogTimer */16] - 0.7 - 1.5, state$4[/* font */7], env);\n      }\n      state$5 = dialogClick(state$4, match$7[1]);\n    }\n  }\n  var init$1 = state$5[/* mouse */9];\n  return /* record */[\n          /* position */Common.Point[/* moveTo */7](state$5[/* position */0], state$5[/* destination */1], 300 * Reprocessing_Env.deltaTime(env)),\n          /* destination */state$5[/* destination */1],\n          /* facingRight */state$5[/* position */0][/* x */0] < state$5[/* destination */1][/* x */0] || state$5[/* position */0][/* x */0] === state$5[/* destination */1][/* x */0] && state$5[/* facingRight */2],\n          /* destinationReachedTrigger */state$5[/* destinationReachedTrigger */3],\n          /* flags */state$5[/* flags */4],\n          /* isBob */state$5[/* isBob */5],\n          /* sprites */state$5[/* sprites */6],\n          /* font */state$5[/* font */7],\n          /* currentRoom */state$5[/* currentRoom */8],\n          /* mouse : record */[\n            /* down */false,\n            /* up */false,\n            /* pressed */init$1[/* pressed */2],\n            /* pos */init$1[/* pos */3]\n          ],\n          /* rooms */state$5[/* rooms */10],\n          /* elapsedTime */state$5[/* elapsedTime */11] + Reprocessing_Env.deltaTime(env),\n          /* holding */state$5[/* holding */12],\n          /* inventory */state$5[/* inventory */13],\n          /* altInventory */state$5[/* altInventory */14],\n          /* dialog */state$5[/* dialog */15],\n          /* dialogTimer */state$5[/* dialogTimer */16],\n          /* dialogOverTrigger */state$5[/* dialogOverTrigger */17]\n        ];\n}\n\nfunction mouseDown(state, param) {\n  var init = state[/* mouse */9];\n  return /* record */[\n          /* position */state[/* position */0],\n          /* destination */state[/* destination */1],\n          /* facingRight */state[/* facingRight */2],\n          /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n          /* flags */state[/* flags */4],\n          /* isBob */state[/* isBob */5],\n          /* sprites */state[/* sprites */6],\n          /* font */state[/* font */7],\n          /* currentRoom */state[/* currentRoom */8],\n          /* mouse : record */[\n            /* down */true,\n            /* up */false,\n            /* pressed */true,\n            /* pos */init[/* pos */3]\n          ],\n          /* rooms */state[/* rooms */10],\n          /* elapsedTime */state[/* elapsedTime */11],\n          /* holding */state[/* holding */12],\n          /* inventory */state[/* inventory */13],\n          /* altInventory */state[/* altInventory */14],\n          /* dialog */state[/* dialog */15],\n          /* dialogTimer */state[/* dialogTimer */16],\n          /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n        ];\n}\n\nfunction mouseUp(state, param) {\n  var init = state[/* mouse */9];\n  return /* record */[\n          /* position */state[/* position */0],\n          /* destination */state[/* destination */1],\n          /* facingRight */state[/* facingRight */2],\n          /* destinationReachedTrigger */state[/* destinationReachedTrigger */3],\n          /* flags */state[/* flags */4],\n          /* isBob */state[/* isBob */5],\n          /* sprites */state[/* sprites */6],\n          /* font */state[/* font */7],\n          /* currentRoom */state[/* currentRoom */8],\n          /* mouse : record */[\n            /* down */false,\n            /* up */true,\n            /* pressed */false,\n            /* pos */init[/* pos */3]\n          ],\n          /* rooms */state[/* rooms */10],\n          /* elapsedTime */state[/* elapsedTime */11],\n          /* holding */state[/* holding */12],\n          /* inventory */state[/* inventory */13],\n          /* altInventory */state[/* altInventory */14],\n          /* dialog */state[/* dialog */15],\n          /* dialogTimer */state[/* dialogTimer */16],\n          /* dialogOverTrigger */state[/* dialogOverTrigger */17]\n        ];\n}\n\nAssets.loadSpriteSheet(\"assets/spritesheet/sprites.json\", (function (assets) {\n        return Reprocessing.run((function (param) {\n                      return setup(assets, param);\n                    }), undefined, draw, undefined, undefined, mouseDown, mouseUp, undefined, undefined, undefined, /* () */0);\n      }));\n\nvar debug = false;\n\nvar floorHeight = 300;\n\nvar inventoryPanelHeight = 140;\n\nvar dialogScrollTime = 0.7;\n\nvar bgScale = 0.75;\n\nexports.debug = debug;\nexports.floorHeight = floorHeight;\nexports.inventoryPanelHeight = inventoryPanelHeight;\nexports.dialogScrollTime = dialogScrollTime;\nexports.bgScale = bgScale;\nexports.bgWidth = bgWidth;\nexports.bgHeight = bgHeight;\nexports.getRoom = getRoom;\nexports.updateRoomList = updateRoomList;\nexports.removeItemFromRoom = removeItemFromRoom;\nexports.addItemToRoom = addItemToRoom;\nexports.getRoomAssetName = getRoomAssetName;\nexports.Action = Action;\nexports.Items = Items;\nexports.createRooms = createRooms;\nexports.setup = setup;\nexports.handleWorldMouse = handleWorldMouse;\nexports.draw = draw;\nexports.mouseDown = mouseDown;\nexports.mouseUp = mouseUp;\n/* bernard Not a pure module */\n\n//# sourceURL=fpack:///lib/js/src/index.js\n//# sourceURL=fpack:///lib/js/src/index.js");
},
d: {"bsb-native/lib/js/list.js":"NM$$bsb$$_$$native$lib$js$list","bsb-native/lib/js/curry.js":"NM$$bsb$$_$$native$lib$js$curry","./Assets.js":"lib$js$src$Assets","./Common.js":"lib$js$src$Common","./Dialog.js":"lib$js$src$Dialog","bsb-native/lib/js/caml_obj.js":"NM$$bsb$$_$$native$lib$js$caml_obj","./DrawStuff.js":"lib$js$src$DrawStuff","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing.js":"NM$$reprocessing$lib$js$src$Reprocessing","bsb-native/lib/js/caml_primitive.js":"NM$$bsb$$_$$native$lib$js$caml_primitive","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Env.js":"NM$$reprocessing$lib$js$src$Reprocessing_Env","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Draw.js":"NM$$reprocessing$lib$js$src$Reprocessing_Draw","/Users/schmave/Documents/git/ludum-dare-44/node_modules/reprocessing/lib/js/src/Reprocessing_Constants.js":"NM$$reprocessing$lib$js$src$Reprocessing_Constants","bsb-native/lib/js/caml_builtin_exceptions.js":"NM$$bsb$$_$$native$lib$js$caml_builtin_exceptions"}
},
"$fp$main":{m:function(module, exports, __fastpack_require__, __fastpack_import__) {
eval("module.exports.__esModule = true;\n__fastpack_require__(\"./lib/js/src/index.js\");\n\n\n\n//# sourceURL=fpack:///$fp$main\n//# sourceURL=fpack:///$fp$main");
},
d: {"./lib/js/src/index.js":"lib$js$src$index"}
},

});
